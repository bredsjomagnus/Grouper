<?php 
/* Cachekey: cache/stash_default/documentation\api\php\22b0359b44ceec1b492afd5253d8ecf7/ */
/* Type: array */
/* Expiration: 2018-05-26T13:57:36+00:00 */



$loaded = true;
$expiration = 1527343056;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"8b103a60deab332474269c7d9de02b56";s:39:" phpDocumentor\Reflection\Php\File name";s:8:"Text.php";s:39:" phpDocumentor\Reflection\Php\File path";s:57:"vendor/fzaninotto/faker/src/Faker/Provider/ro_RO/Text.php";s:41:" phpDocumentor\Reflection\Php\File source";s:20663:"<?php

namespace Faker\Provider\ro_RO;

class Text extends \Faker\Provider\Text
{
    /**
     * Title: Neghiniţă
     * Author: Barbu Ştefănescu Delavrancea
     *
     * Language: Romanian
     *
     * @see https://creativecommons.org/licenses/by-sa/3.0/deed.en
     * @link https://ro.wikisource.org/wiki/Neghini%C8%9B%C4%83
     * @var string
     */
    protected static $baseText = <<<'EOT'

A fost odată o babă, bătrână, bătrână. Abia zărea de bătrână ce era. Şi mâinile îi umblau la ciorap, iar în gândul ei se ruga la Dumnezeu s-o dăruiască cu un copil, că n-avea decât pe unchiaşul ei. Şi unchiaşul, ba la pădure, ba la arie, ba la târg, iar baba sta singură cuc, că toată ziulica i-ar fi ţiuit tăcerea în fundul urechilor dacă n-ar fi strănutat şi n-ar fi tuşit câteodată. Ba uneori, ca să-şi mai ţie de urât, tot ea vorbea şi tot ea răspundea. Şi râdea ea de ea, ca şi cum ar fi râs ea de altcineva, înşirând ochiurile pe cârlige.
 - Ei, ei, ce n-ar plăti un flăcău la bătrâneţile noastre!
 - Cât, de? cât?
 - Îhi, îhi, mult de tot!
 - Adică ce, nu te-ai mulţumi şi c-o fată mare?
 - Ba, ce să zic, bine ar fi ş-o fată…
 - Da, dar la fată vrea zestre.
 - S-ar găsi, că eu şi unchiaşul avem ce ne trebuie şi nu ne trebuie mult, trei coţi de pânză albă şi câte un coşciug; iar boii moşului, iar plugul moşului, iar casa moşului şi a babei, toate ar fi ale fetei.
 - Bine, mătuşă, bine, da’ de unde şi fată? Tu nu ştii că copacii uscaţi nu mai dau de la rădăcină?
Şi bătrâna începu să râdă şi să ofteze: "hi, hi, hi, ooof, of!"
 - Ei, toate se întorc, şi apele se întorc de la Dumnezeu, numai tinereţile ba. Ce nu e la timp nu mai e niciodată. M-aş mulţumi eu şi pe un prichindel de băiat.
 - Ba te-ai mulţumi şi pe-o codană. Tu să-nşiri, şi ea să deşire, tu să cerni, şi ea să risipească, tu să pui de mămăligă, şi ea să răstoarne căldarea pe foc.
 - Dacă e pe-aşa, m-aş mulţumi şi pe-un copil cât ghemul, numai s-aud în casă "mamă", că mult e pustiu când uşa se închide peste doi bătrâni.
 - Da’ dacă ar fi mai mic?
 - Fie şi mai mic. Şi bătrâna începu să râdă.
 - Ce neroadă!
 - Ba neroadă, nu glumă!
 - Dar dacă ar fi cât un bob de mazăre? Şi tocmai când da bătrâna capul peste cap de râs, odată tresări că, de după uşă, se-auzi un glas ascuţit şi înţepat:
 - Dar dacă ar fi cât o neghiniţă? Bătrâna se uită, se uită şi începu să se închine.
 - Bine, bine, zise acelaşi glas, văd eu că nu-ţi trebuie copii… Baba îşi luă inima în dinţi şi zise:
 - Ba-mi trebuie… da’ unde eşti… cine eşti?
 - Cine sunt? Neghiniţă, gândul lumii. De mic ce sunt, pătrund în urechile oamenilor şi-i ascult cum gândesc. Adineauri eram în urechea ta a dreaptă, apoi am trecut în a stângă, ş-am râs de m-am prăpădit când am văzut ce-ţi trec prin minte…
 - Ei, aş! Ce mi-a trecut? Nimic!
 - Nu e adevărat, răspunse Neghiniţă râzând, omul spune mai puţin decât gândeşte. Dacă nu-ţi şopteam eu că copacul uscat nu mai dă de la rădăcină, cine ştie ce-ai mai fi spus…
Baba se făcu ca para focului.
 - Zău aşa… nu te ruşina, mamă, nu zău… Aşa e omul. Când e mic face nebunii fiindcă e mic; când e la tinereţe face nebunii fiindcă e tânăr, iar la bătrâneţe se gândeşte la nebunii fiindcă nu le poate face…
Bătrâna pierdu sfiala şi răbdarea şi se răsti cât putu:
 - Neghiniţă, ci tacă-ţi gura şi vin să te văd! Şi pe loc se-auzi un ţâşt ca de lăcustă şi un bâzâit ca de albină. Bătrâna simţi pe mână o picătura caldă.
 - Iacătă-mă şi pe mine!… Biata femeie făcu nişte ochi mari cât toate zilele şi se miră toată de ce văzu pe mână, că cerul de i s-ar fi deschis nu s-ar fi minunat mai mult.
Neghiniţă era frumos ca o piatră scumpă; şi era mic cât o neghină; şi avea nişte ochişori ca două scântei albastre, şi nişte mâini şi picioruşe ca nişte firişoare de păiajen.
Bătrâna dădu să-l sărute. Neghiniţă, ţâşti pe nas, ţâşti iar pe mână!
 - Încet, mamă, încet, că mă striveşti, zise Neghiniţă.
 - Să te sărut, că-mi umpluşi casa cu dragoste când îmi ziseşi mamă.
 - Încet, să nu mă sorbi. Îl sărută.
 - Cum mănânci tu, Neghiniţă al maicăi?
 - Eu? Eu mă satur din fum. Până acum am mâncat la mese împărăteşti fără să ştie nimeni. Şi ce-am mai râs când ceilalţi tremurau înaintea împăraţilor, iar eu mă plimbam prin urechile lor şi le aflam gândul.
 - Bine o fi de ei, Neghiniţă mamă…
 - Aş, binele focului! Săracii mor de foame, iar ei mor de mâncare. De săraci e rău că n-au cui să poruncească, şi de ei e rău că trebuie să poruncească la mulţi. Pe ceilalţi oameni când îi minţi te iau de guler şi te judecă judecată dreaptă; pe ei îi minţi şi dau din cap; ba şi mai şi: ei ştiu că-i minţi, şi tac, şi înghit, şi n-au ce face, ca să nu se strice trebile împărăţiei.
 - Da’ bine, Neghiniţă, ţie-ţi trebuie un an ca să umbli cât altul umblă într-o zi.
 - Da? Ei, nu e aşa deloc. Eu mă las pe-o adiere şi plutesc ca pe apă, şi mă mlădii pe apa vântului ca pe valurile mării. Ba uneori întrec rândunelele ca o săgeată de argint.
 - Ce bucurie pe unchiaşul meu, zise bătrâna, când o afla că are şi el un copil. Deseară o să se îmbete de bucurie.
 - Ba e vorbă, răspunse Neghiniţă, eu vreau să văd pe tata acuşi-acuşic!
Şi bătrâna, când auzi cuvântul tată, se bucură de bucuria moşului şi îi zise:
 - Aria moşului este cât vezi cu ochiul de departe, pusă pe-un deal mare şi întins. Unde-i vedea şase cai murgi treierând grâu, acolo să te opreşti, că dai peste unchiaşul babei.
 - Iată, plec. Cum îi deschise uşa, Neghiniţă se aruncă, cu mâinile întinse şi cu picioruşele deschise, într-o undă de adiere. Şi se făcu nevăzut, ca un strop de lumină.
Pe drum întâlni o cireadă de vaci. De minunici ce era, se dete afund într-o urmă de vacă şi începu să strige:
 - Măi văcari, măi, veniţi de mă scoateţi din inima pământului, că vă fac pe voia gândului!
Văcarii se luară după glas, până deteră peste Neghiniţă. Unul, mai rău şi mai prost dintre ei, vru să-l strivească şi-şi repezi călcâiul din băierile inimii. Neghiniţă ţâşti, şi sări alăturea, iar văcarul, lovind cu sete pământul, îşi scrinti piciorul şi începu să se vaiete. Ceilalţi începură cu măciuca şi, cum izbeau, rămâneau cu jumătatea în mână, iar ailaltă se ducea zbârnâind.
 - Să nu vă păziţi vacile, cum vă păziţi minţile. Cruce lată, minte întunecată, urechi de văcar, urechi de măgar! le zise Neghiniţă, şi se dădu vântului.
Ajunse la unchiaş. I se sui pe nas, ca să-l vadă mai bine. Unchiaşul se bucură, dar nu ca baba, iar Neghiniţă se întristă. Dar ca să se-arate grozav, zise unchiaşului:
 - Nu căta că-s mititel. Calul nu e mai mare ca copilul? şi-l încalecă copilul. Bivolul nu e mai mare ca omul? şi-l înjugă omul. Munţii nu-s mai mari ca oile? şi-i pasc turmele. Pământul nu e mai mare ca fierul plugului? şi-l despică fierul plugului. Codrul nu e mai mare ca un topor? şi-l culcă toporul la pământ. Tu nu eşti mai mare ca mine? şi te-au ostenit murgii în arie. Ia să vezi cum îi dau eu la arie, fără bici, fără nimic.
Unchiaşul, minunat, îl duse la arie. Cum ajunse, Neghiniţă sări pe-un cal şi începu să strige: "Hi, hăi, hi, hăi!" Ciupeşte pe unul, ciupeşte pe altul, caii începură să fugă, dar ce fugă, parc-ar fi avut douăzeci de bice pe şalele lor. Şi cum se crucea moşul, iată şi un negustor care trecea la scaunul împărăţiei.
 - Moşule, îi zise negustorul, cine mână caii aşa de grozav, că eu aud "hi-hăi, hi-hăi" şi nu văd pe nimeni!"
 - Ei, tată, răspunse bătrânul, m-a dăruit Dumnezeu cu un copil ca o neghină, da’ cu mintea cât zece ca mine şi ca d-ta.
Neghiniţă opri caii şi sări în palma unchiaşului. Cum îl văzu negustorul, se gândi să ducă împăratului aşa minune.
 - Moşule, zise negustorul, îţi dau o pungă de bani pe el. Neghiniţă, sfâr, în urechea moşului şi îi şopti ce să vorbească. Şi moşul zise, crezând că de la el zice:
 - Tu, care vinzi şi cumperi, ai cumpărat vreun suflet pe-o pungă de bani?
 - Îţi dau… două. Şi iar moşul, după Neghiniţă:
 - Două pungi… pentru un suflet?
 - Îţi dau… zece. Moşul îngălbeni şi zise, iar după şoapta lui Neghiniţă:
 - Sufletele se dăruiesc Domnului şi se vând Necuratului.
 - Îţi dau… douăzeci! Şi moşul, călcând în gura lăcomiei, tăcu, cu toate şoaptele bietului Neghiniţă.
Neghiniţă văzu lăcomia, da’ tot el şopti moşului:: "Fie!" Şi moşul zise:
 - Fie! Bătu palmă în palmă cu negustorul. Tocmeala se făcuse. Negustorul plăti şi luă pe Neghiniţă, vândut de bunăvoie. Negustorul plecă. Neghiniţă strigă moşului:
 - Moşule, moşule, ai fost să n-ai copii, iar biată babă, da!
Împăratul era la mare şi la greu sfat cu toţi cărturarii, că bântuia seceta şi molima. Şi dacă negustorul îi spuse că are un copil ca o neghiniţă, împăratul rămase înmărmurit, învăţaţii împărăţiei căscară ochii mari şi se traseră de bărbile lungi.
 - Nu se poate, măria-ta, aşa ceva nu scrie la carte.
 - Ba se poate, zise Neghiniţă, sărind pe masa sfatului, că multe se pot şi nu stau în cărţi; şi mult mai multe sunt altfel de cum sunt ticluite din condei. Şi după ce se minunară cât se minunară, începu sfatul. Neghiniţă se sui pe mâna împăratului, pe umăr, apoi în creştetul capului, şi de-acolo zise râzând:
 - Învaţă, măria-ta, că cei mai mici sunt cei mai mari. Împăratul, cam de voie, cam de nevoie, răspunse:
 - Aşa e, Neghiniţă, aşa e. Iar cărturarii îşi deteră ghies pe sub masă şi plecară ochii în jos. Împăratul porunci să-i toarne lui Neghiniţă o casă cu zece caturi, cât o nucă de mare, toată din aur-lamur şi împodobită cu pietre scumpe.
Neghiniţă rămase la sfat şi se pierdu din ochii tuturora, numai ca să se ţie de năzdrăvănii. Şi, încet-încet, pâşi-pâşi, până intră în urechea învăţatului care căuta în stele cu ocheanele. Acolo ascultă ce ascultă, şi înţelese că acest vestit cărturar, în loc să se gândească la sfat, se gândea că împăratul are nasul cam mare. Se duse binişor şi intră în urechea cărturarului care zicea că ştie măruntaiele omului şi leacurile bolilor. Ăsta se gândea nu la sfat, ci că-i plăcea inelul împăratului. Aşa află, pe rând, că unul se gândea la o cucoană frumoasă, că altul se gândea cam ce linguşeală să cârpească împăratului, altul că ce n-ar da el pentru o sticlă de vin, altul că bine e să fii împărat, altul că împăratul e om ca toţi oamenii, numai unul, cu fruntea cât toate zilele, asculta cuvintele şi întrebările împăratului.
Neghiniţă, cum află gândul tuturora, zbughi în urechea împăratului şi îi şopti tot, din fir până în aţă. Împăratul, crezând că singur, el de la el, a citit în mintea lor, se mânie foc şi le zise:
 - Ei, tu, care caţi în stele, ţi-ai făcut ochii ochean şi-mi vezi nasul cât un buştean. Astfel ţi-e gândul la sfatul domnesc?
Cărturarul se cutremură şi dădu în genunchi, cerând iertare.
 - Tu, se răsti împăratul către doctor, dacă ai avea inelul meu, ai omorî mai puţini oameni?
Doctorul se cutremură şi dădu şi el în genunchi.
 - Tu, zise împăratul necăjit ălorlalţi, te gândeşti la secături şi nu vezi că eşti cu un picior în groapă; tu îţi pregăteşti limba ca să mă minţi; tu crezi că într-o sticlă cu vin este mai mult duh decât în capul meu; tu nu ştii că un învăţat pe scaunul domniei ar face mai multe boroboaţe ca un neghiob; tu te pricepi că împăratul e om ca toţi oamenii, da’ nu te gândeşti că învăţaţii sunt ca neoamenii; iar tu abia te ţii să nu caşti o gură cât să înghiţi împărăţia toată; numai ţie ţi-e mintea la sfatul domnesc.
Cu toţii căzură în genunchi.
 - Acum ce să le fac, zise împăratul mânios, să le tai capul? Cărturarii muriră şi înviară, iar Neghiniţă, care se suise în creştetul împăratului:
 - Ferit-a Dumnezeu, măria-ta, fără învăţaţi cine să mintă lumea?
 - Să nu fie decât adevărul pe lume!
 - Ferit-a Dumnezeu! Ce-ai face chiar măria-ta fără minciună? Apoi măria-ta ţi-ai făcut socoteala vieţii? Mai multe ceasuri ai mâncat, ai dormit, ai vânat, ţi-ai socotit cazanele cu bani, ai petrecut, ba cu luminăţia-sa împărăteasa, ba şi fără ea, decât te-ai necăjit cu trebile şi cu nevoile împărăţiei. Cum ai sta măria-ta pe scaunul lumii când lumea ar afla adevărul?
Împăratul zâmbi, cu ciudă, nu e vorbă, dar zâmbi ca să dreagă treaba şi îi iertă pe toţi. Văzând însă că cel din urmă cărturar, care se gândise la sfat, tremura mereu, îi zise:
 - Ei, dar tu, cel mai cuminte, de ce tremuri?
 - Măria-ta, zise bietul bătrân, mai bine să spun şi eu decât să afli măria-ta. Iată, socotesc că nu ştiu nimic şi tot mă gândesc că mi-e leafa prea mică.
Împăratul râse cu poftă şi-i făgădui o leafă mai mare, apoi sparse sfatul cărturarilor şi plecă cu Neghiniţă în creştetul capului, nedumirit de cum ghicise gândurile tuturora.
Împărăteasa şi cuconii ei, văzând pe Neghiniţă, se minunară, dar, când aflară că împăratul, la vreme de bătrâneţe, ghiceşte gândurile oamenilor, se cruciră şi tot nu le venea să creadă.
 - Împărate, zise împărăteasa, zău aşa, ghiceşte-mi şi mie un gând.
 - Să vedem, răspunse împăratul. Împărăteasa se gândi şi începu să râdă… Neghiniţă o zbughise în urechea împărătesei şi-i aflase gândul: "Că ce bine-ar fi să mai fie o dată împăratul tânăr!" Şi într-o clipă intră în urechea dreaptă a împăratului, şi şopa-şopa-şopa. Împăratul – pace! Împărăteasa râdea şi zicea:
 - Vezi că nu ghiceşti? vezi? Pasămite, împăratul era cam tare de urechea dreaptă. Neghiniţă înţelese, şi ţâşti în urechea stângă, şi iar şopa-şopa.
Împăratul se lumină la faţă, dădu din cap, râse cu hohote şi zise:
 - Ei… împărăteasă, împărăteasă… da’ tot muiere! De, bine te gândişi tu, da’ nu se poate…
Împărăteasa se ruşină, plecă ochii în jos şi se gândi: "Dar dacă o ghici şi la ce m-oi fi gândit înainte, intru în pământ! De câte ori n-am dat dracului sfaturile împărăţiei când nu se mai isprăveau până după miezul nopţii."
În sfârşit, ce-i veni lui Neghiniţă, vru să râdă şi de împărat; şi îşi zise într-o bună dimineaţă: "Vezi ce e omul! Spune-i orice, spune-i mereu acelaşi lucru… omul crede, că omul e prost. Ce nu crede întâi crede mai pe urmă. Am să-i fac una şi bună împăratului, să-l las fără sfetnicii cei credincioşi şi să-l încurc cu nebunii."
Împăratul, de umbla în fruntea oştilor, de sta la sfat mare, de se culca, de se scula, de mânca, de-şi mângâia cuconii, un gând nu-l mai slăbea: "Nu vezi, omule de Dumnezeu, că ţi-au îmbătrânit sfetnicii şi împărăţia merge rău?"
Pasămite, Neghiniţă îi intrase într-o ureche. Azi aşa, mâine aşa, până nu mai avu încotro. Sparse sfatul cel vechi şi chemă altul nou.
Tot unu şi unu!
Cum veniră, cum aruncară pe bietul împărat din scaunul neamului lui…
 - Acu să-l vedem! zise împieliţatul de Neghiniţă. Împăratul ieşi plângând din cetate. Neghiniţă, sus pe umărul lui.
 - De ce plângi, măria-ta? ţine-ţi firea, nu fi muiere.
 - Ei, ei, Neghiniţă, cum să nu plâng?! Unde mi-e toiagul împărătesc?
 - Ci taci, măria-ta! Ia taie un corn şi fă-ţi, colea, o cârjă. Buzduganul e greu la bătrâneţe, te doboară. Cârja te sprijină.
 - Ei, ei, Neghiniţă, unde mi-e scaunul împărătesc pe care au stat atâţia moşi-strămoşi ai mei?
 - Ci taci, măria-ta! Întinde-te colea, pe fânul înflorit şi moale, şi să-mi spui drept care e mai dulce la oase? Scaunul cu scumpetea, sau fânul cu frumuseţea?
 - I, i, Neghiniţă, unde mi-e coroana cu stemele şi cu luminile?
 - Ci taci, măria-ta! Pune foaie lată de lipan pe deasupra pletelor albe şi spune-mi drept, care e mai uşoară, coroana cu grijile sau lipanul cu umbrele?
 - Aşa o fi, Neghiniţă, mai zise împăratul, oftând tocmai din băierile inimii, aşa o fi, se potriveşte ş-aşa, fiindcă ştii tu să le potriveşti, dar când mă gândesc în ce slavă eram ieri… îmi vine să scald tot pământul cu lacrimile mele!
 - Ci taci, măria-ta! Adică ce slăvire? Toată viaţa, ba războaie, ba sfaturi, ba taie capul unuia, ba întinde la bice pe altul, ba citeşte jalbele, ba ascultă păsurile, ba câte şi mai câte, şi mai multe fără să vrei de câte pe vrute. Mărire să fi fost asta? Dar ia gândeşte-te măria-ta că un supus era supusul măriei-tale ş-avea un stăpân, iar măria-ta, purtând grija tuturora, erai sluga tuturora. Vezi, de-aia măria-ta ai fost cel mai slugă, cel mai nevolnic din toată împărăţia. Curată socoteală: erai împărat, nu om; acum eşti om, nu împărat. Şi eşti mai mare, că unde-ţi spune gândul, acolo te duc picioarele. Ş-apoi, cine ştie? Socoteşti măria-ta că boierii pot ceva fără prostime? Să ceară prostimea pe vechiul lor împărat… şi să vezi măria-ta…
Se mai îmbună împăratul la cuvântul lui Neghiniţă şi se duse, în cruciş şi în curmeziş, în toată împărăţia, c-o foaie de lipan pe cap şi sprijinit pe-o cârjă de corn. Şi de ce vedea se minuna şi întreba pe Neghiniţă:
 - Neghiniţă, de ce-l bat pe ăla, de răcneşte ca din gură de şarpe?
 - Fiindcă împăratul e surd şi n-aude, răspunse Neghiniţă.
 - Neghiniţă, de ce-or fi atâţia oameni goi şi desculţi?
 - Fiindcă împăratul e orb şi nu vede.
 - Neghiniţă, de ce bătrânul ăla s-o fi muncind să roadă în gingii o cojiţă uscată?
 - Fiindcă împăratul mănâncă prea mult.
 - Neghiniţă, de ce-o munci unii şi noaptea, de dau pe brânci?
 - Ca să doarmă împăratul şi ziua, de i-o veni poftă.
 - Neghiniţă, atunci de ce să vie pe scaunul meu un împărat şi surd, şi orb, şi lacom, şi somnoros?
 - Ei, poi, înainte de-a fi împărat, vedea, auzea, muncea, cumpătat la mâncare şi la băutură.
Bietul pribeag stătu pe gânduri, în mijlocul unui oraş mare, mare şi zise:
 - I, i, Neghiniţă, mult cuvânt ai! Acum s-ajung împărat, şi aş şti eu să fac cum e bine.
Şi, ca din senin, abia sfârşise vorba de pe urmă, ş-auzi o gălăgie, un vaiet, o duduitură, că parcă se cutremura pământul. Când colo, ce să fie? Ştafetă mare. Nişte voinici, cu suliţe lungi, aduceau vestea că norodul a băgat la dubă pe împăratul ăl nou, cu sfetnici cu tot, şi că cheamă iarăşi pe adevăratul împărat. Cum auzi bătrânul, zise voinicilor:
 - Staţi, că eu sunt! Şi-l cunoscură toţi, şi îi deteră în genunchi. Iar Neghiniţă, de colo, de pe umăr:
 - Măria-ta, mai vezi, mai auzi, ori ţi s-a făcut foame şi-ţi vine să dormi?
La toate vine rândul, după cum se întoarce roata, că de-aia e roată, să se întoarcă, iar nu să stea locului. Şi-i veni rândul şi lui Neghiniţă, gândul lumii.
Într-o zi vru să glumească cu împăratul, să mai facă vreo drăcie. Îi intră în urechea dreaptă, crezând că e în a stângă. Cu stânga n-auzea de loc. "Nu face nimic. Mi-e lene să mă mut, se gândi Neghiniţă. În loc să şoptesc, voi striga." Şi începu să strige din toate puterile în urechea cu care împăratul auzea de minune.
 - Un împărat dacă n-a şti el de la el adevărul, nu-l mai află de la nimeni!
Împăratul, auzind acest glas tare în fundul urechii, îi zvâcni inima şi-şi trase o palma cât putu peste ureche, zicând:
 - Iiiii, să ştii că ce credeam eu că-mi trece prin minte era numai în ureche!
Şi când îşi scutură urechea în podul palmei… Neghiniţă căzu leşinat…
 - Tu mi-ai fost? Tu m-ai făcut să cad din scaunul împărăţiei? Bine! Am eu ac de cojocul tău!
Împăratul, înfuriat, porunci să-l lege de gât cu un fir lung de mătase şi-l coborî de-l înecă în puţul din curtea domnească.

Aşa sfârşi bietul Neghiniţă.
EOT;
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:21:"\Faker\Provider\ro_RO";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\Faker\Provider\ro_RO";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"ro_RO";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:26:"\Faker\Provider\ro_RO\Text";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:26:"\Faker\Provider\ro_RO\Text";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"Text";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\Faker\Provider\Text";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"Text";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:37:"\Faker\Provider\ro_RO\Text::$baseText";O:37:"phpDocumentor\Reflection\Php\Property":7:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\Faker\Provider\ro_RO\Text::$baseText";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"baseText";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:57:"Title: Neghiniţă
Author: Barbu Ştefănescu Delavrancea";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:18:"Language: Romanian";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:52:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Url":1:{s:57:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Url uri";s:54:"https://creativecommons.org/licenses/by-sa/3.0/deed.en";}s:14:" * description";N;}i:1;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:50:"https://ro.wikisource.org/wiki/Neghini%C8%9B%C4%83";s:14:" * description";N;}i:2;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:7:" * name";s:3:"var";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Var_ type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:15:" * variableName";s:0:"";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:20:"Faker\Provider\ro_RO";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:7;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:20253:"
A fost odată o babă, bătrână, bătrână. Abia zărea de bătrână ce era. Şi mâinile îi umblau la ciorap, iar în gândul ei se ruga la Dumnezeu s-o dăruiască cu un copil, că n-avea decât pe unchiaşul ei. Şi unchiaşul, ba la pădure, ba la arie, ba la târg, iar baba sta singură cuc, că toată ziulica i-ar fi ţiuit tăcerea în fundul urechilor dacă n-ar fi strănutat şi n-ar fi tuşit câteodată. Ba uneori, ca să-şi mai ţie de urât, tot ea vorbea şi tot ea răspundea. Şi râdea ea de ea, ca şi cum ar fi râs ea de altcineva, înşirând ochiurile pe cârlige.
 - Ei, ei, ce n-ar plăti un flăcău la bătrâneţile noastre!
 - Cât, de? cât?
 - Îhi, îhi, mult de tot!
 - Adică ce, nu te-ai mulţumi şi c-o fată mare?
 - Ba, ce să zic, bine ar fi ş-o fată…
 - Da, dar la fată vrea zestre.
 - S-ar găsi, că eu şi unchiaşul avem ce ne trebuie şi nu ne trebuie mult, trei coţi de pânză albă şi câte un coşciug; iar boii moşului, iar plugul moşului, iar casa moşului şi a babei, toate ar fi ale fetei.
 - Bine, mătuşă, bine, da’ de unde şi fată? Tu nu ştii că copacii uscaţi nu mai dau de la rădăcină?
Şi bătrâna începu să râdă şi să ofteze: "hi, hi, hi, ooof, of!"
 - Ei, toate se întorc, şi apele se întorc de la Dumnezeu, numai tinereţile ba. Ce nu e la timp nu mai e niciodată. M-aş mulţumi eu şi pe un prichindel de băiat.
 - Ba te-ai mulţumi şi pe-o codană. Tu să-nşiri, şi ea să deşire, tu să cerni, şi ea să risipească, tu să pui de mămăligă, şi ea să răstoarne căldarea pe foc.
 - Dacă e pe-aşa, m-aş mulţumi şi pe-un copil cât ghemul, numai s-aud în casă "mamă", că mult e pustiu când uşa se închide peste doi bătrâni.
 - Da’ dacă ar fi mai mic?
 - Fie şi mai mic. Şi bătrâna începu să râdă.
 - Ce neroadă!
 - Ba neroadă, nu glumă!
 - Dar dacă ar fi cât un bob de mazăre? Şi tocmai când da bătrâna capul peste cap de râs, odată tresări că, de după uşă, se-auzi un glas ascuţit şi înţepat:
 - Dar dacă ar fi cât o neghiniţă? Bătrâna se uită, se uită şi începu să se închine.
 - Bine, bine, zise acelaşi glas, văd eu că nu-ţi trebuie copii… Baba îşi luă inima în dinţi şi zise:
 - Ba-mi trebuie… da’ unde eşti… cine eşti?
 - Cine sunt? Neghiniţă, gândul lumii. De mic ce sunt, pătrund în urechile oamenilor şi-i ascult cum gândesc. Adineauri eram în urechea ta a dreaptă, apoi am trecut în a stângă, ş-am râs de m-am prăpădit când am văzut ce-ţi trec prin minte…
 - Ei, aş! Ce mi-a trecut? Nimic!
 - Nu e adevărat, răspunse Neghiniţă râzând, omul spune mai puţin decât gândeşte. Dacă nu-ţi şopteam eu că copacul uscat nu mai dă de la rădăcină, cine ştie ce-ai mai fi spus…
Baba se făcu ca para focului.
 - Zău aşa… nu te ruşina, mamă, nu zău… Aşa e omul. Când e mic face nebunii fiindcă e mic; când e la tinereţe face nebunii fiindcă e tânăr, iar la bătrâneţe se gândeşte la nebunii fiindcă nu le poate face…
Bătrâna pierdu sfiala şi răbdarea şi se răsti cât putu:
 - Neghiniţă, ci tacă-ţi gura şi vin să te văd! Şi pe loc se-auzi un ţâşt ca de lăcustă şi un bâzâit ca de albină. Bătrâna simţi pe mână o picătura caldă.
 - Iacătă-mă şi pe mine!… Biata femeie făcu nişte ochi mari cât toate zilele şi se miră toată de ce văzu pe mână, că cerul de i s-ar fi deschis nu s-ar fi minunat mai mult.
Neghiniţă era frumos ca o piatră scumpă; şi era mic cât o neghină; şi avea nişte ochişori ca două scântei albastre, şi nişte mâini şi picioruşe ca nişte firişoare de păiajen.
Bătrâna dădu să-l sărute. Neghiniţă, ţâşti pe nas, ţâşti iar pe mână!
 - Încet, mamă, încet, că mă striveşti, zise Neghiniţă.
 - Să te sărut, că-mi umpluşi casa cu dragoste când îmi ziseşi mamă.
 - Încet, să nu mă sorbi. Îl sărută.
 - Cum mănânci tu, Neghiniţă al maicăi?
 - Eu? Eu mă satur din fum. Până acum am mâncat la mese împărăteşti fără să ştie nimeni. Şi ce-am mai râs când ceilalţi tremurau înaintea împăraţilor, iar eu mă plimbam prin urechile lor şi le aflam gândul.
 - Bine o fi de ei, Neghiniţă mamă…
 - Aş, binele focului! Săracii mor de foame, iar ei mor de mâncare. De săraci e rău că n-au cui să poruncească, şi de ei e rău că trebuie să poruncească la mulţi. Pe ceilalţi oameni când îi minţi te iau de guler şi te judecă judecată dreaptă; pe ei îi minţi şi dau din cap; ba şi mai şi: ei ştiu că-i minţi, şi tac, şi înghit, şi n-au ce face, ca să nu se strice trebile împărăţiei.
 - Da’ bine, Neghiniţă, ţie-ţi trebuie un an ca să umbli cât altul umblă într-o zi.
 - Da? Ei, nu e aşa deloc. Eu mă las pe-o adiere şi plutesc ca pe apă, şi mă mlădii pe apa vântului ca pe valurile mării. Ba uneori întrec rândunelele ca o săgeată de argint.
 - Ce bucurie pe unchiaşul meu, zise bătrâna, când o afla că are şi el un copil. Deseară o să se îmbete de bucurie.
 - Ba e vorbă, răspunse Neghiniţă, eu vreau să văd pe tata acuşi-acuşic!
Şi bătrâna, când auzi cuvântul tată, se bucură de bucuria moşului şi îi zise:
 - Aria moşului este cât vezi cu ochiul de departe, pusă pe-un deal mare şi întins. Unde-i vedea şase cai murgi treierând grâu, acolo să te opreşti, că dai peste unchiaşul babei.
 - Iată, plec. Cum îi deschise uşa, Neghiniţă se aruncă, cu mâinile întinse şi cu picioruşele deschise, într-o undă de adiere. Şi se făcu nevăzut, ca un strop de lumină.
Pe drum întâlni o cireadă de vaci. De minunici ce era, se dete afund într-o urmă de vacă şi începu să strige:
 - Măi văcari, măi, veniţi de mă scoateţi din inima pământului, că vă fac pe voia gândului!
Văcarii se luară după glas, până deteră peste Neghiniţă. Unul, mai rău şi mai prost dintre ei, vru să-l strivească şi-şi repezi călcâiul din băierile inimii. Neghiniţă ţâşti, şi sări alăturea, iar văcarul, lovind cu sete pământul, îşi scrinti piciorul şi începu să se vaiete. Ceilalţi începură cu măciuca şi, cum izbeau, rămâneau cu jumătatea în mână, iar ailaltă se ducea zbârnâind.
 - Să nu vă păziţi vacile, cum vă păziţi minţile. Cruce lată, minte întunecată, urechi de văcar, urechi de măgar! le zise Neghiniţă, şi se dădu vântului.
Ajunse la unchiaş. I se sui pe nas, ca să-l vadă mai bine. Unchiaşul se bucură, dar nu ca baba, iar Neghiniţă se întristă. Dar ca să se-arate grozav, zise unchiaşului:
 - Nu căta că-s mititel. Calul nu e mai mare ca copilul? şi-l încalecă copilul. Bivolul nu e mai mare ca omul? şi-l înjugă omul. Munţii nu-s mai mari ca oile? şi-i pasc turmele. Pământul nu e mai mare ca fierul plugului? şi-l despică fierul plugului. Codrul nu e mai mare ca un topor? şi-l culcă toporul la pământ. Tu nu eşti mai mare ca mine? şi te-au ostenit murgii în arie. Ia să vezi cum îi dau eu la arie, fără bici, fără nimic.
Unchiaşul, minunat, îl duse la arie. Cum ajunse, Neghiniţă sări pe-un cal şi începu să strige: "Hi, hăi, hi, hăi!" Ciupeşte pe unul, ciupeşte pe altul, caii începură să fugă, dar ce fugă, parc-ar fi avut douăzeci de bice pe şalele lor. Şi cum se crucea moşul, iată şi un negustor care trecea la scaunul împărăţiei.
 - Moşule, îi zise negustorul, cine mână caii aşa de grozav, că eu aud "hi-hăi, hi-hăi" şi nu văd pe nimeni!"
 - Ei, tată, răspunse bătrânul, m-a dăruit Dumnezeu cu un copil ca o neghină, da’ cu mintea cât zece ca mine şi ca d-ta.
Neghiniţă opri caii şi sări în palma unchiaşului. Cum îl văzu negustorul, se gândi să ducă împăratului aşa minune.
 - Moşule, zise negustorul, îţi dau o pungă de bani pe el. Neghiniţă, sfâr, în urechea moşului şi îi şopti ce să vorbească. Şi moşul zise, crezând că de la el zice:
 - Tu, care vinzi şi cumperi, ai cumpărat vreun suflet pe-o pungă de bani?
 - Îţi dau… două. Şi iar moşul, după Neghiniţă:
 - Două pungi… pentru un suflet?
 - Îţi dau… zece. Moşul îngălbeni şi zise, iar după şoapta lui Neghiniţă:
 - Sufletele se dăruiesc Domnului şi se vând Necuratului.
 - Îţi dau… douăzeci! Şi moşul, călcând în gura lăcomiei, tăcu, cu toate şoaptele bietului Neghiniţă.
Neghiniţă văzu lăcomia, da’ tot el şopti moşului:: "Fie!" Şi moşul zise:
 - Fie! Bătu palmă în palmă cu negustorul. Tocmeala se făcuse. Negustorul plăti şi luă pe Neghiniţă, vândut de bunăvoie. Negustorul plecă. Neghiniţă strigă moşului:
 - Moşule, moşule, ai fost să n-ai copii, iar biată babă, da!
Împăratul era la mare şi la greu sfat cu toţi cărturarii, că bântuia seceta şi molima. Şi dacă negustorul îi spuse că are un copil ca o neghiniţă, împăratul rămase înmărmurit, învăţaţii împărăţiei căscară ochii mari şi se traseră de bărbile lungi.
 - Nu se poate, măria-ta, aşa ceva nu scrie la carte.
 - Ba se poate, zise Neghiniţă, sărind pe masa sfatului, că multe se pot şi nu stau în cărţi; şi mult mai multe sunt altfel de cum sunt ticluite din condei. Şi după ce se minunară cât se minunară, începu sfatul. Neghiniţă se sui pe mâna împăratului, pe umăr, apoi în creştetul capului, şi de-acolo zise râzând:
 - Învaţă, măria-ta, că cei mai mici sunt cei mai mari. Împăratul, cam de voie, cam de nevoie, răspunse:
 - Aşa e, Neghiniţă, aşa e. Iar cărturarii îşi deteră ghies pe sub masă şi plecară ochii în jos. Împăratul porunci să-i toarne lui Neghiniţă o casă cu zece caturi, cât o nucă de mare, toată din aur-lamur şi împodobită cu pietre scumpe.
Neghiniţă rămase la sfat şi se pierdu din ochii tuturora, numai ca să se ţie de năzdrăvănii. Şi, încet-încet, pâşi-pâşi, până intră în urechea învăţatului care căuta în stele cu ocheanele. Acolo ascultă ce ascultă, şi înţelese că acest vestit cărturar, în loc să se gândească la sfat, se gândea că împăratul are nasul cam mare. Se duse binişor şi intră în urechea cărturarului care zicea că ştie măruntaiele omului şi leacurile bolilor. Ăsta se gândea nu la sfat, ci că-i plăcea inelul împăratului. Aşa află, pe rând, că unul se gândea la o cucoană frumoasă, că altul se gândea cam ce linguşeală să cârpească împăratului, altul că ce n-ar da el pentru o sticlă de vin, altul că bine e să fii împărat, altul că împăratul e om ca toţi oamenii, numai unul, cu fruntea cât toate zilele, asculta cuvintele şi întrebările împăratului.
Neghiniţă, cum află gândul tuturora, zbughi în urechea împăratului şi îi şopti tot, din fir până în aţă. Împăratul, crezând că singur, el de la el, a citit în mintea lor, se mânie foc şi le zise:
 - Ei, tu, care caţi în stele, ţi-ai făcut ochii ochean şi-mi vezi nasul cât un buştean. Astfel ţi-e gândul la sfatul domnesc?
Cărturarul se cutremură şi dădu în genunchi, cerând iertare.
 - Tu, se răsti împăratul către doctor, dacă ai avea inelul meu, ai omorî mai puţini oameni?
Doctorul se cutremură şi dădu şi el în genunchi.
 - Tu, zise împăratul necăjit ălorlalţi, te gândeşti la secături şi nu vezi că eşti cu un picior în groapă; tu îţi pregăteşti limba ca să mă minţi; tu crezi că într-o sticlă cu vin este mai mult duh decât în capul meu; tu nu ştii că un învăţat pe scaunul domniei ar face mai multe boroboaţe ca un neghiob; tu te pricepi că împăratul e om ca toţi oamenii, da’ nu te gândeşti că învăţaţii sunt ca neoamenii; iar tu abia te ţii să nu caşti o gură cât să înghiţi împărăţia toată; numai ţie ţi-e mintea la sfatul domnesc.
Cu toţii căzură în genunchi.
 - Acum ce să le fac, zise împăratul mânios, să le tai capul? Cărturarii muriră şi înviară, iar Neghiniţă, care se suise în creştetul împăratului:
 - Ferit-a Dumnezeu, măria-ta, fără învăţaţi cine să mintă lumea?
 - Să nu fie decât adevărul pe lume!
 - Ferit-a Dumnezeu! Ce-ai face chiar măria-ta fără minciună? Apoi măria-ta ţi-ai făcut socoteala vieţii? Mai multe ceasuri ai mâncat, ai dormit, ai vânat, ţi-ai socotit cazanele cu bani, ai petrecut, ba cu luminăţia-sa împărăteasa, ba şi fără ea, decât te-ai necăjit cu trebile şi cu nevoile împărăţiei. Cum ai sta măria-ta pe scaunul lumii când lumea ar afla adevărul?
Împăratul zâmbi, cu ciudă, nu e vorbă, dar zâmbi ca să dreagă treaba şi îi iertă pe toţi. Văzând însă că cel din urmă cărturar, care se gândise la sfat, tremura mereu, îi zise:
 - Ei, dar tu, cel mai cuminte, de ce tremuri?
 - Măria-ta, zise bietul bătrân, mai bine să spun şi eu decât să afli măria-ta. Iată, socotesc că nu ştiu nimic şi tot mă gândesc că mi-e leafa prea mică.
Împăratul râse cu poftă şi-i făgădui o leafă mai mare, apoi sparse sfatul cărturarilor şi plecă cu Neghiniţă în creştetul capului, nedumirit de cum ghicise gândurile tuturora.
Împărăteasa şi cuconii ei, văzând pe Neghiniţă, se minunară, dar, când aflară că împăratul, la vreme de bătrâneţe, ghiceşte gândurile oamenilor, se cruciră şi tot nu le venea să creadă.
 - Împărate, zise împărăteasa, zău aşa, ghiceşte-mi şi mie un gând.
 - Să vedem, răspunse împăratul. Împărăteasa se gândi şi începu să râdă… Neghiniţă o zbughise în urechea împărătesei şi-i aflase gândul: "Că ce bine-ar fi să mai fie o dată împăratul tânăr!" Şi într-o clipă intră în urechea dreaptă a împăratului, şi şopa-şopa-şopa. Împăratul – pace! Împărăteasa râdea şi zicea:
 - Vezi că nu ghiceşti? vezi? Pasămite, împăratul era cam tare de urechea dreaptă. Neghiniţă înţelese, şi ţâşti în urechea stângă, şi iar şopa-şopa.
Împăratul se lumină la faţă, dădu din cap, râse cu hohote şi zise:
 - Ei… împărăteasă, împărăteasă… da’ tot muiere! De, bine te gândişi tu, da’ nu se poate…
Împărăteasa se ruşină, plecă ochii în jos şi se gândi: "Dar dacă o ghici şi la ce m-oi fi gândit înainte, intru în pământ! De câte ori n-am dat dracului sfaturile împărăţiei când nu se mai isprăveau până după miezul nopţii."
În sfârşit, ce-i veni lui Neghiniţă, vru să râdă şi de împărat; şi îşi zise într-o bună dimineaţă: "Vezi ce e omul! Spune-i orice, spune-i mereu acelaşi lucru… omul crede, că omul e prost. Ce nu crede întâi crede mai pe urmă. Am să-i fac una şi bună împăratului, să-l las fără sfetnicii cei credincioşi şi să-l încurc cu nebunii."
Împăratul, de umbla în fruntea oştilor, de sta la sfat mare, de se culca, de se scula, de mânca, de-şi mângâia cuconii, un gând nu-l mai slăbea: "Nu vezi, omule de Dumnezeu, că ţi-au îmbătrânit sfetnicii şi împărăţia merge rău?"
Pasămite, Neghiniţă îi intrase într-o ureche. Azi aşa, mâine aşa, până nu mai avu încotro. Sparse sfatul cel vechi şi chemă altul nou.
Tot unu şi unu!
Cum veniră, cum aruncară pe bietul împărat din scaunul neamului lui…
 - Acu să-l vedem! zise împieliţatul de Neghiniţă. Împăratul ieşi plângând din cetate. Neghiniţă, sus pe umărul lui.
 - De ce plângi, măria-ta? ţine-ţi firea, nu fi muiere.
 - Ei, ei, Neghiniţă, cum să nu plâng?! Unde mi-e toiagul împărătesc?
 - Ci taci, măria-ta! Ia taie un corn şi fă-ţi, colea, o cârjă. Buzduganul e greu la bătrâneţe, te doboară. Cârja te sprijină.
 - Ei, ei, Neghiniţă, unde mi-e scaunul împărătesc pe care au stat atâţia moşi-strămoşi ai mei?
 - Ci taci, măria-ta! Întinde-te colea, pe fânul înflorit şi moale, şi să-mi spui drept care e mai dulce la oase? Scaunul cu scumpetea, sau fânul cu frumuseţea?
 - I, i, Neghiniţă, unde mi-e coroana cu stemele şi cu luminile?
 - Ci taci, măria-ta! Pune foaie lată de lipan pe deasupra pletelor albe şi spune-mi drept, care e mai uşoară, coroana cu grijile sau lipanul cu umbrele?
 - Aşa o fi, Neghiniţă, mai zise împăratul, oftând tocmai din băierile inimii, aşa o fi, se potriveşte ş-aşa, fiindcă ştii tu să le potriveşti, dar când mă gândesc în ce slavă eram ieri… îmi vine să scald tot pământul cu lacrimile mele!
 - Ci taci, măria-ta! Adică ce slăvire? Toată viaţa, ba războaie, ba sfaturi, ba taie capul unuia, ba întinde la bice pe altul, ba citeşte jalbele, ba ascultă păsurile, ba câte şi mai câte, şi mai multe fără să vrei de câte pe vrute. Mărire să fi fost asta? Dar ia gândeşte-te măria-ta că un supus era supusul măriei-tale ş-avea un stăpân, iar măria-ta, purtând grija tuturora, erai sluga tuturora. Vezi, de-aia măria-ta ai fost cel mai slugă, cel mai nevolnic din toată împărăţia. Curată socoteală: erai împărat, nu om; acum eşti om, nu împărat. Şi eşti mai mare, că unde-ţi spune gândul, acolo te duc picioarele. Ş-apoi, cine ştie? Socoteşti măria-ta că boierii pot ceva fără prostime? Să ceară prostimea pe vechiul lor împărat… şi să vezi măria-ta…
Se mai îmbună împăratul la cuvântul lui Neghiniţă şi se duse, în cruciş şi în curmeziş, în toată împărăţia, c-o foaie de lipan pe cap şi sprijinit pe-o cârjă de corn. Şi de ce vedea se minuna şi întreba pe Neghiniţă:
 - Neghiniţă, de ce-l bat pe ăla, de răcneşte ca din gură de şarpe?
 - Fiindcă împăratul e surd şi n-aude, răspunse Neghiniţă.
 - Neghiniţă, de ce-or fi atâţia oameni goi şi desculţi?
 - Fiindcă împăratul e orb şi nu vede.
 - Neghiniţă, de ce bătrânul ăla s-o fi muncind să roadă în gingii o cojiţă uscată?
 - Fiindcă împăratul mănâncă prea mult.
 - Neghiniţă, de ce-o munci unii şi noaptea, de dau pe brânci?
 - Ca să doarmă împăratul şi ziua, de i-o veni poftă.
 - Neghiniţă, atunci de ce să vie pe scaunul meu un împărat şi surd, şi orb, şi lacom, şi somnoros?
 - Ei, poi, înainte de-a fi împărat, vedea, auzea, muncea, cumpătat la mâncare şi la băutură.
Bietul pribeag stătu pe gânduri, în mijlocul unui oraş mare, mare şi zise:
 - I, i, Neghiniţă, mult cuvânt ai! Acum s-ajung împărat, şi aş şti eu să fac cum e bine.
Şi, ca din senin, abia sfârşise vorba de pe urmă, ş-auzi o gălăgie, un vaiet, o duduitură, că parcă se cutremura pământul. Când colo, ce să fie? Ştafetă mare. Nişte voinici, cu suliţe lungi, aduceau vestea că norodul a băgat la dubă pe împăratul ăl nou, cu sfetnici cu tot, şi că cheamă iarăşi pe adevăratul împărat. Cum auzi bătrânul, zise voinicilor:
 - Staţi, că eu sunt! Şi-l cunoscură toţi, şi îi deteră în genunchi. Iar Neghiniţă, de colo, de pe umăr:
 - Măria-ta, mai vezi, mai auzi, ori ţi s-a făcut foame şi-ţi vine să dormi?
La toate vine rândul, după cum se întoarce roata, că de-aia e roată, să se întoarcă, iar nu să stea locului. Şi-i veni rândul şi lui Neghiniţă, gândul lumii.
Într-o zi vru să glumească cu împăratul, să mai facă vreo drăcie. Îi intră în urechea dreaptă, crezând că e în a stângă. Cu stânga n-auzea de loc. "Nu face nimic. Mi-e lene să mă mut, se gândi Neghiniţă. În loc să şoptesc, voi striga." Şi începu să strige din toate puterile în urechea cu care împăratul auzea de minune.
 - Un împărat dacă n-a şti el de la el adevărul, nu-l mai află de la nimeni!
Împăratul, auzind acest glas tare în fundul urechii, îi zvâcni inima şi-şi trase o palma cât putu peste ureche, zicând:
 - Iiiii, să ştii că ce credeam eu că-mi trece prin minte era numai în ureche!
Şi când îşi scutură urechea în podul palmei… Neghiniţă căzu leşinat…
 - Tu mi-ai fost? Tu m-ai făcut să cad din scaunul împărăţiei? Bine! Am eu ac de cojocul tău!
Împăratul, înfuriat, porunci să-l lege de gât cu un fir lung de mătase şi-l coborî de-l înecă în puţul din curtea domnească.

Aşa sfârşi bietul Neghiniţă.";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:17;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}'));

/* Child Type: integer */
$data['createdOn'] = 1526970275;
