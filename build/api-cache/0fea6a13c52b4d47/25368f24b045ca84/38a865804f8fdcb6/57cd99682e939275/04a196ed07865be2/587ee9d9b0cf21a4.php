<?php 
/* Cachekey: cache/stash_default/documentation\api\php\24ac129673c43f92609df65806d009da/ */
/* Type: array */
/* Expiration: 2018-06-04T19:14:05+00:00 */



$loaded = true;
$expiration = 1528139645;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755143;
