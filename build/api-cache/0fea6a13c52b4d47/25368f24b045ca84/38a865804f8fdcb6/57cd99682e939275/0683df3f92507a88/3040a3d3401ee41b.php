<?php 
/* Cachekey: cache/stash_default/documentation\api\php\2d67a3749a2859d7856b11fa8a6db61b/ */
/* Type: array */
/* Expiration: 2018-06-04T21:06:43+00:00 */



$loaded = true;
$expiration = 1528146403;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755148;
