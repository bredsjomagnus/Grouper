<?php 
/* Cachekey: cache/stash_default/documentation\api\php\6ca3a8bd346b3bef4f82fe0202e4fa80/ */
/* Type: array */
/* Expiration: 2018-06-04T21:21:22+00:00 */



$loaded = true;
$expiration = 1528147282;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755139;
