<?php 
/* Cachekey: cache/stash_default/documentation\api\php\b96f828745287680b7f60334aef69eb2/ */
/* Type: array */
/* Expiration: 2018-06-05T00:15:20+00:00 */



$loaded = true;
$expiration = 1528157720;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755126;
