<?php 
/* Cachekey: cache/stash_default/documentation\api\php\ebe2a2b7f9842cf948d140374870c7ea/ */
/* Type: array */
/* Expiration: 2018-06-05T03:11:56+00:00 */



$loaded = true;
$expiration = 1528168316;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755132;
