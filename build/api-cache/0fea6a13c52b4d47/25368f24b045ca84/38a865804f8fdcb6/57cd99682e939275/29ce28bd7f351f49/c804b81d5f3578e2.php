<?php 
/* Cachekey: cache/stash_default/documentation\api\php\66159c86ee8782e56eda2bbeb5c67053/ */
/* Type: array */
/* Expiration: 2018-05-26T15:52:42+00:00 */



$loaded = true;
$expiration = 1527349962;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979192;
