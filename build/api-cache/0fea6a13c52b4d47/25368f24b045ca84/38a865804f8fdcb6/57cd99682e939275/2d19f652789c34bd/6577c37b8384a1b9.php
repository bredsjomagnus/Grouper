<?php 
/* Cachekey: cache/stash_default/documentation\api\php\09a43593a875bac6def891a4457d5f96/ */
/* Type: array */
/* Expiration: 2018-06-05T02:49:37+00:00 */



$loaded = true;
$expiration = 1528166977;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755155;
