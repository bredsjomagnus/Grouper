<?php 
/* Cachekey: cache/stash_default/documentation\api\php\ceeb86e824b72e9cec3e33762e2eef79/ */
/* Type: array */
/* Expiration: 2018-05-27T05:08:18+00:00 */



$loaded = true;
$expiration = 1527397698;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979582;
