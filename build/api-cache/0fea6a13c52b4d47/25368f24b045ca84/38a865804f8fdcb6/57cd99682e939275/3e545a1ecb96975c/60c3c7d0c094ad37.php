<?php 
/* Cachekey: cache/stash_default/documentation\api\php\300c29238bf6ca3a43ef88d7760f2bcc/ */
/* Type: array */
/* Expiration: 2018-06-05T01:03:50+00:00 */



$loaded = true;
$expiration = 1528160630;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755135;
