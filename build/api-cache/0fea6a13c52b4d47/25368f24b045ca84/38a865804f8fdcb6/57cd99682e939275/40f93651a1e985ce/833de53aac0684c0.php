<?php 
/* Cachekey: cache/stash_default/documentation\api\php\88e4fd081dc27d2c18397661fa85704c/ */
/* Type: array */
/* Expiration: 2018-05-27T08:54:29+00:00 */



$loaded = true;
$expiration = 1527411269;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979582;
