<?php 
/* Cachekey: cache/stash_default/documentation\api\php\19559c4f06ec26c449c072a4f352a532/ */
/* Type: array */
/* Expiration: 2018-05-26T22:55:21+00:00 */



$loaded = true;
$expiration = 1527375321;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979583;
