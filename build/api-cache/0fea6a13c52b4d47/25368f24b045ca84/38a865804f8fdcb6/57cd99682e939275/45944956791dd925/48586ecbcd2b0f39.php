<?php 
/* Cachekey: cache/stash_default/documentation\api\php\03191d9a8be477738dcaa0350963f6cd/ */
/* Type: array */
/* Expiration: 2018-05-26T16:28:08+00:00 */



$loaded = true;
$expiration = 1527352088;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979197;
