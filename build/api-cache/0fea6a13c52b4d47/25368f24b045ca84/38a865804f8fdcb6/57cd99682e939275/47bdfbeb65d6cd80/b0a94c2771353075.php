<?php 
/* Cachekey: cache/stash_default/documentation\api\php\7965aae6b87b21f63df47b5a456a917f/ */
/* Type: array */
/* Expiration: 2018-05-26T15:36:05+00:00 */



$loaded = true;
$expiration = 1527348965;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979581;
