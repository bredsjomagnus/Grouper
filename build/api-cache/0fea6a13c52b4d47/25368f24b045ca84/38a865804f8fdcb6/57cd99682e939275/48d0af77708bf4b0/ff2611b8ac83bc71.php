<?php 
/* Cachekey: cache/stash_default/documentation\api\php\40da3f051b0e9931d8a12e042c8f0e9a/ */
/* Type: array */
/* Expiration: 2018-05-26T14:25:08+00:00 */



$loaded = true;
$expiration = 1527344708;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ac09b291db98202ca931ec38a31e99ae";s:39:" phpDocumentor\Reflection\Php\File name";s:10:"Person.php";s:39:" phpDocumentor\Reflection\Php\File path";s:59:"vendor/fzaninotto/faker/src/Faker/Provider/en_ZA/Person.php";s:41:" phpDocumentor\Reflection\Php\File source";s:14163:"<?php

namespace Faker\Provider\en_ZA;

use Faker\Calculator\Luhn;
use Faker\Provider\DateTime;

class Person extends \Faker\Provider\Person
{
    protected static $maleNameFormats = array(
        '{{firstNameMale}} {{lastName}}',
        '{{firstNameMale}} {{lastName}}',
        '{{firstNameMale}} {{lastName}}',
        '{{titleMale}} {{firstNameMale}} {{lastName}}',
    );

    protected static $femaleNameFormats = array(
        '{{firstNameFemale}} {{lastName}}',
        '{{firstNameFemale}} {{lastName}}',
        '{{firstNameFemale}} {{lastName}}',
        '{{titleFemale}} {{firstNameFemale}} {{lastName}}',
    );

    protected static $firstNameMale = array(
        'Abraham', 'Adriaan', 'Adrian', 'Ahmed', 'Alan', 'Albert', 'Alex', 'Alexander', 'Alfred', 'Allan', 'Andile', 'Andre', 'Andrew',
        'André', 'Anthony', 'Anton', 'Arnold', 'Arthur', 'Ayanda', 'Barry', 'Ben', 'Benjamin', 'Bernard', 'Bongani', 'Bradley',
        'Brandon', 'Brent', 'Brett', 'Brian', 'Bruce', 'Bryan', 'Carel', 'Carl', 'Charl', 'Charles', 'Chris', 'Christiaan',
        'Christian', 'Christo', 'Christopher', 'Clifford', 'Clint', 'Clinton', 'Clive', 'Colin', 'Conrad', 'Cornelius', 'Craig', 'Daniel',
        'Darren', 'Dave', 'David', 'Dean', 'Dennis', 'Deon', 'Derek', 'Desmond', 'Dirk', 'Donald', 'Donovan', 'Douglas',
        'Edward', 'Edwin', 'Emmanuel', 'Eric', 'Ernest', 'Etienne', 'Eugene', 'Francis', 'Francois', 'Frank', 'Frans', 'Frederick',
        'Gabriel', 'Gareth', 'Garth', 'Gary', 'Gavin', 'George', 'Gerald', 'Gerhard', 'Gerrit', 'Gert', 'Gideon', 'Godfrey',
        'Gordon', 'Graham', 'Grant', 'Greg', 'Gregory', 'Hannes', 'Heinrich', 'Hendrik', 'Hennie', 'Henry', 'Herman', 'Ian',
        'Innocent', 'Isaac', 'Itumeleng', 'Ivan', 'Jabulani', 'Jaco', 'Jacob', 'Jacques', 'James', 'Jan', 'Jason', 'Jeffrey',
        'Jeremy', 'Jerome', 'Joe', 'Johan', 'Johann', 'Johannes', 'John', 'Jonathan', 'Joseph', 'Juan', 'Julian', 'Justin',
        'Keith', 'Kenneth', 'Kevin', 'Kgomotso', 'Kobus', 'Kyle', 'Lawrence', 'Lee', 'Leon', 'Leonard', 'Lloyd', 'Louis',
        'Lucas ', 'Lucky', 'Malcolm', 'Mandla', 'Marc', 'Marco', 'Mario', 'Marius', 'Mark', 'Martin', 'Matthew', 'Mduduzi',
        'Michael', 'Mike', 'Mogamat', 'Mohamed', 'Mohammed', 'Morne', 'Morné', 'Moses', 'Mr. ', 'Muhammad', 'Musa', 'Nathan',
        'Neil', 'Neo', 'Neville', 'Nicholas', 'Nick', 'Nico', 'Nigel', 'Nkululeko', 'Norman', 'Ntokozo', 'Patrick', 'Paul',
        'Peter', 'Petrus', 'Philip', 'Phillip', 'Pierre', 'Pieter', 'Prince', 'Raymond', 'Rene', 'René', 'Riaan', 'Ricardo',
        'Richard', 'Rob', 'Robert', 'Rodney', 'Roger', 'Ronald', 'Roy', 'Rudi', 'Russell', 'Ryan', 'Sam', 'Samuel',
        'Sandile', 'Sean', 'Shane', 'Shaun', 'Shawn', 'Sibusiso', 'Simon', 'Simone', 'Simphiwe', 'Siphiwe', 'Sipho', 'Siyabonga',
        'Sizwe', 'Stanley', 'Stefan', 'Stephan', 'Stephen', 'Steve', 'Steven', 'Stuart', 'Tebogo', 'Terence', 'Thabang', 'Thabiso',
        'Thabo', 'Thando', 'Thapelo', 'Themba', 'Theo', 'Thomas', 'Timothy', 'To ', 'Tony', 'Trevor', 'Tshepo', 'Tsholofelo',
        'Vernon', 'Victor', 'Vincent', 'Walter', 'Warren', 'Wayne', 'Werner', 'Wesley', 'Willem', 'William', 'Willie', 'Wynand',
        'Xolani', 'Yusuf', 'andries', 'barend', 'contact', 'dumisani', 'jacobus', 'kabelo', 'kagiso', 'karabo', 'lesego', 'marthinus',
        'mashudu', 'next', 'nhlanhla', 'nicolaas', 'nkosinathi', 'personal', 'sello', 'sifiso', 'takalani', 'teboho', 'thulani', 'tumelo',
        'vusi', 'your',
        // below are unknown gender firstnames
        'Andries', 'Babalwa', 'Barend', 'Bulelwa', 'Contact ', 'Dumisani', 'Fikile', 'Jacobus', 'Kabelo', 'Kagiso', 'Karabo', 'Kelebogile', 'Lesego',
        'Lindiwe', 'Marthinus', 'Mashudu', 'Next', 'Nhlanhla', 'Nicolaas', 'Nkosinathi', 'Nompumelelo', 'Nonhlanhla', 'Nonkululeko', 'Nosipho', 'Nozipho',
        'Personal', 'Phumzile', 'Refiloe', 'Sello', 'Sibongile', 'Sifiso', 'Siphokazi', 'Takalani', 'Teboho', 'Thandeka', 'Thandi', 'Thembi',
        'Thulani', 'Tumelo', 'Unathi', 'Vusi', 'Vuyokazi', 'Yolandi', 'Your', 'Zandile',
    );

    protected static $firstNameFemale = array(
        'Abigail', 'Adele', 'Alicia', 'Alison', 'Amanda', 'Andiswa', 'Andrea', 'Angela', 'Angelique', 'Anita', 'Anna', 'Anne', 'Anthea',
        'Antoinette', 'Asanda', 'Ashley', 'Aubrey', 'Barbara', 'Belinda', 'Beverley', 'Bianca', 'Boitumelo', 'Bongiwe', 'Brenda', 'Bronwyn',
        'Busisiwe', 'Candice', 'Carla', 'Carmen', 'Carol', 'Caroline', 'Catherine', 'Cecilia', 'Celeste', 'Chantal', 'Chantel', 'Chantelle',
        'Charlene', 'Charlotte', 'Charmaine', 'Cheryl', 'Christina', 'Christine', 'Cindy', 'Claire', 'Claudia', 'Colleen', 'Cynthia', 'Danie',
        'Danielle', 'Debbie', 'Deborah', 'Denise', 'Desiree', 'Diane', 'Dimakatso', 'Dineo', 'Duduzile', 'Elaine', 'Elizabeth', 'Estelle',
        'Esther ', 'Faith', 'Fatima', 'Fiona', 'Gail', 'Gillian', 'Gloria', 'Grace', 'Gugu', 'Gugulethu', 'Heather', 'Heidi',
        'Helen', 'Ingrid', 'Irene', 'Jackie', 'Jacqueline', 'Jane', 'Janet', 'Janine', 'Jean', 'Jeanette ', 'Jennifer', 'Jenny',
        'Jessica', 'Johanna', 'Joyce', 'Juanita', 'Judith', 'Julia', 'Julie', 'Karen', 'Karin', 'Katlego', 'Kelly', 'Kim',
        'Laura', 'Lauren', 'Lebogang', 'Lebohang', 'Lee-ann', 'Leigh', 'Lerato', 'Lesley', 'Liezel', 'Linda', 'Lisa', 'Lizelle',
        'Lorraine', 'Louise', 'Lungile', 'Lydia', 'Lynette', 'Lynn', 'Mandisa', 'Mandy', 'Margaret', 'Maria', 'Marlene', 'Martha',
        'Mary', 'Maureen', 'Mbali', 'Megan', 'Melanie', 'Melissa', 'Michelle', 'Miss', 'Monica', 'Monique', 'Mpho', 'Nadia',
        'Nadine', 'Natalie', 'Natasha', 'Nicola', 'Nicole', 'Nicolene', 'Nicolette', 'Nokuthula', 'Nomfundo', 'Nomsa', 'Nthabiseng', 'Olivia',
        'Palesa', 'Pamela', 'Patience', 'Patricia', 'Pearl', 'Phindile ', 'Portia', 'Precious', 'Priscilla', 'Prudence', 'Rachel', 'Rebecca',
        'Refilwe', 'Robin', 'Robyn', 'Ronel', 'Roxanne', 'Ruth', 'Samantha', 'Sandra', 'Sarah', 'Shannon', 'Sharon', 'Shirley',
        'Sonja', 'Stephanie', 'Susan', 'Sydney', 'Sylvia', 'Tania', 'Tanya', 'Taryn', 'Tasneem', 'Thato', 'Theresa', 'Tracey',
        'Tracy', 'Tshegofatso', 'Tshepiso', 'Ursula', 'Vanessa', 'Veronica', 'Victoria', 'Wendy', 'Yolanda', 'Yvette', 'Yvonne', 'Zama',
        'Zanele', 'Zelda', 'babalwa', 'bulelwa', 'fikile', 'kelebogile', 'lindiwe', 'nompumelelo', 'nonhlanhla', 'nonkululeko', 'nosipho', 'nozipho',
        'phumzile', 'refiloe', 'sibongile', 'siphokazi', 'thandeka', 'thandi', 'thembi', 'unathi', 'vuyokazi', 'yolandi', 'zandile',
        // below are unknown gender firstnames
        'Andries', 'Babalwa', 'Barend', 'Bulelwa', 'Contact ', 'Dumisani', 'Fikile', 'Jacobus', 'Kabelo', 'Kagiso', 'Karabo', 'Kelebogile', 'Lesego',
        'Lindiwe', 'Marthinus', 'Mashudu', 'Next', 'Nhlanhla', 'Nicolaas', 'Nkosinathi', 'Nompumelelo', 'Nonhlanhla', 'Nonkululeko', 'Nosipho', 'Nozipho',
        'Personal', 'Phumzile', 'Refiloe', 'Sello', 'Sibongile', 'Sifiso', 'Siphokazi', 'Takalani', 'Teboho', 'Thandeka', 'Thandi', 'Thembi',
        'Thulani', 'Tumelo', 'Unathi', 'Vusi', 'Vuyokazi', 'Yolandi', 'Your', 'Zandile',
    );

    protected static $lastName = array(
        'Naidoo', 'Govender', 'Pillay', 'Smith', 'Botha', 'van der Merwe', 'Jacobs', 'Moodley', 'Singh', 'Ndlovu', 'Dlamini',
        'Pretorius', 'Williams', 'Khumalo', 'du Plessis', 'Nkosi', 'Coetzee', 'Venter', 'Nel', 'Fourie', 'Van Wyk', 'Chetty',
        'Smit', 'Kruger', 'Van Zyl', 'Sithole', 'du Toit', 'Adams', 'van Niekerk', 'Reddy', 'Khan', 'Meyer', 'Mahlangu', 'Abrahams',
        'Mokoena', 'Erasmus', 'Dube', 'Louw', 'Le Roux', 'Steyn', 'Tshabalala', 'Swanepoel', 'Naicker', 'Marais', 'Joubert',
        'Baloyi', 'Petersen', 'Davids', 'Viljoen', 'Maharaj', 'Details', 'Swart', 'Radebe', 'Potgieter', 'van der Westhuizen',
        'Move', 'Strydom', 'Mkhize', 'Olivier', 'Du Preez', 'Van Rooyen', 'Brown', 'Engelbrecht', 'Oosthuizen', 'Hendricks',
        'Ngwenya', 'van der Walt', 'Johnson', 'Thomas', 'Van Heerden', 'Ngcobo', 'de Beer', 'Khoza', 'Barnard', 'Ferreira',
        'Muller', 'Mazibuko', 'Zulu', 'Moyo', 'Zwane', 'Maseko', 'Chauke', 'Bezuidenhout', 'De Villiers', 'Jones', 'Buthelezi',
        'Mthembu', 'Jordaan', 'Molefe', 'Mofokeng', 'Burger', 'Visser', 'Daniels', 'Maluleke', 'Pienaar', 'Martin', 'Cloete',
        'Prinsloo', 'Mathebula', 'Janse van Rensburg', 'Grobler', 'Wilson', 'Ncube', 'Gumede', 'Ngobeni', 'Moloi', 'Kekana',
        'Mhlongo', 'Mbatha', 'Nxumalo', 'Theron', 'Snyman', 'Phiri', 'Sibiya', 'Ntuli', 'Van Den Berg', 'Mabaso', 'Bester',
        'Isaacs', 'Labuschagne', 'Jansen', 'Pieterse', 'Vorster', 'De Wet', 'Schoeman', 'De Klerk', 'Groenewald', 'Sibanda',
        'Rossouw', 'Van Rensburg', 'Naidu', 'De Jager', 'van Staden', 'Scheepers', 'Nhlapo', 'Nkuna', 'Kotze', 'Mtshali',
        'Modise', 'Ismail', 'Van Schalkwyk', 'Padayachee', 'Taylor', 'Thompson', 'Motaung', 'Booysen', 'Patel', 'Harris',
        'Joseph', 'Mthethwa', 'Arendse', 'Vilakazi', 'Lombard', 'Roberts', 'Steenkamp', 'Roux', 'Gouws', 'Botes', 'De Kock',
        'Lewis', 'James', 'Mnisi', 'Mohamed', 'Africa', 'Wessels', 'Badenhorst', 'Miller', 'Hlongwane', 'Hlatshwayo', 'Vermeulen',
        'Kunene', 'Liebenberg', 'Alexander', 'Mudau', 'Myburgh', 'van Tonder', 'Hattingh', 'Mhlanga', 'Francis', 'Mkhwanazi',
        'Basson', 'Boshoff', 'Scott', 'Xaba', 'De Lange', 'Mphahlele', 'Ebrahim', 'Cele', 'Matlala', 'Beukes', 'Coetzer',
        'Nkomo', 'Ledwaba', 'Ndaba', 'Parker', 'Els', 'Green', 'Mnguni', 'Scholtz', 'King', 'Anderson', 'Langa', 'Mulaudzi',
        'Simelane', 'Jackson', 'Shabangu', 'Mostert', 'Dhlamini', 'Geldenhuys', 'Ngubane', 'Skosana', 'Bekker', 'Phillips',
        'Brits', 'Mahomed', 'Human', 'Peters', 'George', 'Cronje', 'Sibeko', 'Swartz', 'Jooste', 'Matthews', 'Du Plooy',
        'Roos', 'Van Vuuren', 'Esterhuizen', 'Masuku', 'Mabunda', 'Lawrence', 'Moses', 'Fisher', 'Visagie', 'Solomon', 'Naude',
        'Gerber', 'Campbell', 'Lubbe', 'Van Dyk', 'Vermaak', 'Kubheka', 'Malan', 'da Silva', 'White', 'Malatji', 'Mashaba',
        'Edwards', 'Banda', 'Greyling', 'Dreyer', 'Hadebe', 'Fredericks', 'Mdluli', 'Maritz', 'Zondi', 'Masemola', 'Mabasa',
        'Fortuin', 'Shabalala', 'Bosman', 'Brink', 'Ndhlovu', 'Moonsamy', 'Mogale', 'Tsotetsi', 'Mabena', 'Morris', 'Mitchell',
        'Morgan', 'Gordon', 'Robinson', 'Dladla', 'Kriel', 'Young', 'Moloto', 'Mabuza', 'Richards', 'Sibanyoni', 'Stevens',
        'Pather', 'Mngomezulu', 'Masango', 'Solomons', 'Mlambo', 'Shongwe', 'Mthombeni', 'Lourens', 'Zungu', 'Mamabolo',
        'Watson', 'Opperman', 'Stander', 'Nair', 'Twala', 'Uys', 'Letsoalo', 'Clark', 'Wright', 'Mohlala', 'Cupido', 'Delport',
        'Sibisi', 'Terblanche', 'Motloung', 'De Bruyn', 'Davis', 'Ndou', 'Bothma', 'Benjamin', 'Jansen van Vuuren', 'Rikhotso',
        'Majola', 'Pietersen', 'Mashego', 'Herbst', 'van Deventer', 'Conradie', 'Khanyile', 'Msibi', 'Mchunu', 'Buys', 'Malinga',
        'Britz', 'Bailey', 'Cilliers', 'Goosen', 'Walker', 'Schutte', 'Salie', 'Samuels', 'Davies', 'Nkabinde', 'Robertson',
        'Lee', 'Perumal', 'Mbele', 'Greeff', 'Brand', 'Manuel', 'Nyathi', 'Kumar', 'Moore', 'Masilela', 'Bell', 'Mohale',
        'Hill', 'Maree', 'Ross', 'Bouwer', 'Ellis', 'Kemp', 'Mpofu', 'Wood', 'Stewart', 'Ahmed', 'Peter', 'Slabbert', 'Nortje',
        'Murray', 'Van Aswegen', 'De Bruin', 'Collins', 'Blignaut', 'Van Der Berg', 'Modiba', 'Jonker', 'Hall', 'Mouton',
        'Allie', 'Van Jaarsveld', 'Minnaar', 'Street', 'Maake', 'Zondo', 'Koekemoer', 'Koen', 'Claassen', 'Khosa', 'Barnes',
        'Bosch', 'Mncube', 'Marx', 'Ntombela', 'Nell', 'Makhubela', 'Jansen van Rensburg', 'Evans', 'Clarke', 'Strauss',
        'Mokone', 'Moosa', 'Neethling', 'September', 'Madonsela', 'Willemse', 'Mashigo', 'Simpson', 'Otto', 'Legodi', 'Mlangeni',
        'Mokwena', 'Andrews', 'Mashele', 'Gounden', 'Zuma', 'Msomi', 'Ngema', 'Bennett', 'Baker', 'Ntshangase', 'Nene',
        'Magagula', 'Tladi', 'Xulu', 'Müller', 'Laubscher', 'Maluleka', 'May', 'Rautenbach', 'Ndebele', 'Grobbelaar', 'Henning',
        'Carstens', 'Maleka', 'Odendaal', 'Kok', 'Oliver', 'Cassim', 'Van Eeden', 'Lottering', 'Mavuso', 'Mashinini', 'Kumalo',
        'Mathe', 'Taljaard', 'Molepo', 'David', 'Shezi', 'Turner', 'Oberholzer', 'Motsepe', 'Alberts', 'Adonis', 'van den Heever',
        'van der Linde', 'Marshall', 'Hugo', 'Thwala', 'Park', 'Cooper', 'Nelson', 'John', 'Anthony', 'Adam', 'Naudé', 'Harrison',
        'Mulder', 'Enslin', 'Truter', 'Khuzwayo', 'Makhanya', 'Harmse', 'Loubser', 'Kleynhans', 'Paul', 'Nieuwoudt', 'Horn',
        'Vosloo', 'Wentzel', 'Munyai', 'Kelly', 'Walters', 'Nzimande', 'Hoosen', 'Mkhabela', 'Madlala', 'Saunders', 'Palmer',
        'Hughes', 'Hanekom', 'Ally', 'Schmidt', 'Butler', 'Mtsweni', 'Maphumulo', 'Manamela', 'Hoffman', 'Wolmarans', 'Duma',
        'Pule', 'Hlophe', 'Miya', 'Moagi',
    );

    /**
     * @link https://en.wikipedia.org/wiki/National_identification_number#South_Africa
     *
     * @param int    $minAge
     * @param int    $maxAge
     * @param bool   $citizen
     * @param string $gender
     *
     * @return string
     */
    public function idNumber(\DateTime $birthdate = null, $citizen = true, $gender = null)
    {
        if (!$birthdate) {
            $birthdate = $this->generator->dateTimeThisCentury();
        }
        $birthDateString = $birthdate->format('ymd');
        switch (strtolower($gender)) {
            case static::GENDER_FEMALE:
                $genderDigit = self::numberBetween(0, 4);
                break;
            case static::GENDER_MALE:
                $genderDigit = self::numberBetween(5, 9);
                break;
            default:
                $genderDigit = self::numberBetween(0, 9);
        }
        $sequenceDigits = str_pad(self::randomNumber(3), 3, 0, STR_PAD_BOTH);
        $citizenDigit = ($citizen === true) ? '0' : '1';
        $raceDigit = self::randomNumber(1);

        $partialIdNumber = $birthDateString . $genderDigit . $sequenceDigits . $citizenDigit . $raceDigit;

        return $partialIdNumber . Luhn::computeCheckDigit($partialIdNumber);
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:21:"\Faker\Provider\en_ZA";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\Faker\Provider\en_ZA";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"en_ZA";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:28:"\Faker\Provider\en_ZA\Person";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:28:"\Faker\Provider\en_ZA\Person";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"Person";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:22:"\Faker\Provider\Person";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"Person";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:5:{s:46:"\Faker\Provider\en_ZA\Person::$maleNameFormats";O:37:"phpDocumentor\Reflection\Php\Property":7:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:46:"\Faker\Provider\en_ZA\Person::$maleNameFormats";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"maleNameFormats";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:147:"array({{firstNameMale}} {{lastName}}, {{firstNameMale}} {{lastName}}, {{firstNameMale}} {{lastName}}, {{titleMale}} {{firstNameMale}} {{lastName}})";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:10;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}s:48:"\Faker\Provider\en_ZA\Person::$femaleNameFormats";O:37:"phpDocumentor\Reflection\Php\Property":7:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:48:"\Faker\Provider\en_ZA\Person::$femaleNameFormats";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"femaleNameFormats";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:157:"array({{firstNameFemale}} {{lastName}}, {{firstNameFemale}} {{lastName}}, {{firstNameFemale}} {{lastName}}, {{titleFemale}} {{firstNameFemale}} {{lastName}})";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:17;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}s:44:"\Faker\Provider\en_ZA\Person::$firstNameMale";O:37:"phpDocumentor\Reflection\Php\Property":7:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:44:"\Faker\Provider\en_ZA\Person::$firstNameMale";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"firstNameMale";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:3830:"array(
    Abraham,
    Adriaan,
    Adrian,
    Ahmed,
    Alan,
    Albert,
    Alex,
    Alexander,
    Alfred,
    Allan,
    Andile,
    Andre,
    Andrew,
    André,
    Anthony,
    Anton,
    Arnold,
    Arthur,
    Ayanda,
    Barry,
    Ben,
    Benjamin,
    Bernard,
    Bongani,
    Bradley,
    Brandon,
    Brent,
    Brett,
    Brian,
    Bruce,
    Bryan,
    Carel,
    Carl,
    Charl,
    Charles,
    Chris,
    Christiaan,
    Christian,
    Christo,
    Christopher,
    Clifford,
    Clint,
    Clinton,
    Clive,
    Colin,
    Conrad,
    Cornelius,
    Craig,
    Daniel,
    Darren,
    Dave,
    David,
    Dean,
    Dennis,
    Deon,
    Derek,
    Desmond,
    Dirk,
    Donald,
    Donovan,
    Douglas,
    Edward,
    Edwin,
    Emmanuel,
    Eric,
    Ernest,
    Etienne,
    Eugene,
    Francis,
    Francois,
    Frank,
    Frans,
    Frederick,
    Gabriel,
    Gareth,
    Garth,
    Gary,
    Gavin,
    George,
    Gerald,
    Gerhard,
    Gerrit,
    Gert,
    Gideon,
    Godfrey,
    Gordon,
    Graham,
    Grant,
    Greg,
    Gregory,
    Hannes,
    Heinrich,
    Hendrik,
    Hennie,
    Henry,
    Herman,
    Ian,
    Innocent,
    Isaac,
    Itumeleng,
    Ivan,
    Jabulani,
    Jaco,
    Jacob,
    Jacques,
    James,
    Jan,
    Jason,
    Jeffrey,
    Jeremy,
    Jerome,
    Joe,
    Johan,
    Johann,
    Johannes,
    John,
    Jonathan,
    Joseph,
    Juan,
    Julian,
    Justin,
    Keith,
    Kenneth,
    Kevin,
    Kgomotso,
    Kobus,
    Kyle,
    Lawrence,
    Lee,
    Leon,
    Leonard,
    Lloyd,
    Louis,
    Lucas ,
    Lucky,
    Malcolm,
    Mandla,
    Marc,
    Marco,
    Mario,
    Marius,
    Mark,
    Martin,
    Matthew,
    Mduduzi,
    Michael,
    Mike,
    Mogamat,
    Mohamed,
    Mohammed,
    Morne,
    Morné,
    Moses,
    Mr. ,
    Muhammad,
    Musa,
    Nathan,
    Neil,
    Neo,
    Neville,
    Nicholas,
    Nick,
    Nico,
    Nigel,
    Nkululeko,
    Norman,
    Ntokozo,
    Patrick,
    Paul,
    Peter,
    Petrus,
    Philip,
    Phillip,
    Pierre,
    Pieter,
    Prince,
    Raymond,
    Rene,
    René,
    Riaan,
    Ricardo,
    Richard,
    Rob,
    Robert,
    Rodney,
    Roger,
    Ronald,
    Roy,
    Rudi,
    Russell,
    Ryan,
    Sam,
    Samuel,
    Sandile,
    Sean,
    Shane,
    Shaun,
    Shawn,
    Sibusiso,
    Simon,
    Simone,
    Simphiwe,
    Siphiwe,
    Sipho,
    Siyabonga,
    Sizwe,
    Stanley,
    Stefan,
    Stephan,
    Stephen,
    Steve,
    Steven,
    Stuart,
    Tebogo,
    Terence,
    Thabang,
    Thabiso,
    Thabo,
    Thando,
    Thapelo,
    Themba,
    Theo,
    Thomas,
    Timothy,
    To ,
    Tony,
    Trevor,
    Tshepo,
    Tsholofelo,
    Vernon,
    Victor,
    Vincent,
    Walter,
    Warren,
    Wayne,
    Werner,
    Wesley,
    Willem,
    William,
    Willie,
    Wynand,
    Xolani,
    Yusuf,
    andries,
    barend,
    contact,
    dumisani,
    jacobus,
    kabelo,
    kagiso,
    karabo,
    lesego,
    marthinus,
    mashudu,
    next,
    nhlanhla,
    nicolaas,
    nkosinathi,
    personal,
    sello,
    sifiso,
    takalani,
    teboho,
    thulani,
    tumelo,
    vusi,
    your,
    // below are unknown gender firstnames
    Andries,
    Babalwa,
    Barend,
    Bulelwa,
    Contact ,
    Dumisani,
    Fikile,
    Jacobus,
    Kabelo,
    Kagiso,
    Karabo,
    Kelebogile,
    Lesego,
    Lindiwe,
    Marthinus,
    Mashudu,
    Next,
    Nhlanhla,
    Nicolaas,
    Nkosinathi,
    Nompumelelo,
    Nonhlanhla,
    Nonkululeko,
    Nosipho,
    Nozipho,
    Personal,
    Phumzile,
    Refiloe,
    Sello,
    Sibongile,
    Sifiso,
    Siphokazi,
    Takalani,
    Teboho,
    Thandeka,
    Thandi,
    Thembi,
    Thulani,
    Tumelo,
    Unathi,
    Vusi,
    Vuyokazi,
    Yolandi,
    Your,
    Zandile,
)";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:24;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}s:46:"\Faker\Provider\en_ZA\Person::$firstNameFemale";O:37:"phpDocumentor\Reflection\Php\Property":7:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:46:"\Faker\Provider\en_ZA\Person::$firstNameFemale";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"firstNameFemale";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:3357:"array(
    Abigail,
    Adele,
    Alicia,
    Alison,
    Amanda,
    Andiswa,
    Andrea,
    Angela,
    Angelique,
    Anita,
    Anna,
    Anne,
    Anthea,
    Antoinette,
    Asanda,
    Ashley,
    Aubrey,
    Barbara,
    Belinda,
    Beverley,
    Bianca,
    Boitumelo,
    Bongiwe,
    Brenda,
    Bronwyn,
    Busisiwe,
    Candice,
    Carla,
    Carmen,
    Carol,
    Caroline,
    Catherine,
    Cecilia,
    Celeste,
    Chantal,
    Chantel,
    Chantelle,
    Charlene,
    Charlotte,
    Charmaine,
    Cheryl,
    Christina,
    Christine,
    Cindy,
    Claire,
    Claudia,
    Colleen,
    Cynthia,
    Danie,
    Danielle,
    Debbie,
    Deborah,
    Denise,
    Desiree,
    Diane,
    Dimakatso,
    Dineo,
    Duduzile,
    Elaine,
    Elizabeth,
    Estelle,
    Esther ,
    Faith,
    Fatima,
    Fiona,
    Gail,
    Gillian,
    Gloria,
    Grace,
    Gugu,
    Gugulethu,
    Heather,
    Heidi,
    Helen,
    Ingrid,
    Irene,
    Jackie,
    Jacqueline,
    Jane,
    Janet,
    Janine,
    Jean,
    Jeanette ,
    Jennifer,
    Jenny,
    Jessica,
    Johanna,
    Joyce,
    Juanita,
    Judith,
    Julia,
    Julie,
    Karen,
    Karin,
    Katlego,
    Kelly,
    Kim,
    Laura,
    Lauren,
    Lebogang,
    Lebohang,
    Lee-ann,
    Leigh,
    Lerato,
    Lesley,
    Liezel,
    Linda,
    Lisa,
    Lizelle,
    Lorraine,
    Louise,
    Lungile,
    Lydia,
    Lynette,
    Lynn,
    Mandisa,
    Mandy,
    Margaret,
    Maria,
    Marlene,
    Martha,
    Mary,
    Maureen,
    Mbali,
    Megan,
    Melanie,
    Melissa,
    Michelle,
    Miss,
    Monica,
    Monique,
    Mpho,
    Nadia,
    Nadine,
    Natalie,
    Natasha,
    Nicola,
    Nicole,
    Nicolene,
    Nicolette,
    Nokuthula,
    Nomfundo,
    Nomsa,
    Nthabiseng,
    Olivia,
    Palesa,
    Pamela,
    Patience,
    Patricia,
    Pearl,
    Phindile ,
    Portia,
    Precious,
    Priscilla,
    Prudence,
    Rachel,
    Rebecca,
    Refilwe,
    Robin,
    Robyn,
    Ronel,
    Roxanne,
    Ruth,
    Samantha,
    Sandra,
    Sarah,
    Shannon,
    Sharon,
    Shirley,
    Sonja,
    Stephanie,
    Susan,
    Sydney,
    Sylvia,
    Tania,
    Tanya,
    Taryn,
    Tasneem,
    Thato,
    Theresa,
    Tracey,
    Tracy,
    Tshegofatso,
    Tshepiso,
    Ursula,
    Vanessa,
    Veronica,
    Victoria,
    Wendy,
    Yolanda,
    Yvette,
    Yvonne,
    Zama,
    Zanele,
    Zelda,
    babalwa,
    bulelwa,
    fikile,
    kelebogile,
    lindiwe,
    nompumelelo,
    nonhlanhla,
    nonkululeko,
    nosipho,
    nozipho,
    phumzile,
    refiloe,
    sibongile,
    siphokazi,
    thandeka,
    thandi,
    thembi,
    unathi,
    vuyokazi,
    yolandi,
    zandile,
    // below are unknown gender firstnames
    Andries,
    Babalwa,
    Barend,
    Bulelwa,
    Contact ,
    Dumisani,
    Fikile,
    Jacobus,
    Kabelo,
    Kagiso,
    Karabo,
    Kelebogile,
    Lesego,
    Lindiwe,
    Marthinus,
    Mashudu,
    Next,
    Nhlanhla,
    Nicolaas,
    Nkosinathi,
    Nompumelelo,
    Nonhlanhla,
    Nonkululeko,
    Nosipho,
    Nozipho,
    Personal,
    Phumzile,
    Refiloe,
    Sello,
    Sibongile,
    Sifiso,
    Siphokazi,
    Takalani,
    Teboho,
    Thandeka,
    Thandi,
    Thembi,
    Thulani,
    Tumelo,
    Unathi,
    Vusi,
    Vuyokazi,
    Yolandi,
    Your,
    Zandile,
)";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:55;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}s:39:"\Faker\Provider\en_ZA\Person::$lastName";O:37:"phpDocumentor\Reflection\Php\Property":7:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:39:"\Faker\Provider\en_ZA\Person::$lastName";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"lastName";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:4353:"array(Naidoo, Govender, Pillay, Smith, Botha, van der Merwe, Jacobs, Moodley, Singh, Ndlovu, Dlamini, Pretorius, Williams, Khumalo, du Plessis, Nkosi, Coetzee, Venter, Nel, Fourie, Van Wyk, Chetty, Smit, Kruger, Van Zyl, Sithole, du Toit, Adams, van Niekerk, Reddy, Khan, Meyer, Mahlangu, Abrahams, Mokoena, Erasmus, Dube, Louw, Le Roux, Steyn, Tshabalala, Swanepoel, Naicker, Marais, Joubert, Baloyi, Petersen, Davids, Viljoen, Maharaj, Details, Swart, Radebe, Potgieter, van der Westhuizen, Move, Strydom, Mkhize, Olivier, Du Preez, Van Rooyen, Brown, Engelbrecht, Oosthuizen, Hendricks, Ngwenya, van der Walt, Johnson, Thomas, Van Heerden, Ngcobo, de Beer, Khoza, Barnard, Ferreira, Muller, Mazibuko, Zulu, Moyo, Zwane, Maseko, Chauke, Bezuidenhout, De Villiers, Jones, Buthelezi, Mthembu, Jordaan, Molefe, Mofokeng, Burger, Visser, Daniels, Maluleke, Pienaar, Martin, Cloete, Prinsloo, Mathebula, Janse van Rensburg, Grobler, Wilson, Ncube, Gumede, Ngobeni, Moloi, Kekana, Mhlongo, Mbatha, Nxumalo, Theron, Snyman, Phiri, Sibiya, Ntuli, Van Den Berg, Mabaso, Bester, Isaacs, Labuschagne, Jansen, Pieterse, Vorster, De Wet, Schoeman, De Klerk, Groenewald, Sibanda, Rossouw, Van Rensburg, Naidu, De Jager, van Staden, Scheepers, Nhlapo, Nkuna, Kotze, Mtshali, Modise, Ismail, Van Schalkwyk, Padayachee, Taylor, Thompson, Motaung, Booysen, Patel, Harris, Joseph, Mthethwa, Arendse, Vilakazi, Lombard, Roberts, Steenkamp, Roux, Gouws, Botes, De Kock, Lewis, James, Mnisi, Mohamed, Africa, Wessels, Badenhorst, Miller, Hlongwane, Hlatshwayo, Vermeulen, Kunene, Liebenberg, Alexander, Mudau, Myburgh, van Tonder, Hattingh, Mhlanga, Francis, Mkhwanazi, Basson, Boshoff, Scott, Xaba, De Lange, Mphahlele, Ebrahim, Cele, Matlala, Beukes, Coetzer, Nkomo, Ledwaba, Ndaba, Parker, Els, Green, Mnguni, Scholtz, King, Anderson, Langa, Mulaudzi, Simelane, Jackson, Shabangu, Mostert, Dhlamini, Geldenhuys, Ngubane, Skosana, Bekker, Phillips, Brits, Mahomed, Human, Peters, George, Cronje, Sibeko, Swartz, Jooste, Matthews, Du Plooy, Roos, Van Vuuren, Esterhuizen, Masuku, Mabunda, Lawrence, Moses, Fisher, Visagie, Solomon, Naude, Gerber, Campbell, Lubbe, Van Dyk, Vermaak, Kubheka, Malan, da Silva, White, Malatji, Mashaba, Edwards, Banda, Greyling, Dreyer, Hadebe, Fredericks, Mdluli, Maritz, Zondi, Masemola, Mabasa, Fortuin, Shabalala, Bosman, Brink, Ndhlovu, Moonsamy, Mogale, Tsotetsi, Mabena, Morris, Mitchell, Morgan, Gordon, Robinson, Dladla, Kriel, Young, Moloto, Mabuza, Richards, Sibanyoni, Stevens, Pather, Mngomezulu, Masango, Solomons, Mlambo, Shongwe, Mthombeni, Lourens, Zungu, Mamabolo, Watson, Opperman, Stander, Nair, Twala, Uys, Letsoalo, Clark, Wright, Mohlala, Cupido, Delport, Sibisi, Terblanche, Motloung, De Bruyn, Davis, Ndou, Bothma, Benjamin, Jansen van Vuuren, Rikhotso, Majola, Pietersen, Mashego, Herbst, van Deventer, Conradie, Khanyile, Msibi, Mchunu, Buys, Malinga, Britz, Bailey, Cilliers, Goosen, Walker, Schutte, Salie, Samuels, Davies, Nkabinde, Robertson, Lee, Perumal, Mbele, Greeff, Brand, Manuel, Nyathi, Kumar, Moore, Masilela, Bell, Mohale, Hill, Maree, Ross, Bouwer, Ellis, Kemp, Mpofu, Wood, Stewart, Ahmed, Peter, Slabbert, Nortje, Murray, Van Aswegen, De Bruin, Collins, Blignaut, Van Der Berg, Modiba, Jonker, Hall, Mouton, Allie, Van Jaarsveld, Minnaar, Street, Maake, Zondo, Koekemoer, Koen, Claassen, Khosa, Barnes, Bosch, Mncube, Marx, Ntombela, Nell, Makhubela, Jansen van Rensburg, Evans, Clarke, Strauss, Mokone, Moosa, Neethling, September, Madonsela, Willemse, Mashigo, Simpson, Otto, Legodi, Mlangeni, Mokwena, Andrews, Mashele, Gounden, Zuma, Msomi, Ngema, Bennett, Baker, Ntshangase, Nene, Magagula, Tladi, Xulu, Müller, Laubscher, Maluleka, May, Rautenbach, Ndebele, Grobbelaar, Henning, Carstens, Maleka, Odendaal, Kok, Oliver, Cassim, Van Eeden, Lottering, Mavuso, Mashinini, Kumalo, Mathe, Taljaard, Molepo, David, Shezi, Turner, Oberholzer, Motsepe, Alberts, Adonis, van den Heever, van der Linde, Marshall, Hugo, Thwala, Park, Cooper, Nelson, John, Anthony, Adam, Naudé, Harrison, Mulder, Enslin, Truter, Khuzwayo, Makhanya, Harmse, Loubser, Kleynhans, Paul, Nieuwoudt, Horn, Vosloo, Wentzel, Munyai, Kelly, Walters, Nzimande, Hoosen, Mkhabela, Madlala, Saunders, Palmer, Hughes, Hanekom, Ally, Schmidt, Butler, Mtsweni, Maphumulo, Manamela, Hoffman, Wolmarans, Duma, Pule, Hlophe, Miya, Moagi)";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:81;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:1:{s:40:"\Faker\Provider\en_ZA\Person::idNumber()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:6:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:73:"https://en.wikipedia.org/wiki/National_identification_number#South_Africa";s:14:" * description";N;}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":5:{s:7:" * name";s:5:"param";s:50:" phpDocumentor\Reflection\DocBlock\Tags\Param type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"minAge";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":5:{s:7:" * name";s:5:"param";s:50:" phpDocumentor\Reflection\DocBlock\Tags\Param type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"maxAge";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:3;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":5:{s:7:" * name";s:5:"param";s:50:" phpDocumentor\Reflection\DocBlock\Tags\Param type";O:38:"phpDocumentor\Reflection\Types\Boolean":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"citizen";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:4;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":5:{s:7:" * name";s:5:"param";s:50:" phpDocumentor\Reflection\DocBlock\Tags\Param type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"gender";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:5;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:52:" phpDocumentor\Reflection\DocBlock\Tags\Return_ type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:20:"Faker\Provider\en_ZA";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:2:{s:4:"Luhn";s:21:"Faker\Calculator\Luhn";s:8:"DateTime";s:23:"Faker\Provider\DateTime";}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:130;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:40:"\Faker\Provider\en_ZA\Person::idNumber()";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"idNumber";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"birthdate";s:44:" phpDocumentor\Reflection\Php\Argument types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"null";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"citizen";s:44:" phpDocumentor\Reflection\Php\Argument types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"true";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"gender";s:44:" phpDocumentor\Reflection\Php\Argument types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"null";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:140;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:8;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}'));

/* Child Type: integer */
$data['createdOn'] = 1526970269;
