<?php 
/* Cachekey: cache/stash_default/documentation\api\php\7ac1bf3f1920598829471fd22b15e178/ */
/* Type: array */
/* Expiration: 2018-06-04T19:13:34+00:00 */



$loaded = true;
$expiration = 1528139614;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"eb9717f9c26f1fa1b1d6d7d3bd5e440f";s:39:" phpDocumentor\Reflection\Php\File name";s:20:"f2f7d090e6599022.php";s:39:" phpDocumentor\Reflection\Php\File path";s:121:"build/api-cache/0fea6a13c52b4d47/25368f24b045ca84/38a865804f8fdcb6/57cd99682e939275/33544b809ff9cc71/f2f7d090e6599022.php";s:41:" phpDocumentor\Reflection\Php\File source";s:39008:"<?php 
/* Cachekey: cache/stash_default/documentation\api\php\3e69acc48c48ab2613c969f78b8a1508/ */
/* Type: array */
/* Expiration: 2018-06-05T02:48:58+00:00 */



$loaded = true;
$expiration = 1528166938;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjE3ZDU5N2FhZjZhNzc3NzZmZDg3OTA2Y2FkODM2OGY1IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6IjBlMmZmMWM3NDQ0ODNmZjkucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTIxOiJidWlsZC9hcGktY2FjaGUvMGZlYTZhMTNjNTJiNGQ0Ny8yNTM2OGYyNGIwNDVjYTg0LzM4YTg2NTgwNGY4ZmRjYjYvNTdjZDk5NjgyZTkzOTI3NS84ZWExNWM0MjcyODY0NDkzLzBlMmZmMWM3NDQ0ODNmZjkucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoyODA4NDoiPD9waHAgCi8qIENhY2hla2V5OiBjYWNoZS9zdGFzaF9kZWZhdWx0L2RvY3VtZW50YXRpb25cYXBpXHBocFw5ZDg4YjEwMTA1MzQxZTY0MmM2NTkwN2E4M2M3YWE0OC8gKi8KLyogVHlwZTogYXJyYXkgKi8KLyogRXhwaXJhdGlvbjogMjAxOC0wNS0yNlQxNjo0NDoxMiswMDowMCAqLwoKCgokbG9hZGVkID0gdHJ1ZTsKJGV4cGlyYXRpb24gPSAxNTI3MzUzMDUyOwoKJGRhdGEgPSBhcnJheSgpOwoKLyogQ2hpbGQgVHlwZTogb2JqZWN0ICovCiRkYXRhWydyZXR1cm4nXSA9IHVuc2VyaWFsaXplKGJhc2U2NF9kZWNvZGUoJ1R6b3pNem9pY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxJam94TWpwN2N6bzBNem9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJrYjJOQ2JHOWpheUk3VGp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBR2hoYzJnaU8zTTZNekk2SW1GbU9HRTNORE5rTldVeE5EQmtORFpoWXpnMU1URmxZbVl6WTJGaFl6aGxJanR6T2pNNU9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHNWhiV1VpTzNNNk1qQTZJalJrTmpWaU9EQXlOVGRpTjJFeE4yTXVjR2h3SWp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBSEJoZEdnaU8zTTZNVEl4T2lKaWRXbHNaQzloY0drdFkyRmphR1V2TUdabFlUWmhNVE5qTlRKaU5HUTBOeTh5TlRNMk9HWXlOR0l3TkRWallUZzBMek00WVRnMk5UZ3dOR1k0Wm1SallqWXZOVGRqWkRrNU5qZ3laVGt6T1RJM05TOWlNV1kwTWpKak9UQXpNV1E1WkRFeEx6UmtOalZpT0RBeU5UZGlOMkV4TjJNdWNHaHdJanR6T2pReE9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFITnZkWEpqWlNJN2N6b3hPVGc1TWpvaVBEOXdhSEFnQ2k4cUlFTmhZMmhsYTJWNU9pQmpZV05vWlM5emRHRnphRjlrWldaaGRXeDBMMlJ2WTNWdFpXNTBZWFJwYjI1Y1lYQnBYSEJvY0Z4bU0yUTFOekprT0RNeFlqZzBNamMyWm1RNU4yVTBPREl3TkRreE5HRXlNeThnS2k4S0x5b2dWSGx3WlRvZ1lYSnlZWGtnS2k4S0x5b2dSWGh3YVhKaGRHbHZiam9nTWpBeE9DMHdOUzB5TmxReE56b3pOem95Tmlzd01Eb3dNQ0FxTHdvS0Nnb2tiRzloWkdWa0lEMGdkSEoxWlRzS0pHVjRjR2x5WVhScGIyNGdQU0F4TlRJM016VTJNalEyT3dvS0pHUmhkR0VnUFNCaGNuSmhlU2dwT3dvS0x5b2dRMmhwYkdRZ1ZIbHdaVG9nYjJKcVpXTjBJQ292Q2lSa1lYUmhXeWR5WlhSMWNtNG5YU0E5SUhWdWMyVnlhV0ZzYVhwbEtHSmhjMlUyTkY5a1pXTnZaR1VvSjFSNmIzcE5lbTlwWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFIyRlhlR3hKYW05NFRXcHdOMk42YnpCTmVtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUpyWWpKT1EySkhPV3BoZVVrM1ZHcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJSMmhvWXpKbmFVOHpUVFpOZWtrMlNXcENhbHBIVG1oYWJWSm9UVEpKTVU5RVdYcFplbWN6VGtSc2FsbDZWWGRaVjBaclRsZFplVTR5V214SmFuUjZUMnBOTlU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhIWVZkNGJFRkhOV2hpVjFWcFR6Tk5OazFxUVRaSmFrWnNXVEphYTFwcVp6Qk5SMVpxVGtSbmVsbHFZM1ZqUjJoM1NXcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJTRUpvWkVkbmFVOHpUVFpOVkVsNFQybEthV1JYYkhOYVF6bG9ZMGRyZEZreVJtcGhSMVYyVFVkYWJGbFVXbWhOVkU1cVRsUkthVTVIVVRCT2VUaDVUbFJOTWs5SFdYbE9SMGwzVGtSV2FsbFVaekJNZWswMFdWUm5NazVVWjNkT1IxazBXbTFTYWxscVdYWk9WR1JxV2tSck5VNXFaM2xhVkd0NlQxUkpNMDVUT0hsTk1rNW9XbTFPYTA5VVVtbE9iVVY0V1cxU2FVeDZSbXhaTWxwcldtcG5NRTFIVm1wT1JHZDZXV3BqZFdOSGFIZEphblI2VDJwUmVFOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oSFlWZDRiRUZJVG5aa1dFcHFXbE5KTjJONmIzaE5lbU13VDBSdmFWQkVPWGRoU0VGblEyazRjVWxGVG1oWk1taHNZVEpXTlU5cFFtcFpWMDV2V2xNNWVtUkhSbnBoUmpscldsZGFhR1JYZURCTU1sSjJXVE5XZEZwWE5UQlpXRkp3WWpJMVkxbFlRbkJZU0VKdlkwWjNkMXBxWkd0TlZHdDVXa2RGTTAxNlJtaE5hbFV6V1hwbmVVOVVSVEZQUkZrd1QwUkthVTVFUW1oTmVUaG5TMms0UzB4NWIyZFdTR3gzV2xSdloxbFlTbmxaV0d0blMyazRTMHg1YjJkU1dHaDNZVmhLYUdSSGJIWmlhbTluVFdwQmVFOURNSGRPVXpCNVRteFJlVTFxYnpGT2FtOTZUa056ZDAxRWIzZE5RMEZ4VEhkdlMwTm5iMnRpUnpsb1drZFdhMGxFTUdka1NFb3hXbFJ6UzBwSFZqUmpSMng1V1ZoU2NHSXlOR2RRVTBGNFRsUkpNMDE2WXpGTmVtc3dUM2R2UzBwSFVtaGtSMFZuVUZOQ2FHTnVTbWhsVTJkd1QzZHZTMHg1YjJkUk1taHdZa2RSWjFaSWJIZGFWRzluWWpKS2NWcFhUakJKUTI5MlEybFNhMWxZVW1oWGVXUjVXbGhTTVdOdE5HNVlVMEU1U1VoV2RXTXlWbmxoVjBaellWaHdiRXRIU21oak1sVXlUa1k1YTFwWFRuWmFSMVZ2U2pGU05tSXpjRTVsYlRsd1dUQmtiMlF4U2toUFYzQnJWbnBHYzFsdE5WTmtiVTV6WlVaT1lWWXhjSHBYYkdSUFRVZEdXRTlZVmxsU2EwcDJXVEJhTkZJeVJsaGxSM2hLWVcwNU5GUlhjSGRPTWs0MllucENUbVZ0T1hCUlZXaERZakpPUmxWdVdscE5NVm93VjJ4ak1VMUhTWHBUYlU1V1lsWmFkRmxyWkZkaGJWSklZa2hhYVdKSWFGSlpWV2hEV1RGS2RHSklUbUZWVlVweVdXcEtUMUV5U2toUFYzQm9aVlZyTTFaSGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlNNbWh2V1hwS2JtRlZPSHBVVkZwT1pXdHJNbE5YY0d0aVJURTJVbTF3V2xaSGVITlVWekZLVFdzNVJXRXpiRTlsYXpWelYxaHdRazFWTlZWVVdHaFBaV3hLZEZkc1pFOWhNV3hWVTIweFNtRnVValpVTW5CT1RsVTVjRk5WUm1wU01tZ3pWV3RqTldGdFVsaE5WM2hwWW14S01sa3llRFJWTVhCWVYyNU9ZVll3TkhkWlZtTTFaRlpvUjFGdE9XcFNibWhJV1Zaa05HSkZSa2hPVjJocFZqRldjRlI2VGs1T2F6RnhVVlJhU21GdFpETlhXSEJXVFdzeFZWSlliRTVTTURCNFYxaHdibVZWTVZWVVdGWnFVakpvTTFOWGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlRSVXB2V2tWa2JtRlZPSHBVVkZwT1ZrVnNORlF5YkV0aFYxSllZa2hPWVZGNmJHOVpNR1J5WkVacmVWSnRjR2hTTVZZeVZGVmtZV0pHYkZWWGJXaE9Wa1UxY1ZSc1VrdGhWVFZJVlZSQ1QyVlVhRFZVYkZKT1RXczVTRmRZYkU5U01Hd3pWR3RTVjJGc2JGVmFla0pOWldzd01GZFdVbTVOYXpWVldqTmtUMUl4YXpCWGJURlRZV3hzY1ZkWVdrOVdSMUp4VjJ0U2NrNVZOWEZhTTJ4aFZrZDBObFF4VWtwTk1EVlVUMWR3VUZKR1ZYbFhWbVJXVFRBeE5scEhjRnBsYldRMlZGY3hZV0pGZURaYU0yUmFaV3hWZVZSV1VrWmxWVEZJVkZSR1dtVnRaRFZVVmxKT1pGZE9TR0ZJWkVwaGJsSTJWREp3VW1WRk9YQlRWVVpxVWpKb00xVnJZelZoYlZKWVRWZDRhV0pzU2pKWk1uZzBWVEZ3V0ZkdVRtRldNRFIzV1Zaak5XUldhRWRSYlRscVVtNW9TRmxXWkRSaVJVWkpWRzVhYTFkRmNIRlhiRTVLVGpKT05tSjZWazVXUmtZelZESnNTazlHUVhwUmJUbHFVVEJHVEZSSWJIWmFNVVY1VW0xd2FGSXhXbmxYYkdoeVRtdHNTRlJ0YUZwTmJXaHpWRVJPVDAxR2JGbFViVGxaVFd4S2MxZHRNVWROVjBwSlZWaGFZVko2YkhGYVJtTjRZa2RLZFZWdGFHdFNNbmd5V1cxNE5HRkhUa2hpUjA1cVVqSm9NMWRGVWs5aFZUVjBWVlJXVDFKSFVuUlViWEJXWlZad1JWWnRkRTlpVmxwMFYyMXdjazB4YkZWaFIzUmFZVzFrTmxRd1VrZGhSVFZ4VTFSS1RXVlZSbmhVU0dSMlpHdDBjRkZzVm14WFJVcHpWREpzUTJGSFRuVlRiV2hzVlRCR2VGUklaSFprYTNSd1VXdGFiRk5GU25kWk1qRkhUVWRHV0U5WVZsQmhWVVkxVkZWU1JrNUZlRlZSVkVaTlZrVnJlbFpyVWtKTk1EbHhWRlJPVUdGck1IZFRNM0JDWkRBNWNWRllaRXBSTWpreVVUSmtkbE13VG5CVmJrNXBUV3RhY2xkc1pGSmFNVUpVVVdwQ2FtSnNXbk5VTTJSMllURndXV0ZJWkdoWFJYQnZXa1ZrYzJSdFNuQlJWR3hLVWtWVmVGUlhjR3BOUlRGRlYxUktUMVpHUlROUk1tUjJZVEZ3U0ZKcVFscFZNRVUxVTFWa1IyVlhUblJTYWxaTVVUSnpNMUV5Wkhaa2EzUndVV3RTYUZJeWVIcFhhMDVEVmxkV1dWRnRlRkJoVlVveVYxY3hkMkpHYTNwVlYyUk1ZVlJvVEZOclpGTmhSMUpJVW0xS1MwMHdjSE5hUldoWFpWZEtjRnBIVWtwU1JFSnVXa1pqTVdWc2NGbFRia0phVmpOb2QxcFhNVlppTVd4MFVtNXdZVlpHYTNkWFJFcFRZa1pyZVU5WGRHRlZNbVIxVm10b2QyUnRWbkpOVkZwcFRXMTRjVlZxU205Tk1WWnlXWHBXYUdKV1NsbFVWbVEwWVZkS2MxTnFTbHBOYm1jd1ZsUkdkMWRHWkhWVWJVWlhUVVJTTTFkV1dtcE9WMUpYWVVWa1VtSlViSEZWYlRWdlUwWnNWMXBFVW1sU1YzaDRXV3BPYjFSdFJuVlJWRTVhVFROQ01sUlZWWGhPYlVsNVlrVktWRkpWY0RKWFZFSlhWVEpTYzJFemNGZGliRXBvVm01d1ZtUXhiSEZVYTNSYVRWWmFNRlp0TUhoaFZrbDRWMjVHWVZKWFVucGFSekZMWXpKV1IxSnRhRlJTVlhCeFZsY3dlR015VFhoalJrcFNZbGhTY0ZSWGN6RlNSbXh5V1hwV2FHSlZXVEZWTVZKclZsZEdkVlZxV2xWTmJrSlBWR3hWTldOR1RsWlNiWEJUVFcxbmVsWlhkR3BPVjBaMFZXeG9UbFl6YUhCWmJYaExUV3hyZVdWRVVsWk5XRUpaVmpJMVQxbFdXWGRPU0dSYVZtMU5NVnBHV205U01VWjBUMWR3VTJKdGFFbFhWbHByVGtkS1JsSnJhR2hTTW1oeFZGY3hhMk5HVWpaVWF6VlBZWHBGTWxVeFVtRlRiVVp5VWxoc1ZXRXlVbEJaVjNNeFVsWmtWVkp0Um1oaVYxRjZWakowVTFOdFZsWk9XRkpVVjBkNFVWVnJaR3RPUm1SWlkwWk9hVlp1UWxaVk1WSlRWMjFHZEZremNGaGhNVXBUV2xkMGMyTlhVa2xqUmtKb1lYcEJlRlpFU25OVGJFWllWR3RvYUZOSFVsUlZibkJ6WTFad1Ixa3phR2xTTUhBeFZsYzFZV0Z0U2tsaFJsSllZa2RTYUZsNlJuZFhSbEp4VVcxb1YyVnRkM2hXTUZaaFVUSkplVlJyWkd4U1YxSnZWbXBPYjJNeFJsWlpla1pvVWpCd1dWWnNaSE5WUlRCM1RVUktWVll6UWtOVWJYUnpaRVprVlZOc2NHaGlSVlkwVmtjeGQxUnJNVlpOVkZwV1YwaENUMVZyVm5KbGJHUnpWV3R3YTFZd05VbFpWV2hyVTIxR2RWVnFXbFZOYmtKUFZHeFZOV05HVGxaU2JYQlRUVzFuZWxaWGRHcE9WMFowVld4b1RsWXphSEJaYlhoTFRXeHJlV1ZFVWxaTldFSlpWakkxVDFsV1dYZE9TR1JhVm0xTk1WcEdXbTlTTVVaMFQxZHdVMkp0YUVsWFZscHJUa2RLUmxKcmJGSmlWMmh5VldwS2EyTkdValpVYXpWUFlYcEdWbFV4YUc5VlIwWldZMGhDWVZKdFVucFpla1ozVWtVNVdHRkhjRk5OYmxGM1ZqRlNTMUl5Um5SU2EyaFhWMFp3VDFWcVJuZGpNV1JYVlcxR2FGSlVSbFpXUnpGM1ZERmFSbU5JUWxWaE1sSlRWRlZWTVU1Vk9VbGlSVGxYVWxSQ05WWkVRbXRYYlZaV1RsVm9WRmRIVWxCVmExcGhZMVprVjFWdE5VNVNXR2N5VmtaU1UxZHNXa2haTTJ4VllrWktkVnBFUVRGVFJtUlZWVzFHYVZacmNIaFdNV1IzVjIxU2NrNVdWbUZTTTBKb1ZXdGtlazFXVW5SalJ6VnNWbTVDVmxsVVRuZFZSbHBHWVROd1ZXSkZNREJVVkVaM1kxWkdXV05IUmxOTlZYQjRWa2MxZDFadFZuTmhNMnhXVmtWd2FGVnFSbkpsVmxKRlUyeHdUbUpIZUhoV1ZsSkhWREpHY2sxSWFGVlhTRUpUV2xkemVGSldUbFZVYlVaWFVsZDNlRmRVUW10aU1sRjNZa2hHYTFOSVFsRlpWM2hIVGtaUmVXSkZjRkpXTURWSldWVm9hMVV4U2paaVNFWmhVbTFPTkZsclpFdGtWbFoxVjIxd2FWTkhhRlZXTW5ocldWZE5lR05HYUZWaGEwcHZWbTV3YzAxV1pFWlhhMDVwVFdzMVNGcFZWbXRoUmxsNllVaE9VbFpYYUZCYVJ6RlRWMVpPZEdOSFJsWk5SM042VjFST2QyUnJNVlpPV0VaaFpXdEtVVmxXVm5KT1JsWkZWR3RPYVUxck5VVlZWbFl3VkZkV1dFOVhOVlpXUlhCSVdWY3hSMU5HV25WVGJVWllVak5OZVZVeFZtdFVNa1pIWVROc2FGSXphRTVVVkVFd1pERmtWMkZGT1dsTlYyUTFWbGN4TkZsWFNsWlhXR2hhWVRKb1UxcEhlSGRUUlRsWVkwZDBWMlZyV25wWFZ6QXhWVEpHU0ZWcmFHbFRSbkJ3V1d0b2IySXhhM2RhU0U1YVRXczFTVmxWYUd0WFZrcElXVE5zV0dKWVFtaFphMXAzVjBaT1dWcEZPVk5OVjNjeVZrWldVMU5yTUhoalNGSlZZbGhDVUZWclZuSk5WbEpYVld0S1QxSnRlRlpYYTJSelZHeGFTRmt6Y0ZoaVIxSklXV3hXTkU1V1JsbFNhekZyVFdwcmVWVjZTbk5STVZwWVZteHNVbUpZYUZGWlZsWkxZakZyZVU1VmRHaFNNVnBWVlZab1IxUlhVWGxQVkVwVVRXMTRSRlZ0TVZkVFZrWjFVVzF3YVZaV2JETlhWbHBxVGxkU1ZrOVlRbEpYUjNoUFZXdFdWazFHVWtkVmEwcE9WbGhvVmxVeFVrOVdNVXBHVW1wV1ZVMXVRbGRVYTFVMVkxWkdXVnBGZUd4aE1GbDZWa1JLZDFGdFVYZGlSVkpwVFRGd1JWZHFTVFZVUmtWNVlrWk9hazFyYkRWVmJURXdXVlpaZUZKdE5WWlNhelZFVkZWa1QyUldXblJsUmtKclRXcHNlVll5ZUc5aU1sRjVVbXhzVkdKWGFISlZha28wVFd4c2RHSkZTbEJXVjNoR1ZXeFNSMVJ0Um5SVWFscFZUVVpLZVZSclZUVlNWa1pWV2tWU1lVMXFiSGxXTW5SclVqQXhSMkpHVWxKV1IzaExWV3BDWVU1V2EzbE5WV1JQVmxoU1JWbFljR3RTUm05NVQxUktWRTF0ZUVSVmEyUkhVMGRLU1ZSdFJsSk5SWEJYVjJ4YWIxRXlTa1pQV0VKU1lteHdZVmxzYUVOak1XUlZWR3hLWVUxSVVuZFVNRll3VXpGSmVGTnRPV0ZTVjFKSVYxZDBkbVZzVG5SbFIzUlVVbXh2TVZkWE1YTmhNWEJHWWtWV1RsSXlVbkpXYm5CWFRteGtjMkZGZEdwU2JYaFpXbFZvUTJKSFNsZFdibHBZVm5wR1NGcFhlSGRXVm1SVlVXeHNUbUpGY0hwV01WSktUbGRGZUdOR1VtRk5hbFpZVlRCb1EwMXNjRmhqTTJoUFlsVnNOVmxyWkhkVk1ERjBXak53VjFZelVuRlViR1JIWkVaV2MyRkZOVmROTW1oM1YxY3hORk13TVhOaE0yeHNVa1pLVjFSV2FFTlhWbGw1VGxVNVdsWnNiRE5VYTJoclYyeGFkRlJVUm1GU2JIQjJWV3BHUjJSRk9WaGpSazVwWWxkb1NsWXhXbUZoTURWSVUydGFhVk5GV25CVVZFcHZWREZzV0U1VlNrNU5WM1EyV1RCb1lWUnNTbFZTVkVwYVlXdHdlbFZYZUU5U2JFNTFWMnh3VGxKc2NGVlhhMlEwWTIxV2MxZHVWbFppVlZwWVdsZDRWMDB4WkZoalJUbFVUVmQwTkZadE5WTldNa3BWVW01Q1ZtRnJXbWhaTVZwM1VteHdTVlJ0ZEdsV1dFSTJWMnhXWVZJeVJrZFVhMXBVWWxoQ1YxbHNVa2RsYkd3MlVtNWtWbUpGV2pCYVJXUnpWRzFHTmxaclZsaFdNMUp4Vkd4a1IyUkdTbkZXYkZKWFVqRktWMWRXWXpGVk1EVnpWVmhzYWxKVVZsQldiRkp6WkRGVmVGWnJaR2hpUld3MVdWVlNUMVp0UlhsVVZFWmFWbnBHVkZZd1ZYaFhSMVpJWWtkc2FWSlhPVFZXTVZKTFRrVTFSMVpZYUdwU2JXaFpXVzF6TVdGR1duRlJWRUpyVFZkNFdGZFljRmRoTVZwMFlVVm9WbFo2UVRGWlYzaExaRmRHUm1GR2NGZGlWa1YzVjFkMFYxSXhUa2hTYTJob1VqTkNUMWxzWkZOa01WcEpZMFU1VldGNlZubFVWbEpoVmtaYVIyTkZkRnBXTTJoSVZHMTRhMk5zVm5OalJUVk9Va1ZhTkZkV1VrOWhNVlpIVjJ0YVUxZEhVbGxXYlhoTFpGWndSVkZZYUU5aVIxSXdXV3RrUjFVeFNsWlhWRVpYVFZad1ZGbFhNVmRqYXpWWFlVWldhVlpGV2xGWGJHUjZaREF4VjFWdVRtRlNWMUp2Vld4a05HVkdjRVpoU0dSV1VqQmFlVlJWVWtkV1ZURjBaVVYwVmxadFVsQlZNR1JIVTFad1IxUnNUbXhpV0dnMFZqSjBZV0Z0VmtoVGEyaFVZbXhhVjFsdGVIZGpWbXh5WVVjNVYxSnRVbnBYYTJSSFlXc3hXVkZzYkZkU00wSkVXVlZhWVU1dFNrVlNiR2hUVm01Q1JWZFhjRXRVTVVsNVZtdGFZVkl5YUZoVVZFcHZaV3hXVjFadGNFNVdNRnBKVlRKNGIxWXhXWGxsUmtaVlZrVkdNMVJYZUZOV01WWnlWMnM1YUUxdWFEWldWbU40WWpKS1IxZHFXbE5pYXpWaFdXeFNWMVV4Y0VkYVJUbFVVakJhU2xkclZuZGhSMHB6VTFSS1YxSkZjRE5XUjNNeFZtczVXVkZzVWxkV1ZuQjRWbGR3UzJJd01IaFdia3BhWld4YWIxbHNXa3RYVmxKWFdrUlNhRll3Y0hwVk1uQkxWMnN4ZFZwNlFsZFdSVm96VmpCYWEyUldVblJTYkdST1VrWkplbFl4V21GaGF6VllWV3hrYUZKWFVsTlpiRkp6WTFaV2RFNVhPVlJTYlhoWVYydFNVMkZXU2xaWGEzQldWbnBHZGxsVVJrcGxWbkJKVVd4V2JHRjZWbEJXUnpGNlRWZE9WMUpzVmxoaE0wSndXV3RvUTJWc1pGaE5TR2hXVFd4S01GWkhOVU5WUmxvMlVtNU9XbUpHV21oVVZscHpWakZzTmxKdGRHbFdhM0JMVm14ak1WbFdVbFpOV0U1cVVucHNZVlpyVm5kWFJuQlhWbXBPYkdKR1NqRlphMXAzWWtaYVNHVkZiRmROVm5CeVZGVmtTMU5HVW5WUmJFSlhZVEZ3ZUZkWGVGTmpiVlpYWWtaa1lWSnJOWEJWYWtFeFpERlJlRlZ0Um1oU2EzQjRXV3RhWVZZeVNuUmpla1pYVm14d2VsWXhaRXRUVmxaMFVteGtiR0pHV1hwV2ExWnFUVlpGZVZOWWJGVmhNVXBWVm10a1UyTldjRmhOUkZKclRWWktXRlpYTldGaFJscFdWMnR3VmxaNlFURlpWM2hMVmpGT2NWTnNhRmRTVkZaWlYydFdZV1F4WkVaT1ZsWlNZbGQ0VDFSVmFFTmpWbHB6V1ROb1YwMXJjRmxWTW5SdlZqSktXVkZ1U2xaaGEyOHdWRmQ0YzJSSFZrVlZiRnBYVFVad1MxWldZM2hVTVZWNVUyeG9iRk5JUWxsWmExWmhVa1p3V0UxVmNHeGlSbkF4V1d0YWQxUnRTa2RYYm1SWFUwaENVRlpIY3pGamF6RlpVbXhXV0ZJeFNsSlhWbHBYWTJzMVIxWnJWbFZoTURWd1ZGZHpNVkV4YkhGUmFrSm9WakJ3VjFZeWNFTlhSMHBJWVVaQ1lWSkZXbnBXTUZwVFpFZFdSbU5HVGxkaWEwb3lWakZhVTFNeFdYbFdiR1JvVWxkU1UxbHRNVFJqUmxKVlVtNWthMDFYVW5sWGExcHJZa1phZEdGRmNGcE5SMDB4VmpGVmVGWXhUbk5pUmxaT1RXeEplVlpZY0VkamJWWllWbXRvYUZJelFrOVVWVkpIWkZaYWMxWnRkRk5OUkZaWlZUSjRiMVl5U25OWGJrcFdWa1ZLVEZsNlJuZFdiVVpIVkcxc1UwMUlRWGRXYkdNeFpERk9jMU51Vm1oU1YyaFpWbTB4VW1ReGJISmFSVGxxVFd4YVNGVnRNWGRoVmxwSVpFUldXRlpzY0hKV1ZFcExVMFpTZFZSdGVGTmhNWEJvVm1wQ2EwNUZNVWRhU0U1YVpXdGFUMVZzVlRGTlZtdzJVV3BDVkdKRlZqTlZiVEF4VmtaYVdHRkZVbFZXYkhCNldrVmtWMU5XUm5OalIzaFhWbGhCZDFZeWRHRmhhekZZVW01U1ZtRXlhSEJWTUZwM1kwWnNWMVpyZEdwV2JYUTFWRlphYTJGRk1YSlhiSEJYVmpOU1ZGWXllR3RTYlU1SlUyeGFhRTFzU2xsV1JsWmhZekZrU0ZOcmJGVmlXRUp6Vm1wS1UyVldaSEpaTTJoVFRXc3hOVlZ0ZUc5V2JGbDVWV3hLVjFaRlNrdGFSRVp5WlZVMVYxcEhiRk5YUmtwVVYxZHdTMkV4VG5OU1dHUlRZbFJXYUZZd1pGTk5iR1J4VVc1T1UxSnJXbGxYYTFaM1ZXc3hSbGR1VmxaTlZscDJWWHBLUzFOR1ZuSmlSbVJwWWxob2QxZFdXbGRUTWtaelZtNVNUbFpYVW5GWmEyaERWMnhWZVUxVk9WWk5hM0JYVmpJMVIxbFdTbGhVVkVaaFZtMVNXRlpzWkV0T2JHUnpZMFUxVGxORlNqWldha1poWWpGVmVWTnJXbXRTVmtwb1ZXcE9iMk5HYkhKVmJrNVhUVlp3V2xsclpIZGhiRXBaWVVaYVZXSkhVak5aVnpGTFZqRmtkVk5zY0ZkaVYyaFZWbGQwWVdNeFpGZFVibEpyVW1zMVZGUldXbk5OTVZsNFYyMTBhazFyTVRWV1IzQlhXVlV4ZFZWdVNscGlSbHBvV2xkNGMxWXhjRWRUYlhCVFZrZDBObGRYY0V0aE1VNXpVbGhrVTJKVVZtaFphMVpoVFRGUmVGWnJPV3BTYXpWV1YydGtkMkpIU2xWaFJFNVhVak5vVkZwSE1VZFdiRXB5WWtaS2FWWkhlSGhXVjNoaFV6QXhjMXBHVmxWaVIxSnlWVzAxUTFkV1VuTlZhMDVvVmxSQ00xa3daSGRXTVZvMlVteG9XbUpIVWt4Vk1GcGhaRWRPU0dSR1RrNWliV1ExVmpGamVFNUZOVWRXYkdoVFlUSjRVMWxzVlRGV1JteHpXa1JTYkdKSFVucFZiWFJQWVRGYWRHVkdiRlZXYlZFd1dWZHpkMlF4VG5SUFZtaFhVbGhDV1Zkc1pEQmpNazVZVld0b2FGSnJTbTlaVkVaV1pWWmtjMVZyT1ZWaGVsWjVWRlpvUjFVeFdrZGpSWFJhWVRKb2RsVXdXbXRXTVhCRlVXMXNVMDFFVmpaWGJGWmhVakpHZEZOc1ZtaE5NbmhoVm0weFUxWkdiSEphUlRscVRXeGFSbFl5TVc5Vk1rWjBaVVprVjJKVVZucFZNbk13WlVaV2NWZHRiRTVOTUVwUVZsZDBhazVYVGtkaE0yUmhVbnBzY2xSV1ZuZFRWbEY0V2toa2FFMVdiekpWYlRWUFYyMUtWVlpzVW1GU2VrWlFXWHBLVjFJeFVuUlNiR1JPVjBWSk1sWnFTalJoTVZGM1RWVm9VMkpIYUZGV01GcGhWMnhXYzFkdVpFOVNiWGN5VlRKNGEyRXhXbGhsU0doYVlXczFlbFpWWkV0a1ZsWnhWMnhXVG1KclNsQldSbEpDVGxkT1IxUnNXbE5pV0VKVVZGY3hibVZzV2xoa1IzQlBWakJhTUZaWGVHOVViRmw2WVVoQ1dtSllhRXhVVjNoeVpWZFdSVlZzV2s1WFJVcGFWbXBKTVZReGJGZFhXR1JQVTBkU1lWWnRNVTVOVm5CSFYyMDVVMkpIVWpGWlZXUjNWRzFLUjJJemFGWldiRnB5VjFaa1YxTkdVbGxpUm1ScFlrWndURmRXWXpGVk1EVnpWVmhzYWxKWVFuTlZiRkp6WkRGVmVVMVZPVlpOYTNCWFZqSTFjMWRIU2toaFJYaFlWa1ZhV0ZVeFdrOWtWbVIwWkVkc1YwMHlhRFZXYWtvMFlqRk5lR0V6YkZkaWJFcHZWV3BHZDFkR1ZuUk5WVGxxVW14Sk1sWkhjekZVTWtZMlVsUktWMDFXU21oVk1uaDJaREZPY1ZSc2NGZFdNbWhGVmxkNGExTnRWbGRWYmtaVFlsZDRXRlJXV25abFJtUnlWbTF3VDFZeFdsaFpWVlpyVmtkS1dXRkhhRnBpUjJoMldYcEdhMVpXVW5OVWJYQlRUVWQzTVZaSGVHdFVNVlY1VTI1S1dHRnNjRmxaYTJST1pERldWMXBGZEd0U2EzQXhWbGN4UjFack1VaGpNM0JZVmtVMU0xcEhjM2hXYXpsWlVXeFNhR0pJUW5aV1Z6RjNZekZhYzFkdVZtbFNXRUpRVkZkNGQxZHNVbGRoU0dSV1VqQmFlbFZ0Y0dGV1ZURjBaVVYwVmxadFVsQlZNR1JIVTFad1IxUnNUbXhpV0dnMFZqSjBZV0Z0VmtoVGEyaFVZbXhhVjFsdGVIZGpWbXh5WVVjNVYxSnRVbnBYYTJSSFlXc3hXVkZzYkZkU00wSkVXVlZhWVU1dFNrVlNiR2hUVm01Q1JWZFhjRXRVTVVsNVZtdGFZVkl5YUZoVVZFcHZaV3hXVjFadGRHcE5iRXBZV1ZST2MySkdTa1pYYldoV1lXdGFhRlJ0ZUU5WFIwNUZVVzFvVTFaSGVEUldWbHBUV1ZkS1JrMVVXbE5oYkhCV1ZGYzFRMVV4VWxaV1ZGWnFVbXMxVjFWdE1YZFZNREYwV2pOd1YxWXpVbkZVYkdSSFpFWldjMkZGTlZkTk1taDNWMWN4TkZNd01YTmhNMnhzVWtaS1YxUldhRU5YVmxsNVRsVTVXbFpzYkROVWEyaHJWMnhhZEZSVVJtRlNiSEIyVldwR1IyUkZPVmhqUms1cFlsZG9TbFl4V21GaE1EVklVMnRhVTJFeWFGbFpWM1JoWTBac2MxWlVRbXROVjNoWVYxaHdWMkV4V1hkT1JFWldUVlpLY2xZeWVHRlRSVGxWVkd4V1RtRnNWak5XUkVaclZEQTFkRk5xV2xKaGVteFVWVzV3YzJReFZsZFdiVGxTVFd0c05WWkhkR0ZXYlVwelkwZEdWVlpGV21oVVZWcHJZekZzTmxKck5WTk5SM2N5VmxSSmVGUXhXblJUYkdSWVlteEtZVmxVU2xOWFJteFlUVlpPVkZJd2NFcFdNakZ6WVZaT1NHRkdUbGhXYkZwMlZWUkdjbVZHVG5WVmJXeFVVbFJXYjFac1dsZFRNazVYWWtoR1ZGWkZXbk5aYkZwTFUxWldkRTVXWkdoTlZUVkhWRlpvUTFaWFZuSmpSV1JWWWxoT05GVnNaRTlTVm5CSVRWWm9VMVpGUmpWV2EyUXdWVEZPY2s1WVNtbFNlbFpUV1cweFUySXhWWGRXYTNSVFlrZDRlRlV5Y3pWVWJGbDNZMFpzVjJKVVZsaFpWRVpMVG0xS1JWWnNhRk5XYmtKTlYxZDBZV1F5VWtoV2EyaHNVbTVDVDFSV1ZuZE5NV1JZWTBWd1RsWnRkRFJXYlhSdllVWk9TRlZzY0ZaaVJuQXpXa1JHYzJOc2NFZFhiRXBYWWxoUk1WZHNWbXRpTWtaeVRVaGtUMWRGTldGVVZFbzBVekZTY1ZKdVRsZFdNR3cyV1ZWYVEyRlhTbk5UVkVwWFVrVndNMVV5Y3pGV2F6bFpVV3hTYVZaVVZsVlhWM2hYV1ZkV1YxcElUbWhTV0ZKaFZGWmFZVk5zVlhsT1YwWm9UV3R3V1ZwVmFFdFhSMHBJWVVWNFdGWkZjRmhhUldSSFUwWmtjMXBHVG1sV2EzQjRWbTE0VjJFeFNYZE9WbWhVWWtkb1dGbHRlR0ZqYkZaVlVXNUtUazFXY0VwWk1HaGhZa2RHTmxac1dscGhhM0I2V1ZkNFNtVlhSa1ZVYkZwb1RXc3dlRmRXWTNoVk1XUkdUVlpvYkZJeWVIQlphMVoyWlZaa1ZWTnFVazlTYkZZMFdUQmFiMWRIU25KT1YyaFhZV3RGZDFwRVJuTldNV3cyVm0xMFYySlhhRWxXVm1OM1RsZEdjMU51Vm1oU1ZscGhXVlJLVTFOR2NGaE5WVFZzVWxSc1NWbHJXa05oUjBWNFYxUkNWMUpGYTNoVVZXUlhZMnM1V1ZKc1dsaFNNMmhTVjFaYVYyTXhSbk5oTTJSaFVucHNjbFJXVm5kVFZsRjRXa2hrYUUxV2J6SlZiVFZQVjIxS1ZWWnNVbUZTZWtaUVdYcEtWMUl4VW5SU2JHUk9WMFZKTWxacVNqUmhNVkYzVFZWb1UySkhhRkZXTUZwaFYyeFdkR1JGZEd0aVIzUXpWakp3VTFVeFNYZGpSV3hXWWxSV00xbFhjM2hXVjBaR1UyeG9hVlpHV2tsWGJHUTBaREZrUms1VmFHbFNhMHBQVld0a2FtVldXa2RoU0dSU1lYcFdlVmxyYUZkVmJVcFZZa2hHVm1KR2NFeFVWM2hyVmxaU2MxcEhkRk5pYTBwYVZrZDRVMUV5UmxaTlNHUnFVak5DV0ZadWNFZFhSbXh6V2tWMFZGSnNjREJaTUdRd1ZUQXhkVm96YkZoV2VrVXdWR3RhU21WV1VuTmlSbFpwVjBkb2QxZFdXbGRqYXpGelZXeG9hbE5IVWxCVVYzTXdUV3hzY1ZSdVpGVk5iRm93VkRGb1ExVnNXbGhoUlZKYVlXdHdVRlZ0ZUZka1ZtUnpZMFUxVGxadE9UTldha28wWVdzeFZrMVZhRlJYU0VKVldXeFZNVll4YkhOWGJVWnJVbTE0ZVZkcldtdGhSMHBYVTJ0c1dtRXlhR2haVm1STFUxZEdSbUZHY0U1V01taFJWMWQwYTFNeVNuTlNibEpPVmpOQ1dWVnNVbGRsYkdSWVRWaE9WR0Y2VWpWV1IzQmhZVlV3ZVdWR1JsZGhNazB4V1RCYWExSnNXblJTYldoVFRVWlpNVlp0TURGak1XUlhVMjVLVkdGc1dtRlpWM014WVVacmQxZHVaRlJTYkhBeFdXdGFjMVpHVGtaVGFrcFhUVVpLU0ZaVVJtdFNNa1pHV2taS2FWWXlhSHBXYlRWM1VqSk5lR0pJVWs5V2EzQnZWbXhTYjA1c1drZFZiVVpWWWxaYWVsbFljRXRXUmxsNVZXdFNZVkpGY0VoVk1WcEhZMnhhZEdKRk5XaGxiRWt3VmpGa05HRXhXWGxWYkdoV1lUSm9VVll3WkRSWGJGWjBaRWhrYWsxWFVqQlVWbEpUWVZaS2RHUkVXbGRXZWxaRVdWWlZlR05XV25SalJscHBWa1phU1Zkc1pEUmtNV1JHVGxWYVUySlhlSEJXYkZwMlpERlplV1ZGT1ZSaGVsSTFWa2R3WVdGWFZuSk9Wa1phVm14YU0xWlhlR3RXTWtaSlZHMTBVMkpyU2xwV1IzaFRVVEZPZEZKdVZsWldSbHBoVkZST1EwMXNVbFpXVkVaWFZqQnNOVmxyVmt0V1JrcFdZMFJLV0ZaRlNsaFdWRXBUWXpKRmVtTkdaR2xpUlhCdlZtMDFkMVp0VVhoaVNFWlZZVE5TWVZSV1dtRk5SbHAwVFVob2FGWnJiRFJXTWpWSFdWWktXRlZ1Y0dGU2VrWk1XWHBLVjFJeFNuUmhSbEpUVmxoQ2VGWnNXbE5UTURWSVVtdG9WVmRJUWxaWmJGcDNVVEZXY1ZKcmRFNWlSMUpXVlZkME1HRnJNWEppUkZaWFVucFdURlV5TVVka1ZsWnpVV3hXYkdGNlZsQldSekY2VFZaS1YxZHNWbGhoTTBKb1ZGVldkbVZzWkZkV2JUbFNUVlZ3V1ZVeGFITldWMFp5VjI1Q1YyRnJXbWhVVmxwM1VteHNObFp0ZUZkaVYyaEpWbFJKZUU1R2JGaFRiR3hvVTBVMVdWWnJWVEZXUm10M1drVndiRlpVVmxsV1IzaGhWVEF4ZEZvemNGZE5SbHBZVmtSS1RtVkhTa2RpUmxacFltdEtZVmRyVWtOVE1rbDRXa1pvVDFaVWJFOVZha0V4VFVaV2RFMVlaR2hOVlZZeldWaHdUMWRHV1hwUmFrcGhVa1ZGTUZwWGVGTldWbVJ5VDFaT1UxWXpUalZXVkVacllURkZlVlZZYkZOaE1uaFRXVlJHWVdOR1VsaGpla0pzVW0xNGVsZHJXbXRoTVZsNFUydHNWVTFYYUhwV01WcExZMjFPU1ZSc2FHbFdSVlYzVjFkMFlXTnRWbk5XYmxaU1lsZDRUMWxYZUdGalZscHpWbTEwYVUxc1JqUlpWVlpoVmxkS2NrNVhSbGROUmxWNFZHMTRhMU5XY0VaVWJXeFhUVVp3V2xaSGVHdGlNa1pYVWxoa2FHVnJOVmxXYWs1RFRXeHdSVkZVVW14aVJrcFdWakp6TlZVeFNsVlJXR3hXVFZkU2NsVlVTbEpsVmtweVlrWkthRTFXY0hkV1JtUjZUVWRXUjJKSVRtRlNiVkp5Vm1wR1MxTldVWGhoU0U1WVZtdHdlVmt3YUU5WFIwcFZVbFJDV21FeGNIbGFWM2hYWkZaR2RHSkZOV2hpUm5CNFZtMTRWMkV5U1hsVldHaG9VbFp3VmxsdGN6RlpWbGwzVmxSR1QySkhVa3BYYTFaUFlUQXhXR1ZHY0ZaTmFrVXdXVlprUzJNeFNuVlJiRlpzWVRCVmQxWkhNWHBsUlRWelVteFdXR0V6UW5CWlZFSjNUV3hrVlZGc1pGWk5iRXA2V1ZST2QxWXlTbk5UYldoWFltNUNWMXBFUm5OalZsSnlaRVp3VGxac2IzZFdiVEIzWlVkR1YxTllhRmhpYTFwb1ZXeGtVMlZzY0VoTlZYUnFUV3hhUjFkclpIZFhSa3BWVm01d1dGWjZSbnBWTW5NeFkyc3hXVkp0Y0ZOU01VcDRWMnhqZDA1Vk5YTlZibFpxVTBad2IxWnNWbUZUYkZaWVRVUldhR0pGY0ZoVk1uQkxWMFphUms1V2FHRlNWbkF6VmpCVk1WWldSblJpUlRWT1UwVktlRlp0ZUdwbFJsbDVVMnhvVkdFeWFGaFpiR2hEWTJ4V2NWTnFVazVpUjNnd1dsVlNVMVV3TVhKT1ZuQlhVbnBGTUZsV1duWmtNVTUxVld4d1RsWXlhRkZYVjNSclV6Sk9SMVJzVm1GU00wSnpXV3hTY2sxV1drZGhTR1JyWWxWYVdGbFZWbUZYUjBwWVlVYzVWVll6YUdoVWJGcHJVbXhrY2xSdGVGZE5SM2N5Vm1wSk1WRXhiRmRUV0doWVlXeGFXVlZzV25kU1JteFdXa1prV0ZKVVJsbGFWV1J6WVZkS1JsZHVaRmRUU0VKUVZrZHpNV05yTVZWWGJHaFhVbTVDVEZZeWNFTlRNREI0WWtaYWFGSlZOVlJXYWtKelRsWmFTR05GWkdoV2JHdzBWakp3UjFsV1NsaFVWRVpoVm14d2RsVnFSazlrUjFaSVVtMXNXRkl5YURaV2FrWlRWREZWZVZScmFGUlhSM2hRVm1wQk1WWkdiSFJrUjBaUFlrZFNlbGRZY0VOVmJGbDNZMFJDVm1KVVZsUlhWbHBXWkRKR05sUnNjRTVOTUVsNVZrWlNRazVYVGtkVWJrNVRZa2hDV1ZWcVRtNWtNVmw1WlVkd1RsWlVSa2RaYTJoSFlURktTR1ZJUm1GV2VrRXdXa1JHVTJSWFRrbFhiV2hYVmxad1MxWldZM2RPVjBaelUyeGtWR0ZyY0ZsV2ExVXhWMFp3UmxkdVpGaFNWRlpXVlZjeGMxUnJNVWxSYmtaWFlrZE9ORlpxU2t0WFJrNXlZVVprYVZkRlNubFdWM0JMVGtVeGMySklVbXhTUmtwWFZtcENZVk5zVmxoTlZUbFdZWHBHTVZsVll6VlhiVlp5VGxaQ1dHSllVa2hWTUdSTFUxWldkR05HVGs1TmJXZzJWakZrTkdFeFdYbFZiR2hXWVRKNFZsWnFTalJWVmxKWVpFWmFUbUpHU2xkV1Z6VnJWREF4YzJOR2NGZFNiRXBvVmtSR1MxSXlSalpUYkZKWFRXeEtSVmRyVWt0U01VNVhVbTVLVjJKWGVFOVpXSEJUVGtaa1dHVkhkRmROYkVwWlZsZDBiMVZHWkVobFJuQldZbGhTTTFsNlJtdGtSVEZWVlcxc1UySllVVEpXYkdNeFVUSkdWazFZUmxkaVdFSllWbXhrVTJSc2NFVlNiVGxUWWtaS01WWkhlSGRYUmtwVlZsUktWMDFIYUhKVlZFcEhaRVpPV1dKRk9WaFRSVXA1Vmxkd1ExbFZNVmRqUlZwb1VsUldiMVpzVW05T1ZsWnpWVzFHVldKRmNFcFZWbEpQV1ZkS1NHRkZPVlZpV0UxNFZXeGFjMDVzWkhKalIwWk9VbGM1TmxZeFdsZGlNVVY0VTJ4b1ZGZEhlRlpaVjNSaFkwWmFjVkp0Ums1V2JrSkhWMWh3VjJKR1duUmhSV2hXVFdwRk1GZFdaRXRYVjBaSlZHeG9WMUpVVmxWWFZFSnJVMjFXVms1V2FGVmlSbkJVVkZjeGJtVnNXWGRXYkdSVlRXc3hORmxyV25OV1YwcDFVV3h3WVZKRlNreFVWRVp5WlZVeFJWWnRkRTVYUlVwaFZsUktkMUV5UmtkWFdHaFlZV3h3VlZacVRrSmtNV3hXVmxSV2FsWnJXbFpXTWpFMFZHMVdjbGRVU2xkU1JYQXpWbGR6ZUZKck9WbFJiRkpYVmxad2VGWlhjRXRpTURCNFZtNUtXbVZzV205WmJGcExWMVpTVjFwRVVtaFdNSEI2VlRKd1MxZHJNWFZhZWtKWFZrVmFNMVl3V210a1ZsSjBVbXhrVGxKR1NYcFdNVnBoWVdzMVdGVnNaR2hTVjFKVFdXeFNjMk5XVm5ST1Z6bFRWbTE0ZVZkclZtdGlSMHBXVFZSU1ZVMUdXa2haVmxwYVpVWmtXVnBHY0ZkV01EQjRWMVpTUzFRd05WZFViRlpoVW01Q1dGVnVjSEpOUmxwRlUxUkdUbEl4V25sVU1XaEhWakZrU0ZWc1JscFdiRm96V1ZkNFYyUkZNVlphUjNCcFUwVktZVlpVU1hoVU1WcHpWR3RhYWxKRmNHaFZibkJIWld4c1ZWSnVaRmhXYXpVd1ZrY3hOR0ZXV1hsaFNGSlhZbGhTYUZsVVJuSmxSbHB5WVVaT2FHSkdjSGRXYlhCSFdWVXhWMk5GV2xaaWJIQlFXV3RrTUU1c1ZYbE5WRkphVm10c05WcEVUbXRXYkZwR1kwVm9ZVlpzY0ROVmJYaFhaRWRXU0dSR1RrNVNia0Y2VmpGa01HSXhVblJUV0dSclVteEtWVlpyWkZOV2JIQllUVVJXVDJKR1NucFdWelZoWVVaWmQwNVZiRnBXVjJoeVZsUkdTMDV0U2tsU2JVWlRZbFUwTUZkWGRHdFRNbEpYVm01V1dHSllRbkJWTUdSdlZsWlplV1ZIZEZwV01ERTBXVEJhYjFaWFJuSlRiVGxYWW01Q2VsUldXbXRTYkdSeVZHMXNUbUY2VmtsWGJGWldUVlpzVjFwRlpGUmliSEJoV1ZkMGQxVXhiRmRXVkZacVZqQlpNbFl5TVRSVWF6RkZVVmhzVjFJelVsUldiWE14WTIxS1NFNVdTbWxpVmtwMlZsUkNWMU14U25OaVNFWlVZWHBzVDFacVFuZFhWbHAwVGxaa2FFMVZiekpaYTFKWFYwWktWMk5GZUZwaE1YQXpXa1ZrVjFOSFZrZGpSVFZPVmxoQmVsWXhaSGRUYXpGWFlUTm9WMkV5YUc5Vk1HUlRWMnhXYzFWclpHcE5XRUpIVjJ0ak5XRXlTa2xSYTA1V1ZucEZkMWxXVlhoamF6VldWV3h3YUUxck1IaFhWbU40VWpBMVYxUnNWbUZTYkZwdldXMTRTazFzV2tWVGJtUldZbFphVjFReGFFTldSbHBXVjI1R1ZtRnJjSFpVVkVaWFkyeHNObFp0YUdsV2EzQmFWa1phYTA1SFJsaFRiazVVWVd0d1lWUlhOVzVOUmxwVlVtNWtXRkp0VWpGV1J6RkhWakF4UlZWcVRsaFdiSEJ4Vkd4a1UxWXlSa1phUmtwcFZrZDRlRlpYTURGaU1WRjRXa2hPYUZKck5YQlVWM1J6VGxaYVYxWnJaRnBXTUhCNVZqSndZVmRIU2toVVdHUmFWbXhWTUZwRVFUVlNWbVJ5VGxkNGFFMUdWalZXVkVacVRWWkZlVk5ZYkZWaE1YQlhXVzE0ZDFsV1VsVlNiVVpPVW0xU2VsZFljRWRVYkVsM1lrUmFWazFxUmxCV2JURkxWakZrZFZWc2NHaE5iRXBaVjFaamVGVXhUa2hUYTJ4WVlsZDRjRlV3Wkc5VFZtUlZVbTA1VlUxcmNFbFZNalZEVmtaYVIyTkZPVnBXZWxaRFZGUkdjbVZ0VGtsWGJYaG9aV3hWZVZkWGNFdGpNVVp6Vkd0YVZHSnNjR0ZVVlZwaFZrWndTR1ZJU214aVJuQXhWbGN4UjFZeVZuTldhazVZVmpOQ1VGVjZSbkpsUmxwMVZXeGthVlpGV25kV1YzQkhXVmRPVjJORldtRlRSVFZ5V1d4V2QyVnNjRlpXYlhSb1lrZFNSMVJzYUU5WGJVcFlWV3RTV21KSFVsQldNVnBUWkVkV1NHSkhhRmRXTTA0MlZqRlNUMlF5VW5KTlZscE9WbFphY0ZSWE1UUlhiRlp6VjI1a2FVMVhlRlpWTW5ocllrWmFkR0ZGYUZaV2VsWjZXVlpWZDJWSFRrbGFSbWhvVFd4S1dWZHNXbUZpTVU1WVZHdG9VRlp0ZUU5V2JYUjNWMnhaZDFadFJsSk5hMXBKVm0xNGIxUnNXWHBoU0VKYVlsaG9SMVJYZUZKbFZURldUMWQ0VjJKclNscFdiR014VVRKRmVGTnNXazlXZW14aFZGZHdSMVpHVm5OWGJtUllWbXhhTUZsVlpHOVdNREI1V25wS1ZtVnJTbEJaTWpGSFZtczVTV05HVmxkU2JrSlFWMnhrTkdOck1YTlViR2hoVWxVMWNsUlhkR0ZUYkZaWVpFWmthRlpVUm5sVWEyaHZWMjFLU0ZWc2FHRlNiVkpVVlRCVk5WZFhTa2RpUms1b1RUQktObFpxU1hkbFJUVklVMnRrYUUwelFsZFpiWFJMWTBaU1dHTkdaR2hpUmxvd1ZHeFdhMkpIU2tsUmJHeFZZVEZhU0ZsV1pFdFdiR1J4VVd4b2FWSlVWa3hXUjNCTFZEQTFkRk5ZY0doU1ZHeHpXV3hTYzJReFdYaFZhemxVVFd0d1NGa3dWbTloVmtwR1UyeE9WVll6VW1oVWJGcHJZMnhhYzFSdGJGTk5WWEJLVmxjd01WRXlSbGRVYTFwT1YwVktWbHBYYzNoT1JuQllZM3BXYWxac1dsWlZiWGhEWVVaYVdHVkZUbGhXUlVweVdXcEtVbVZHVG5KaFJrSlhUVEJLZVZadE5YZFNNazE0WWtoU1QxWnJOWEpaYkZVeFpXeHdWbGRyT1ZwV2JHdzBXVEJvZDFkSFNraFZiRUpWVmxkU1NGWXdWVFZYVmxwellrWk9hRTFJUVhsV01WSkRXVlUxUjFWdVRtcFNiWGhYV1d4U2MyTkdVbGhsUldSU1lrZFNXRmRyVmpCaVIwcFhVMnR3VmsxcVJuWldNbk4zWlVaS2RWRnNWbXhoTTBKTVZrY3hlbVZHU2xoVmEyeHFVbXRLYjFsclZscE5WbHBGVTI1T1ZHSkZXbGxXUjNSdllVWk9TRlZzVWxaaWJrSjZXVEZhZDFJeGEzcGhSMnhUVFVoQmVGWnNZekZaVjBaMFUydHNhRkpzU2xsWmEyUlRZVVpzTmxKdVpGaFNiRXA0VlZjeGIxWXlWblJrTTJoWFRVWmFhRlZVU2twbFZsSnlXa2Q0VTFaR1dtOVdha0poVXpKU2MySklSbFJpUlhCVFZtMDFRMDFHYkhKaFJtUllZa1pzTmxkcmFFTldWMVp5WTBWMFZXSllUalJWYkdSVFUxZE9SMUZ0YUdsU1ZtdDVWbXRTUzJNeFRuTlNiR2hWWVRKb2IxVXdaRk5XUmxaMVkwaE9hbFp1UWtoWFZFNXZZVlpKZDJORVJsZFdlbFpvV1ZjeFMxTlhSa2RWYkdocFVqRktiMWRZY0Vka01XUkhWVzVHVW1KWGFGaGFWekV6WlVaWmQxWnRSbEpOYTJ3MVZrZDBhMkpHU2xWV2JXaFhUVVp3VEZwSGVITmpWazV6VTJ4S1YwMUVSVEpXYkdONFlqSkZlRk5ZYkd4VFJWcFZWbXBPUW1ReGJGZFdWRlpxVm10YVZsZHJaSGRpUjBwVllVUk9WMUo2VmpOYVJ6RkhWbXhLY21KR1NtbFdSM2g0VmxkNFlWTXdNWE5hUmxaVllrZFNjbFZ0TlVOWFZsSnpWV3RPYUZaVVFqTlpNR1IzVmpGYU5sSnNhRnBpUjFKTVZUQmFZV1JIVGtoa1JrNU9ZbTFrTlZZeFkzaE9SVFZIVm14b1UyRXllRk5aYkZVeFZteGFjVkpzY0d0TlYzaFhWMWh3VjJGRk1VWlhhM0JYVFdwV1JGbFhjM2hrUjFaSlVXeHdWMkpXUlhkWFZFSnJWVEZPV0ZKWWJHbFNhMHBQVld0a2FtVldXa2RoU0dScVlYcFdlVmxyYUZkVmJVcFZZa2hHVm1KR2NFeFVWM2hyVmxaU2MxcEhkRk5pYTBwYVZrZDRVMUV5UmxaTlNHUnFVak5DV0ZadWNFZFhSbXh6V2tWMFZGSnNjREJaTUdRd1ZUQXhkVm96YkZoV2VrVXdWR3RhVjFkR1NuSmlSa3BwVmxSV1dWZFhlR3RPUlRWellrWmtZVkpZVW5GVmFrSjNVMVpzY2xWclRtbFNiRll6V1Zod1MxWldXbk5UYWs1VllXdHdVRlJ0TVV0T2JFcHlUbFprVTJWdGVETldWbHBYWWpGRmVWTlliRlZoTVhCWFdXMTRkMWxXVWxWU2JVWk9VbTFTZWxkWWNFZFViRWwzWWtSYVZrMXFSbEJXYlRGTFZqRmtkVlZzY0doTmJFcFpWMVpqZUZVeFRraFRhMnhZWWxkNGNGVXdaRzlWTVdSWFZtMDVVazFYZERSV01qVlRZVlpPU1ZGdE9WZGhhMG96V2tSR2MyTnNjRWxVYXpWVFRWWndWRlpXWkhkVE1rWkhXa1ZhVDFkSFVsbFdibkJIWld4c05sTnJaRmhXYkZwNFZtMTBkMkZIU25OVFZFcFhVa1Z3TTFZeWN6RmpiVXBKVm14S2FHRXhjR2hYVjNodllqSlJlRnBHYkdsU1dFSlFWRmQ0ZDFkc1drZFZiVVpWVFZWd1NGbFljRXRXUmxsNVZXdFNZVkpGY0VoVk1WcEhZMnhhZEdKRk5XaGxiRWt3VmpGa05HRXhXWGxWYkdoV1lUSm9VVll3WkRSWGJGWjBaRWhrYWsxWFVqQlVWbEpUWVZaS2RHUkVXbGRXZWxaRVdWWlZlR05XV25SalJtUlhWakZLTWxkclVrZGlNVXB5VFZab2JGSXpVbFJVVnpGdVpWWlplV1JGWkZKTmExcEpWa2MxVTFsV1NrWlhia0pYWVd0YWFGUldXbmRTYlVaR1RsZG9WMVpIWnpGV1YzaFRXVlpTYzFkcmJGSldSVFZoVm0xNFMwMXNjRVZSVkZKclRVUnNSbFl5Y3pGaVIwcFdUVWhzVmsxWFRYaFZWRXBLWlZaU2NsZHNXbWxpU0VKb1ZrWlNSMWxWTVVkYVNFNWFaV3RhVDFWcVFuTk9iRlY1VFZVNVYySlZjRmhXTWpWVFYyMUZlVlZzYUZwV2VrWlVWVEJrUzFOV1pIUmlSMnhVVWpKb1ZGWXhXbGRpTVVWNFlUTm9VMkpIZUZWWmJGSlhZMnhhZFdORlpHcE5WM2d3Vkd4YVMyRkdXbFZpU0doWFlrWkthRmxyVlhka01ERkZVMnhXYUUxVmNGQldSekV3WXpKS2MxSnVWbUZTTW1oVlZXeFdkMUl4WkZoalJYUlZUVVJHV1ZVeWVHOVdNa3B6VjI1S1ZtSnVRbnBVYkZwclVteGtjbVJIYkZOaWEwbDNWMnhXYTA1R1pISk5TR2hVWW0xU1lWbFhkSEpsUm1SVlVteGtWRkl3V2twWGExcHpWVEZhVjJKNlJsZE5ia0pRVm1wS1UxSXlUa2RoUlRsWFVsVndSRlpYTlhkV01rbDRZa2hPWVZKc2NHOVdiRkp2VG14YVIxVnRSbFZOVm5CSlZERm9RMWxXU2paU2EyaGFaV3R3U0ZZd1dsZFhSMHBIVVdzMVRsSkZSalZXYTJRd1ZURldjazVZU21sU2VsWlRXVzB4VTJJeFZYZFdhM1JUWWtkNGVGVXljelZVYkZsM1kwWnNWMkpVVmxoWlZFWkxUbTFLUlZac2FGTldia0pOVjFkMFlXUXlVa2hXYTJoc1VtNUNUMVJXVm5kTk1XUllZMFZ3VGxadGREUldiWFJ2WVVaT1NGVnNjRlppUmxwb1ZHeGFhMk5XVW5OYVIzUlRZbXRLV2xaSGVGTlJNVVp6Vkd0a1ZGWkZXbUZVVldSVFYwWndXR1JJVG1wV01VcEpXVlZhUTJGSFJYZFdXR3hZWWtaS1QxcFZaRmRqYXpsWlVteGFWMUpZUWxKWFZscFhZekZHYzJFelpHRlNlbXh5VkZaV2QxTldVWGhhU0dSb1RWWnZNbFZ0TlU5WGJVcFZWbXhTWVZKNlJsQlpla3BYVWpGU2RGSnNaRTVYUlVreVZtcEtOR0V4VVhkTlZXaFRZa2RvVVZZd1dtRlhiRlowWkVWMGEySkhkRE5XTW5CVFZXMUtWazVVUWxoaE1VcElXVlphV21WR1pIRlNiVVpUVmxad1JWZFdVa2RrTVdSSFdraFNhRkl6VWxoVVZFcHJUVEZWZUZwSVpFNVNNVnA1VkRGb1IxWnNXa2RqUlhSYVlsaG9URlJzV25kU01YQkhWMjFvVjFaSFp6SldhMXBUV1ZaUmVGZHJXbE5XUlhCVlZtcEtVMUpHY0VWVGEyUlVWbXRhZVZadE1YTlViVVkyVldwU1dGWXphSEpXYWtwVFYwWldjbUZHUWxoU00yaGhWbGN4TUdReVRYaGFTRkpPVmtaS2NGVnRNVEJPYkZwWVRsVk9hRlpVUm5oV2JURjNWakZhV0ZWdVdtRlNSVnAyVlcxNFMyUlhTa2hTYXpWT1ZtMDVNMVpxU2pSaGF6RldUVlZhVTJFeWFGVlpWM2hoVmpGc2MxZHRSbXRTYlZKNldWVldNR0ZXU1hkalJFSlhVbnBGTUZVeU1VZGtWbFoxVVd4V1RtSnJTa1JXUjNCTFZEQTFkRk5xV2xKaVJVcFlWVzV3YzJReFZsZFdiVGxTVFd0c05WWkhkR0ZXYlVwelkwZEdWVlpGV21oVVZWcHJZekZzTmxKck5WTk5SM2N5VmxSSmVGUXhXblJUYkdSWVlteEtZVmxVU2xOWFJteFlUVlpPVkZJd2NFcFdNakZ6WVZaT1NHRkdUbGhXYkZwMlZWUkdjbVZHU25OaVJsSnBWa1phZVZadE5YZFNNazE0WWtoU1QxWnJjRk5XYWtKaFYyeGFTR1ZIZEZoaVIxSkhXVEJvYTFkR1duUlZiRkphVFVad2VsUnNXazlXVm5CSFkwZG9hVlpIZERaV2EyaDNWRzFXUms5V2FGVmhiSEJ3V2xkMFMxVkdXbkpaZWxacVVtdGFWMWxWVms5aFZURnlUbFZrVjFaNlZtaFdNbk4zWlVaa2NWRnNhR2xTTURFMFZrWldhMU50Vm5OVWJsSlZZa1p3Y0ZadGVIZE5SbVJZWkVkMFYwMXJXakJXVjNSdllWWk9SMk5JUWxwaE1taDJWbGQ0YzFadFJrWlViSEJPVm10d1dsWnRNWGRSTWtaSFUycGFhVk5GY0ZOV2JHUlNUVVp3U0dWSVNteFdhM0I0VlZjeGIxWXlWblJrTTJoV1RWZFNNMVJWV2xkU2F6bFpVbXhXV0ZORlNsSlhWbHBYWkRBd2VHSkdXbWhTVlRWVVZtcENjMDVXV2toalJXUm9WbXhzTkZZeWNFZFpWa3BZVkZSR1lWWnNjSFpWYWtaUFpFZFdTRkp0YkZoU01tZzJWbXBHVTFReFZYbFVhMmhVVjBkNFVGWnFRVEZXYkZaMVkwaE9hbFp0VWxoWlZWcFBZV3hKZDJKRVZsVmhNbEo2VmxWa1IyTnRSalpUYlVaWFVsUldVRlpITVhwTlZrcFhWMnhXV0dFelFtaFVWVloyWld4a1YxWnRPVkpOVlhCWlZURm9jMVpYUm5KWGJrSlhZV3RhYUZSV1duZFNiR3cyVm0xNFYySlhhRWxXVkVsNFRrWnNXRk5zYkdoVFJUVlpWbXRWTVZaR2EzZGFSWEJzVmxSV1dWWkhlRmRWTWxaMFpVaG9WMDFXY0haV1ZFcFBVMFpPV1dKRk9WTldWbkIzVmxkd1MwNUZNVmRhU0U1WFZrVmFUMVpxUW5kWFZsVjVUVlJTYUdKVldsZFpXSEJQVjJ4YWMxTnFTbFZXUlVVd1dsZDRVMVpXWkhKUFZrNVRUVVJDTlZaVVJtdGhNVVY1VlZoc1UyRXllRk5aVkVaaFkwWlNXR042UW14U2JYaDZWMnRhYTJFeFdYaFRhMnhWVFZkb2VsWXhXa3RqYlU1SlZHeG9hVlpGVlhkWFYzUmhZMjFXYzFadVZsSmlWM2hQV1ZkNFlXTldXbkpXYlhCUFZqQmFlbGxyV25OV2JVcHlVMjVDVlZZelFsUlZWM2hyVmxaT1ZWWnRjRTVpUlhCYVZrWmFiMVl4V2xoVGJrNVlZV3RLV1ZadWNFZFhSbkJYVm01T2FsWXhTa3BWVjNoRFlVZEZkMVpZY0ZoaVdHaDJWa2R6TVdOck5WWldiSEJzWWtoQ1RGWXljRU5UTURCNFlrWmFhRkpWTlZSV2FrSnpUbFphU0dORlpHaFdiR3cwVmpKd1IxbFdTbGhVVkVaaFZteHdkbFZxUms5a1IxWklVbTFzV0ZJeWFEWldha1pUVkRGVmVWUnJhRlJYUjNoUVZtcEJNVll4Vm5GVGJUbE9UVmRTUjFac2FHOWhWa2w0VTJ0c1dsWlhhR2hYVmxwSFZteE9jVlpzYUdsU01taFZWa1phYTFReVVrWk9WbVJYWWxob1dWVnNWbmRsYkZWNFdraGtUbEpzV2tkVU1XaEhWbFphUms1V1JscFdiRm96VkZSR2MxWnRSa1pVYkU1WFRVZDNNVlpyWkhkU01rWlhWMWhvV0dGcldtaFZiR1JPVFZad1YxZHRPVk5OVlRVd1dsVmtSMkZXWkVoaFNIQlhUVlpLVUZaVVNrOVRSazVaWWtVNVYwMUVWbGxXVkVKclRrVXdlRnBJVG1oU1ZHeGhWRlphUzFkV2JISlZiRTVhVm14c05GVXlNSGhXUmxsNlVXcEtZVkpGUlRGYVJtUlRVbGRLU0UxV2FGTlNWbXQ1Vm10U1MyUXhWbkpOU0dSUVYwVktWVlpzVm1GalZsWnhVMjA1VGsxV1dubFhXSEJYWVVkS1YxTnNiRlZXYlZFd1dWWmtTMk14VG5GVGJIQk9ZbTFqZDFac1VrZGtNV1JIV2toV1ZXSlZXbGhVVlZKVFRURmtWMWR0Y0U5V01VcFlXVlZXYTFWdFNsVmlTRVpXWWxSV2RsVnNXbk5qYkhCR1drZDRhVlpVUlRCV1JFSlhVakpGZUZwRldrOVhSVFZaV1ZSR2QxWkdjRmRYYms1WVVqQndSbFZYTVhkaVJscFlZek53VjAxV2NGUmFSekZTWkRBNVdWWnRkRk5TTTJoNFYyeGpkMDVIVVhoVmJrNVdZbXh3YjFac1ZtRlRiRlpZVFVSV2FHSkZjRmhWTW5CTFYwWmFSazVXYUdGU1ZuQXpWakJWTVZaV1JuUmlSVFZPVTBWS2VGWnRlR3BsUmxsNVUyeG9WR0V5YUZoWmJHaERZMnhXY1ZOcVVrNWlSM2d3V2xWU1UxWnNXWGRYYTNCV1ZucEdVRlpYYzNoa1YwWklUMVp3YkdGNlZsRldNakV3VWpGT1NGWnJiRmhpU0VKUFdWUkdjMDB4WkZkWGJYQlBWakZLVjFscmFFZGhNVXB5VTJ4R1dsWXpUalJVYlhoU1pWZEtSbVJIZEU1aE1YQkxWbFprTUZZeVJsWk5XRXBQVTBkb1lWbHJaRk5YUm5CSFdrWk9WRkpVYkZwWmExcHpWVEpGZWxGdWNGZE5ha0kwVkd0a1MxSXlSWHBqUmxwcFlUQndkMVpHWkhkV01rWnpWMnRhV21Wc1dtOVphMlEwVjJ4YVdFNVZUbWhXVkVaNFZsYzFRMVpWTVhWUmEzUlZZbFJHVjFwWGVGTldWbVJ5VDFaT1UySkdWalZXVkVacllURkZlVlZZYkZOaE1uaFRXVlJHWVdOR1VsaGpla0pzVW0xNGVsZHJXbXRoTVZsNFUydHNWVTFYYUhwV01WcExZMjFPU1ZSc2FHbFdSVlYzVjFkMFlXTnRWbk5XYmxaU1lsZDRUMWxYZUdGalZscHlWbTF3VDFZd1ducFphMXB6Vm0xS2NsTnVRbFZXTTBKVVZWZDRjMk5zY0VsVWJYUlhZbXRLV0ZaSGVGTlNNa1pYVjFoa2FsTkZOV0ZVVnpFMFV6RlNjVk5yWkZkV01HOHlWVzE0UTFSck1VVlJXR3hYVWpOU1ZGbFhjekZqYlVwSVRsWkthV0pXU25aV1ZFSlhVekZLYzJKSVJsUmhlbXhQVm1wQ2QxZFdXblJPVm1Sb1RWVnZNbGxyVWxkWFJrcFhZMFY0V21FeGNETmFSV1JYVTBkV1IyTkZOVTVXV0VGNlZqRmtkMU5yTVZkaE0yaFdZVEpvVVZacVRrTlpWbGwzVjJ0MGEwMVhlSGhWTVZKRFZXeGFkR1JFVmxWTlYyaFFXVlJHWVU1c1NuRlNiR1JUWld4YVdWZHJWbUZqTWxKSFYyNVdhVkpZUW05WmJYaExUVEZhUlZOdVpGSmhlbEkxVmpKNGMxUnNXa2hsU0VaaFZucEJNRnBFUmxOak1WWjFWMjFvVjFaV2NFdFdWbU4zVGxkR2MxTnNaRlJoYTNCWlZtdFZNVmRHY0VaWGJtUllVbFJXVmxWWE1YTlVhekZKVVc1R1YySkhUalJXYWtwTFYwWk9jbUZHWkdsWFJVcDVWbGR3UzA1Rk1YTmlTRkpzVWtaS1YxWnFRbUZUYkZaWVRWVTVWazFyY0ZsYVZXaDNWMGRLUmxkclVscE5SMUpNV2taYVYyUkhWa2hqUjJ4WFltdEtNbFpxUmxOVE1WbDVWbTVLYVZORlduSlZha3B2VlZac1dHUkZXazVpU0VKV1ZrWm9iMkpIUmpaaVNHaFhWbTFvZGxaVlpFZFdiVXBHVTJ4d1RsSXhTakpYYTFKSFV6Rk9SazlXYUdwU00xSllXbGQwWVdWc1pGaE5SRVpXVFd4S01GWkhOVTlpUmtweVRsZG9WMkZyV2pOYVYzaHJZekZ3Ums5Vk5WTk5SbkJhVmtSR2IxWXhaRmRUYmtwVVlteHdZVlJWV25aTlJsWnhVMnRrV0ZJeFdrbGFWVlpMVmtaS2NtSjZSbGROVm5CeVdYcEJlRk5HVW5GV2JGSlhVakZLYUZadGRHcE9WVEI0VlZoc1QxWkZTbEZXYWtaM1ZURldSMVZZWkdsaE0xSlZXVmh3YTFKR2IzbFBWRXBVVFcxNFJGVnJaRWRUUjBwSlZHMUdVazFGY0ZkWGJGcHZVVEpLUms5WVFsSmlhMHB3V1cxNFMyTXhaSEZUYkdSc1ZsZDRSVmxxVG1GU1IwWlhVMjVLV0ZadGFGUlpWVnByVGxad1NHTkhjR2xXYkhCMlYydFdhMVl5UlhoVldHeFBVbnBXV2xaVVFrWk9WazVXVld0YVRsWlVSbmhXTVZKWFZESldjbEpxVmxWaWJrSjFWR3BDVDJOR1RsVmFSM0JzWWxSb00xWkhlRk5rYlVaV1VtdHNVbUpVYkhGVmJGcExUV3hrVlZSc1pHdFNia0paVkd4U1EyRlZNSGRqUjNCWFZucEdXRmxzWkV0VFJscDBZMGQwVTAxdVozbFhWekUwVGtaV1dGSnJiRkppVlRWVVdXeGtOR1ZzWkhOU2EwNXJWbTE0V1ZSV1pEUmhhekIzVTIwNVdGWkZjRmhhVjNSelkxZFNTR0ZHUW1oaE1GVjVWMnhTVG1WSFZuSlBXRVpXVjBoQ1VWbFdWbk5SYkd0M1drYzVhMDFWY0VsVU1XUjNZVEZhTmxKdVRscGlWRlpVV2tjeFQyTXlWa2RVYlVaWFRWaENObFl5ZUd0VU1ERklVbXhvVUZkR1dscFZiWFJMWkd4cmQxZHFVbE5OYTFwWldsVmtORkZzU1hsbFJFWllWa1Z2TUZSV1duZFRSbHAxWTBWd2FHSnNTblpXUkVwM1VXczFkRlpZY0U1WFNFSlJXVmQ0Um1ReFVYbGlSWEJTVmpBMVNWbFZhR3RWTVVvMllraEdZVkp0VGpSWmEyUkxaRlpXZFZkdGNHbFRSMmhWVmpKNGExbFhUWGhqUm1oVllXdEtiMVp1Y0hOTlZtUkdWMnRPYVUxck5VaGFWVlpyWVVaWmVtRklUbEpXVjFKb1ZGWmtTMlJHVW5GUmJXaFhaVzEzZUZkVVRuTlRhelI0WWtaV2FVMHlVbEZaYlRWU1RsWnJlbU5JV2s1U1ZGWkdXV3BLYzFGc1RrWlRibHBhVFVaYVZGcEhlSEpsYkZwMVZXMUdWMlZzVmpOWFYzQlBVekZyZUZadVVsZGlWRVp3VldwR1lXTldjRVphU0U1cllsVndlbHBWV2tkaFJrNUdVMjF3Vm1KVVJucFpla1ozVld4R2RHTkhiRTVoYkZreVYydFdhMUl5VWxoVmEyeFZWako0VVZSWGRGWk5iRkpXVlc1a1QwMXNjRnBXUmxKaFZERktSbUY2U2xSV01sSkVXa1JLUjFOV1JuSldiV3hPWVhwU05GZFhlR3RXTWxKWVZXdG9VRmRIZUZwVmJYUjNZekZrZEUxVVVtbFNiWFEyVmxjMVEyRlZNWEZXYlhCWFZsZFNkbHBFUm05U2JHUjFVVzFzVTAxV1drTldNVkpMVGtkR1NGUlljRlZpV0doeFdsWldjazB4WkZkVmJscHJUVVJzTVZwRlVuTmhiVlowVDBoa1ZXSkdTakpaVmxaSFUxWkdkRTlYY0ZOV2EyOTVWakZTVDFZeVVrZGpSbWhQVmtWS2NGUlVRbmRoYkZwWVRWWmthVll3Y0VsV2JURjNZVEZKZVdWRVNscGlXR2N3Vmxaa1IxTldSblJVYkU1cFZqTm9ObFl5ZUVkUk1rNUlVMjVXVm1KWWFIRlpiRnAzWWpGa1ZWTnNaR3hoTW5oNFdrVmtiMVZIUm5KU1ZFcGhWa1V4TkZwWGN6VmpWbFpaWVVaQ2FGWlhlRU5YVkVKcllqSlJlRk5yYUZCV00wSnlWbTV3UjJNeGJIUk9WazVyWWxVMWVscFZXazlaVmxsNFkwaHdXR0pIVWxCVVZXUkhWMFU1V1Zac2JGTmhNSEF5VjFSQ1lVNUdTWGxTYkdoc1VqTm9RMVV3V2t0T1ZtUlhXa2hPVGxJd05ERlZNVkpyVjJ4YVNFOVVUbFZOYWxWM1ZERmtZVlZzUWxWTlJ6Vk1WVEp6TTFFeVpIWmthM1J3VVd0U2FGSXllSHBYYTA1RFZsZFdXVkZ0ZUZCaFZVcDNXVzAxVTJKR2IzbFdibXhLVVRJNU1sRXliRk5oTVd4WlZXMW9XR1ZYVW5GWk1qRlhZVWRTU0ZadGRGVk5hbEoxVjBaT1FrOVZiRVZTVkVaT1lXeHJNVlJ1Y0Zaa01ERkZWRlJrUkdGVmF6TlpNM0IyVFVVMVZXSXliRUpUUlVwMldUQldVMlJzYTNwV2JsSmhWbnBWZDFscVRrdFpNVlowVm0weGFWSXhXbkZhUldSelpHMUtjMlZHUm1oVFJVcHFWVzB4YzJNeGNGSlJibFphVm5wR2MxbDZUa05oUm10NVZtNXdTbUZ1VW05VU1uQkNUbTFWZWsxWWNGQmhiRVkyVkRKc1NsRlhUa2hoU0dSVFVucHNjVnBHWTNoaVIwcDFWVzVhYW1KSWFGUlhiR1JoWXpGd1dGUnFRbWhXZW13eFYwVmFRMkl5VGtkbFJXUm9Wak5vYzFGVlpITmtWbXQ1WlVSR1lWSXhXalpUVjNBd1lVVTVjVkZVV214TmVrWTJWREp3VWsxRk9YQlRWVVpxVWpKb00xVnJZelZoYlZKWVRWZDRhV0pzU2pKWk1uZzBWVEZ3V0ZkdVRtRldNRFIzV1Zaak5XUldhRWRSYlRscVVtNW9TRmxXWkRSaVJVWklWMnBHYVdKVk5IZFpWbU0xWkZkT05WTlVaRnBXUnprelZESTFNRTlYVGpaaWVrSlBVa2M1Y0ZGVmFFTmlNazVHVlc1YVdrMHhXakJYYkdNeFRVZEplbE50VGxaaVZscDBXV3RrVjJGdFVraGlTRnBwWWtob1VsbFZhRU5aTVVwMFlraE9ZVlZWU25GWmFra3haVzFTU0ZKdVZtdFRSVEZ3VkhwS1JrNXJNVVZqUkdSdFYwVXdNbFJyVWtwT2EyeHVVVzVrYUZORlNrWlpha3BQVFZkS1dGWnVWbXRTZW13MVYwVmFTMkpHY0hSbFIzaGFUVEZLZDFscVNURlpNVlpJWVVoa1dWSldjSGRaYTJSV1VWWnJlV1ZIYUdwTk1EVnpXVE5zU2s0eGJGVmlNMlJRWW01Uk5Wa3pjSFpOUlRWVllqSnNRbE5GU25aWk1GWlRaR3hyZWxadVVtRldlbFYzV1dwT1Mxa3hWblJXYlRGcFVqRmFjVnBGWkhOa2JVcHpaVVpHYUZORlNtcFZiVEZ6WXpGd1VsRnVRbWxpYkVweldUSXhZV0ZHYTNsV2JuQktZVzVTYjFReWNFSk9iVlY2VFZod1VHRnNSalJVTW14S1VWZE9TR0ZJWkZOU2VteHhXa1pqZUdKSFNuVlZibHBxWWtob1ZGZHNaR0ZqTVhCWVZHcENhRlo2YkRGWFJWcERZakpPUjJWRlpHaFdNMmh6VVZWb1UyVldiRmhpUkVKcVpWVnJNMWRXVW5aa01EbDFaRVJzYlZWVU1EbEtlV3R3VDNkdlMweDViMmRSTW1od1lrZFJaMVpJYkhkYVZHOW5ZVmMxTUZwWFpHeGphVUZ4VEhkdmExcEhSakJaVm5OdVdUTktiRmxZVW14YVJUbDFTakV3WjFCVFFYaE9WRWt5VDFSak5VMVVSVEJQZDI5cFR6Tk5OazVFVlRaSlowSjNZVWhDUldJeVRqRmlWMVoxWkVjNWVWaEdTbXhhYlhoc1dUTlNjR0l5TldOVlIyaDNXRVZhY0dKSFZVRmliVVowV2xoT2QxbFhUbXhqZVVrM1dWUnZkMDl1ZERsamVtOHdUWHB2YVVGSVFtOWpSVkoyV1ROV2RGcFhOVEJpTTBwalZXMVdiV0pIVm1wa1IyeDJZbXg0VVdGSVFtTlNiV3h6V2xGQ2NHSnRUbk5rVjFKc1kzbEpOMWxVYjNkUGJuUTVZM3B2TUU1RWIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVW0xc2MxcFJRbTFrVnpWcVpFZHNkbUp1VFdsUE1rVTJUVVJ3TjJaWVRUWk9SRkUyU1dkQ2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVlVkb2QxaEZXbkJpUjFWQldUSTVkV016VW1oaWJsSjZTV3AwYUU5cVFUWmxNekY2VDJwUmVVOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oSFlWZDRiRUZIVG5OWldFNTZXbGhOYVU4eVJUWk5SSEEzWmxoTk5rNUVWVFpKWjBKM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05WUjJoM1dFVmFjR0pIVlVGaFZ6VXdXbGhLYlZsWFRteGplVWszV1ZSdmQwOXVkRGxqZW04d1RWUnZhVUZJUW05alJWSjJXVE5XZEZwWE5UQmlNMHBqVlcxV2JXSkhWbXBrUjJ4MllteDRVV0ZJUW1OU2JXeHpXbEZDTUdOdFJuQmtTRTFwVHpKRk5rMUVjRGRtV0RBOUp5a3BPd29LTHlvZ1EyaHBiR1FnVkhsd1pUb2dhVzUwWldkbGNpQXFMd29rWkdGMFlWc25ZM0psWVhSbFpFOXVKMTBnUFNBeE5USTJPVGM1TVRreU93b2lPM002TkRVNklnQndhSEJFYjJOMWJXVnVkRzl5WEZKbFpteGxZM1JwYjI1Y1VHaHdYRVpwYkdVQWJtRnRaWE53WVdObGN5STdZVG93T250OWN6bzBNem9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJwYm1Oc2RXUmxjeUk3WVRvd09udDljem8wTkRvaUFIQm9jRVJ2WTNWdFpXNTBiM0pjVW1WbWJHVmpkR2x2Ymx4UWFIQmNSbWxzWlFCbWRXNWpkR2x2Ym5NaU8yRTZNRHA3ZlhNNk5EUTZJZ0J3YUhCRWIyTjFiV1Z1ZEc5eVhGSmxabXhsWTNScGIyNWNVR2h3WEVacGJHVUFZMjl1YzNSaGJuUnpJanRoT2pBNmUzMXpPalF5T2lJQWNHaHdSRzlqZFcxbGJuUnZjbHhTWldac1pXTjBhVzl1WEZCb2NGeEdhV3hsQUdOc1lYTnpaWE1pTzJFNk1EcDdmWE02TkRVNklnQndhSEJFYjJOMWJXVnVkRzl5WEZKbFpteGxZM1JwYjI1Y1VHaHdYRVpwYkdVQWFXNTBaWEptWVdObGN5STdZVG93T250OWN6bzBNVG9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUIwY21GcGRITWlPMkU2TURwN2ZYMD0nKSk7CgovKiBDaGlsZCBUeXBlOiBpbnRlZ2VyICovCiRkYXRhWydjcmVhdGVkT24nXSA9IDE1MjY5Nzk1ODQ7CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ=='));

/* Child Type: integer */
$data['createdOn'] = 1527755061;
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}'));

/* Child Type: integer */
$data['createdOn'] = 1527755130;
