<?php 
/* Cachekey: cache/stash_default/documentation\api\php\3894f8a26c47917ab9cca4dfb02cfa57/ */
/* Type: array */
/* Expiration: 2018-06-05T00:30:49+00:00 */



$loaded = true;
$expiration = 1528158649;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755152;
