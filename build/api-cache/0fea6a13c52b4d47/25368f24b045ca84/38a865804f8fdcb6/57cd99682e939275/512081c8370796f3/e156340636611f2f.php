<?php 
/* Cachekey: cache/stash_default/documentation\api\php\55d6e4b21435548a63b02e40ad18ac40/ */
/* Type: array */
/* Expiration: 2018-06-04T17:04:22+00:00 */



$loaded = true;
$expiration = 1528131862;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"60d8ed00105e9706084f61aa04a2dd74";s:39:" phpDocumentor\Reflection\Php\File name";s:20:"bacf160a0a49384c.php";s:39:" phpDocumentor\Reflection\Php\File path";s:121:"build/api-cache/0fea6a13c52b4d47/25368f24b045ca84/38a865804f8fdcb6/57cd99682e939275/0bacd425d72d702b/bacf160a0a49384c.php";s:41:" phpDocumentor\Reflection\Php\File source";s:42612:"<?php 
/* Cachekey: cache/stash_default/documentation\api\php\1abba9de91a81c1cb41a4b0abafd4d5c/ */
/* Type: array */
/* Expiration: 2018-06-04T19:34:33+00:00 */



$loaded = true;
$expiration = 1528140873;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImEzNTgyNDI0Njg1NGNkNzAwZDI0OTBmYWZmMTM0ZDFkIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6IjljNDNlMjgxZjk2ODE3MmEucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTIxOiJidWlsZC9hcGktY2FjaGUvMGZlYTZhMTNjNTJiNGQ0Ny8yNTM2OGYyNGIwNDVjYTg0LzM4YTg2NTgwNGY4ZmRjYjYvNTdjZDk5NjgyZTkzOTI3NS8xYzk4NTdlNTNiMWIxM2VmLzljNDNlMjgxZjk2ODE3MmEucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozMDc4ODoiPD9waHAgCi8qIENhY2hla2V5OiBjYWNoZS9zdGFzaF9kZWZhdWx0L2RvY3VtZW50YXRpb25cYXBpXHBocFwyNTZiMjBlNDU5MWUxMWIwNzY5OGM0YmRkZjk2MTRjNy8gKi8KLyogVHlwZTogYXJyYXkgKi8KLyogRXhwaXJhdGlvbjogMjAxOC0wNS0yN1QwNzoxMjo1MSswMDowMCAqLwoKCgokbG9hZGVkID0gdHJ1ZTsKJGV4cGlyYXRpb24gPSAxNTI3NDA1MTcxOwoKJGRhdGEgPSBhcnJheSgpOwoKLyogQ2hpbGQgVHlwZTogb2JqZWN0ICovCiRkYXRhWydyZXR1cm4nXSA9IHVuc2VyaWFsaXplKGJhc2U2NF9kZWNvZGUoJ1R6b3pNem9pY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxJam94TWpwN2N6bzBNem9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJrYjJOQ2JHOWpheUk3VGp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBR2hoYzJnaU8zTTZNekk2SW1VNVlUUmtZamhsT1dGa1pEY3hOREF6WVROak9ESm1NRFkwTjJRNU9UWTBJanR6T2pNNU9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHNWhiV1VpTzNNNk1qQTZJak0zWVRneFl6WmxOekUxTmpKaE1qRXVjR2h3SWp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBSEJoZEdnaU8zTTZNVEl4T2lKaWRXbHNaQzloY0drdFkyRmphR1V2TUdabFlUWmhNVE5qTlRKaU5HUTBOeTh5TlRNMk9HWXlOR0l3TkRWallUZzBMek00WVRnMk5UZ3dOR1k0Wm1SallqWXZOVGRqWkRrNU5qZ3laVGt6T1RJM05TOHlNekU0TkRFelkyWXhZMlV5TnpObUx6TTNZVGd4WXpabE56RTFOakpoTWpFdWNHaHdJanR6T2pReE9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFITnZkWEpqWlNJN2N6b3lNVGt5TURvaVBEOXdhSEFnQ2k4cUlFTmhZMmhsYTJWNU9pQmpZV05vWlM5emRHRnphRjlrWldaaGRXeDBMMlJ2WTNWdFpXNTBZWFJwYjI1Y1lYQnBYSEJvY0Z3d1pqWXlPVGd4WlRVNU1UUTRZalEyWWpnMU1qZG1abVF5WkRRek5qZzVNaThnS2k4S0x5b2dWSGx3WlRvZ1lYSnlZWGtnS2k4S0x5b2dSWGh3YVhKaGRHbHZiam9nTWpBeE9DMHdOUzB5TmxReE5qb3hOVG95TlNzd01Eb3dNQ0FxTHdvS0Nnb2tiRzloWkdWa0lEMGdkSEoxWlRzS0pHVjRjR2x5WVhScGIyNGdQU0F4TlRJM016VXhNekkxT3dvS0pHUmhkR0VnUFNCaGNuSmhlU2dwT3dvS0x5b2dRMmhwYkdRZ1ZIbHdaVG9nYjJKcVpXTjBJQ292Q2lSa1lYUmhXeWR5WlhSMWNtNG5YU0E5SUhWdWMyVnlhV0ZzYVhwbEtHSmhjMlUyTkY5a1pXTnZaR1VvSjFSNmIzcE5lbTlwWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFIyRlhlR3hKYW05NFRXcHdOMk42YnpCTmVtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUpyWWpKT1EySkhPV3BoZVVrM1ZHcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJSMmhvWXpKbmFVOHpUVFpOZWtrMlNXMWFiVnBIUlRSYVIxWnJUV3BhYWsxdFJtaFBWMUV5V1hwRk5FNTZSWHBPVjA1clRtMUplVTVVWkdsSmFuUjZUMnBOTlU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhIWVZkNGJFRkhOV2hpVjFWcFR6Tk5OazFxUVRaSmFtTjNUbFJSTkU1SFJtMVpWRWt4VFZkWk5FNUhSWFZqUjJoM1NXcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJTRUpvWkVkbmFVOHpUVFpOVkVsNFQybEthV1JYYkhOYVF6bG9ZMGRyZEZreVJtcGhSMVYyVFVkYWJGbFVXbWhOVkU1cVRsUkthVTVIVVRCT2VUaDVUbFJOTWs5SFdYbE9SMGwzVGtSV2FsbFVaekJNZWswMFdWUm5NazVVWjNkT1IxazBXbTFTYWxscVdYWk9WR1JxV2tSck5VNXFaM2xhVkd0NlQxUkpNMDVUT1cxT1ZFNXFUVlJqTVUxRWF6VlpWRlp0VFdwamVFeDZZM2RPVkZFMFRrZEdiVmxVU1RGTlYxazBUa2RGZFdOSGFIZEphblI2VDJwUmVFOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oSFlWZDRiRUZJVG5aa1dFcHFXbE5KTjJONmIzaE9WRWt5VDBSdmFWQkVPWGRoU0VGblEyazRjVWxGVG1oWk1taHNZVEpXTlU5cFFtcFpWMDV2V2xNNWVtUkhSbnBoUmpscldsZGFhR1JYZURCTU1sSjJXVE5XZEZwWE5UQlpXRkp3WWpJMVkxbFlRbkJZU0VKdlkwWjNkMDlFVFhoUFJFSnBXbFJuTUZwSFJteFBWMUV6V2xSSk5WcFhWVFZhYW1OM1dYcFpORTlFU1RCWmVUaG5TMms0UzB4NWIyZFdTR3gzV2xSdloxbFlTbmxaV0d0blMyazRTMHg1YjJkU1dHaDNZVmhLYUdSSGJIWmlhbTluVFdwQmVFOURNSGRPVXpCNVRteFJlVTFxYnpCUFZHOHdUV2x6ZDAxRWIzZE5RMEZ4VEhkdlMwTm5iMnRpUnpsb1drZFdhMGxFTUdka1NFb3hXbFJ6UzBwSFZqUmpSMng1V1ZoU2NHSXlOR2RRVTBGNFRsUkpNMDE2WXpCUFZHZDVUM2R2UzBwSFVtaGtSMFZuVUZOQ2FHTnVTbWhsVTJkd1QzZHZTMHg1YjJkUk1taHdZa2RSWjFaSWJIZGFWRzluWWpKS2NWcFhUakJKUTI5MlEybFNhMWxZVW1oWGVXUjVXbGhTTVdOdE5HNVlVMEU1U1VoV2RXTXlWbmxoVjBaellWaHdiRXRIU21oak1sVXlUa1k1YTFwWFRuWmFSMVZ2U2pGU05tSXpjRTVsYlRsd1dUQmtiMlF4U2toUFYzQnJWbnBHYzFsdE5WTmtiVTV6WlVaT1lWWXhjSHBYYkdSUFRVZEdXRTlZVmxsU2EwcDJXVEJhTkZJeVJsaGxSM2hLWVcwNU5GUlhjSGRPTWs0MllucENUbVZ0T1hCUlZXaERZakpPUmxWdVdscE5NVm93VjJ4ak1VMUhTWHBUYlU1V1lsWmFkRmxyWkZkaGJWSklZa2hhYVdKSWFGSlpWV2hEV1RGS2RHSklUbUZWVlVweVdXcEtUMUV5U2toUFYzQm9aVlZyTTFaSGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlNNbWh2V1hwS2JtRlZPSHBVVkZwT1pXdHJNbE5YY0ZKbFJUVlZWbGhrVUZaR1duUlVWekZXVGtVMGVWWlliRTVsYlhOM1ZGY3hUazFGTlVWV1ZFSmhVakZXTkZSdWNHcGxiSEJWVmxSR1NtRnVValpVTW5CT1RsVTVjRk5WUm1wU01tZ3pWV3RqTldGdFVsaE5WM2hwWW14S01sa3llRFJWTVhCWVYyNU9ZVll3TkhkWlZtTTFaRlpvUjFGdE9XcFNibWhJV1Zaa05HSkZSa2hPVjJocFZqRldjRlI2VGs1T2F6RnhVVlJhU21GcmEzZFVNR1JMWWxad1ZWZHRhR0ZoYkd0NlZGVlNXazVHY0VWaE0xWnFVakpvTTFOWGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlRSVXB2V2tWa2JtRlZPSHBVVkZwT1ZrVnNORlF5YkV0aFYxSllZa2hPWVZGNmJHOVpNR1J5WkVacmVWSnRjR2hTTVZZeVZGVmtZV0pHYkZWWGJXaE9Wa1UxY1ZSc1VrdGhWVFZJVlZSQ1QyVlVhRFZVYkZKT1RXczVTRmRZYkU5U01Hd3pWR3RTVjJGc2JGVmFla0pOWldzd01GZFdVbTVOYXpWVldqTmtUMUl4YXpCWGJURlRZV3hzY1ZkWVdrOVdSMUp4VjJ0U2NrNVZOWEZhTTJ4aFZrZDBObFF4VWtwTk1EVlVUMGhzVUZKSGFIRlVWbVJMWWtVNVZWb3paRTVpVlZZelYxWlNUazVWZURaVFZFSlFVakJ3ZEZkc1VtRmhSbkJ4VjFST1RsSkdhekJYYTFKeVpGZE9TR0ZJWkVwaGJsSTJWREp3VW1WRk9YQlRWVVpxVWpKb00xVnJZelZoYlZKWVRWZDRhV0pzU2pKWk1uZzBWVEZ3V0ZkdVRtRldNRFIzV1Zaak5XUldhRWRSYlRscVVtNW9TRmxXWkRSaVJVWkpWRzVhYTFkRmNIRlhiRTVLVGpKT05tSXphRTVTUldzd1ZGVlNkbUZXUWtWUFdHUm9VMFZHYmxFeWF6UmpWV3hHVkcxb1drMXRhSE5aVkVwWFRsVTVjRkZ0Y0ZwV01EVjJWMnhOTldWdFVraFNibkJvVW1wc2NsZHNaR0ZoUjFKWVpVUkNUVTFzU2pKWFZFNVhaRVp3V0U1VVFscFhSa3AzV1dwSk1Wa3hiRmxSYmtKWlUwVktkbGt3V2pSaVZUbFZZWHBLVG1KV1JqUlViRkpIWWtVeGNWWlVSazVpVm5CelZEQmtTbVZWTlhGWmVrNWhZbFpWZWxSdE1XRmhNRGxWWVhwT1dsVjZhRzVUTW1zMFV6QjROV0l5WkZkVFIzZ3pWMnhTZGxveGJGbFRibXhhVjBkMGJsTXlhelJUTUhnMVlqSmtVMWRIYUROWlZtaExZVWRTU0dKSVdtbGhiVGx1VkZkd1FtVkZPVVJOU0dSUFZYcENOVlJ0ZUZKbFJUVkZZak5rVUZKSE9UUlVNVTU2WkRBeFJXSXpaRTVSTUVaNFZFaGtkbE13VG01aU1uUnBVbnBzYjFkclpGZGhNR3hGVFVka2ExTkZiM2hYYkZKNlV6QndTRlpxVW1wU01uZzFWMVpvVTJOSFNYbE9SMlJSVlRCR05GUnNVa3BOTURFMlZWaHdUMkZ0Y3pGVU0yUjJVekJ3U0ZWdGFHdFNNRlp1VlVaT1EyRkhUblZUYldoc1ZUSmtkMVF6WkhaVE1IZzFZakprVWsxdGFIZFphMlJTV2pGYVNXSklaR0ZXUnpsdVdXcEtTMk5XY0ZoVWFrSktVVEk1TWxFeWJGTmhNV3haVlcxb1dHVlhValZYYkdoVFRWZE9kRTVITlZsVk1FVTFVMVZvVjJSWFRYbFdibXhvVmpCYWVsbFdhSGRpUlhSSVUyMW9hazFzVlhsVWExazFZVEZ3V0ZSdVdtRlNNVloyVTJwR1UwNXRTWHBqUlRWc1lsUnNkMWRVUW10aU1sRjRVMnRvVUZZelFuSldibkJIWXpGc2RFNVdUbXRpVlRWNldsVmFUMWxXV1hoalNIQllZa2RTVUZSVlpFZFhSVGxaVm14c1UyRXdjREpYVkVKaFRrWkplVkpzYUd4U00yaExXVmN3TlU1R1VsaGpTR1JQVFdzME1sbHVjRU5VYlZaMFQxaENVbFpYYUVSWmFrcFBVbXhXZFZkc2NFNU5WbTkzVmpKNGFrMVZNVWhUV0hCVVlsVTFWMWxzV21Ga1JteHlXa1prYUdKV1NrbFphMmhoWVZkS1NXRkdTbHBXVjJoRVYxUkdTMlJIU2tsVWJVWldWbFZ3ZVZkWGNFdFVNVVY1VTJ0b1VGWXpRbTlhVmxaeVRURmFTR05FUW14aGVteDRWa1pTVjFWSFJsWmlSVXBhVFVkU2RscEVSa3RUUlRsWVkwZDBWMlZyV25wWFZ6QXhWVEpTZEZSdVRteFNhelZvVm1wR2QyVnNaSE5hUlRsT1VqQmFXVlF4YUZkWFZrcHlVMjVhV2sxR2J6QlZha3BIVjBkV1NHVkZTbE5OYldoMlYxaHdTMkp0UmxaUFNIQlZWa1p3VDFwWGRISk5iRTVZWTBad1RsSlVSbmhXTWpGdlZVWlplRkpZWkZWWFNFSkxWR3hhZDFKV2JEWlVhemxzWVRKME5WWXlNSGhaVjBwR1QxWm9WV0pYZUdGV2FrRXhZMVpTVmxWclNrOVNWRVl3Vld4b2IxTnRSblZWYWxwVlRXNUNUMVJzVlRWalJrNVdVbTF3VTAxdFozcFdWM1JxVGxkR2RGVnNhRTVXTTJod1dXMTRTMDFzYTNsbFJGSldUVmhDV1ZZeU5VOVpWbGwzVGtoa1dsWnRUVEZhUmxwdlVqRkdkRTlYY0ZOaWJXaEpWMVphYTA1SFNrWlNhMmhQVmpKb2NGWnFSbGRqUmxJMlZHczFUMkY2Um5oVlZsSmhVMjFHYzFKWWNGVmlXRUoxV2xWVk1XTldXbFZUYkhCb1lsZE9ObFpHVm10U2JWWkdUbFJhVlZkR1duRlZha3B2VFRGT1dHTkVRbXhoZW14NFZrWlNWMVZIUmxaaVJVcGFUVWRTZGxwRVJrdFRSVGxZWTBkMFYyVnJXbnBYVnpBeFZUSlNkRlJ1VG14U2F6Vm9WbXBHZDJWc1pITmFSVGxPVWpCYVdWUXhhRmRYVmtweVUyNWFXazFHYnpCVmFrcEhWMGRXU0dWRlNsUlNWWEIyVjJ0V2EySnRSbFpQU0hCVlZrWndUMVpyVm5OT1JsRjVZa1YwYUZZeFNsbFphMmhQV1ZaR05tSkhPVnBOUjFKNVdrVmFjbVZXU25SalIyaFRUVlpaZVZaR1ZtdFpWMHBIWWtaV1dHSlhhRTlXYTFVeFkxWlNjMVZyZEdoV1ZGWkpWbFpTUTFReVZsVmhSRlpWWWtaS1QxUlhjelZUUm1SWllrVTVVMDFIZDNwV1IzUlRWakpHYzJKR1ZtRmxhMHBPV2xkemQwMUdaRmRWYlRWT1lYcFdWbGRxVG10VU1VbDRZWHBDV0dKVVJsUlpWM2h6WTFaa1dWZHJPVmRTTVVwNFZqSjBVMk5yTlZaT1dFWmhUVEo0YUZaclpEQk9iRkY0Vld0d1RrMUVWbFZVTUZKUFZVWlplRlpZY0ZoWFNFSjFWR3hWZUU1c1dsVlRiSEJvWWxkT05sWkhkR3RTTWtWM1pVUmFWbFpGTlZCWlZ6RnJUa1pTZEdOR1drNWlSM2g0VjI1d1QxUnNTWGRXYWxKVlltNUNUMXBHWkU5VFIwWkpXa1Z3YUdKc1NUSldSRXAzVlcxV1JrOVlRbFJXVlZweFZXcEtiMDB4Vm5KWmVsWm9ZbFpLV1ZSV1pEUmhWMHB6VTJwS1drMXVaekJXVkVaM1YwWmtkVlJ0UmxkTlJGSXpWMVphYWs1WFVsZGhSV1JTWWxSc2NWVnROVzlUUm14WFdrUlNhVkpWV2twV1J6VmhZVEZrUm1OSVJsaGlSVFZMVkdwS1QwNXRTalpUYXpsWFVtdFplbFpFU25OVGF6bEhVVmh3VW1KVWJIRlZWRUpIVkVaU1NXSklXbUZOVlZZMVZXMHhkMkZHU1hoWGJteFlZa2RvZVZSdGRITlRSbEowWVVad1RtSlhhSHBXUlZKUFZEQXhSMkpHYkZWaVZHeGFWRmQ0UzJNeFpIUk5WV1JPVmpCd1NsWldhR0ZaVmtvMllraEdZVkp0VGpSWmEyUkxaRlpXZEdGSGRGTk5ibWQ1VjFjeE5FNUhSa2hVYTJocFVqQTFjVlZxU205Tk1XUkdWVzA1YUdGNmJGWldiRkpIVlVaYVJrNVlVbGhpV0VKVFZGZHpNVTV0UmpaVmF6bFRUVVJXZVZZeFdsTmhhekIzVFVoc1ZXSlhhRkJWYTFaM1l6RlNXV05IUm1oV1ZHeEdXVmh3UzFSWFZsWlNibWhWVTBkU01scEhkREJqUmtaelZtMTRXRkpWY0hwV1JFcHpVVEpHU0ZSdVZsUmlWMmh6VmxSQ1IyVkdVa2xhU0ZwcllUTlNkMVZYZEdGaVJrNUdVMjVrV2sxcVJraFVWV1JIVjBVNVdWWnNRbWhXVlZreFZrWldVMUpyTlVabFJsWlNWa1ZhVGxaclZuSmxiRnB5Vld0S1RsWlViSGhWYkZKVFZVZEdjbFpVUWxSTk0wSkRXa1JCTldOV1JsbGFSWEJTVFdwcmVWVlVTbXRrYkUxM1ZHNUNWbUpyTlhCVVYzUmhZMnhrYzFwR1NtRk5WVXBWVlZkd1EyRnRTbk5YYms1VlRUSlNNbGxVUm5kWFYwWkpXa2RvV0ZKWVFuWlhhMVpyWXpKU2RGTnVRbEpXUjNoTFZXdFdWbVZHVWxoalIzQnNZWHBzVmxkcVRuTlZSbHBJV1hwT1VrMXRVakpaVkVaM1UwWktjVkZzY0ZaTlJWVXhWVEZXYTFJeVZsaFVibEpUWVd4YVRWVlVTbnBOTVVWNVdraGFhMkV6VW5kVlYzUlRZVVpKZVdWSWNGaGhNRFZFVm14a1YxZFdSblJsUmtKb1ZsVnZlVll4WTNoa01rcEhZVE53VmxZeVVrMVpWbEp2VkVaT2NscEdUbWhTTVVwSlZXMHhTMU13TUhkalNFNWhVbGRvV0ZwV1pFdGpSbkJJVld0d1UxSkZTblZYYTFwcVRWZFdjMk5HYkZSaWEwcGhWbXBPYjJReGNGaE5WbHBwVFZkNE1GVnROWGRaVmxwSFlUTmtXRkpGY0ZSWmExcHlaVlU1V0dSSFJsWk5iVkl4Vm0xMGIyUXlVblJXYmtwT1ZrWndjRlJYTVRSalZsWnhVMjA1VGsxV1dubFhXSEJYWVVkS1YxTnNiRlZXYlZFd1dWWmtTMk14VG5GVGJIQk9ZbTFqZDFac1VrZGtNV1JIV2toV1ZXSlZXbGhVVlZKVFRURmtWMWR0Y0U5V01VcFlXVlZXYTFWdFNsVmlTRVpXWWxSV2RsVXdXbk5XTVhCRlZXMXNVMVl6YURSWFYzQlBZakZTZEZKdVZsSldSVFZoVkZST1EwMXNVbFpXV0doUFlsVnNOVmxyVmt0V1JrcFdZMFJLV0ZaRlNsaFdWRXBUWXpKRmVtTkdaR2xpUlhCdlZtMDFkMVp0VVhoaVNFWlZZVE5TWVZSV1dtRk5SbHAwVFVob2FGWnJiRFJXTWpWSFdWWktXRlZ1Y0dGU2VrWk1XWHBLVjFJeFNuUmhSbEpUVmxoQ2VGWnNZM2RsUjAxNVZGaG9hbEpyY0ZOWmJHaFRZMFpTV0dONlJsTlNiWGg1VjFod1YyRkhTbFpYVkVaV1RWWktjbFpzWkVka1ZsWnhWMnhXVG1KclNsQldSM2hXVGxkT1IxUnNXbE5pV0VKVVZGY3hibVZzV2xoa1IzQlBWakJhTUZaWGVHOVViRmw2WVVoQ1dtSllhRXhVVjNoeVpWZFdSVlZzV2s1WFJVcGFWbXBKTVZReGJGZFhXR1JQVTBkU1lWWnRNVTVOVm5CSFYyMDVVMDFWV2pCVU1XUjNWVEpLZEdGRmJGaFdiSEJ5Vkd0a1MxSnNTbkpoUjJoVFRXMW9lRlpHWTNoaE1rNUhWV3BhVldGNlZsQlpXSEJHVFd4VmVGVnRSbFJpVlZwNVdXdFNUMVpXV2xoVmEzaGFZa1pWZUZSdGVHRlhWMHBIVVd4a1RsZEZTalJXYTJRd1ZURk5lVkp1VG1sVFJWcGhXbGQwZDFReGNGaGpla1pwVFZkU1ZsVXlkSGRVTVVwVlVteGFWMkpIYUROV1JFcEhZMnMxV1ZGc1ZsZE5NRXBaVjFaU1EyTXlUbGhWYTJ4cVVtdEtiMWxZY0VKbFJscEZVMjVPVkdKRldsbFdSM1J2WVVaT1NGVnNVbFppYmtKNldURmFkMUl4YTNwaFIyeFRUVWhCZUZac1l6RlpWMFowVTJ0c2FGSnNTbGxaYTJSVFlVWnNObEp1WkZoU2JFcDRWVmN4YjFZeVZuUmtNMmhYVFVaYWFGVlVTa3BsVmxKeVdrZDRVMVl4U25aV2JYQlBZakpOZUZKc1dscGxhMXB2VldwQ2QxZFdXbk5hU0U1V1VsUkNNMVJWVWt0V1ZscHpVMnQwVldKWVVucFpNakZMVTFaYWRHUkdUazVXYlRoNFZqRmpkMlZHV1hkTlZWcHNVMFphVTFsc1VuTmpWbFpWVVc1S1RrMVhkRFpaTUdoaFlrZEdObUpHV2xwaGEzQjZWVmQ0VDFKc1RuVlhiSEJPVW14d1ZWZHJaRFJqYlZaelYyNVdWbUpWV2xoYVYzaFhUVEZrV0dORk9WUk5WM1EwVm0wMVUxWXlTbFZTYmtKV1lXdGFhRmt4V25kU2JIQkpWRzEwYVZaWVFqWlhiRlpoVWpKR1IxUnJXbFJpV0VKWFdXeFNSMlZzYkRaU2JtUldZa1ZhTVZkclduZFhSa3B5WTBSS1ZrMVhVak5VVldSWFkyczVXVkpzYUZoU01taFNWMVphVjJSdFZsZGFTRTVhWld0YWIxUlhkSE5PYkZWNFlVZEdXbFl3Y0RGVlZ6QTFWMjFLVlZKdWNHRlNiVkpMV2xkNFYyTldSblJpUjNoWFVqTm5kMVpxUm1GaE1ERklVMnRvVldKclNsRldNR2hEWTFac2MxWllhRTVpUmxvd1ZGWldhMkZ0U2tsUmJIQldUVmRvYUZadGVFOVNiVTVGVTIxR1UyVnJXalpYVmxKSFpERmtWMVJzYkZoaVYzaFZWVzAxUTJSR1duSldiVVpZWWxaS2VsWkhlRzlVTVZwR1UyMW9WMDFHV2pOVVZscHJZekpHUjFOdGRGZE5SRlpLVjFaV2IyRXhUblJTYmxaV1lXeHdWbFJYTlVOVk1YQldWbFJXYWxKck5WZFZiVEYzVlRBeGRGb3pjRmRXTTFKeFZHeGtSMlJHVm5OaFJUVlhUVEpvZDFkWE1UUlRNREZ6WVROc2JGSkdTbGRVVm1oRFYxWlplVTVWT1ZwV2JHd3pWR3RvYTFkc1duUlVWRVpoVW14d2RsVnFSa2RrUlRsWVkwWk9hV0pYYUVwV01WcGhZVEExU0ZOcldsTmhNbmhXV1cxNGQyTnNXWGRXYm1ScVZtMVNlbFpIZEhkVU1ERnlUa1JLV21Gck5UTldSM2hMVW14S1ZWTnNVbGROTUVZMlZrVlNTMVF4VGtoU2EyeGhVbFpLYUZSVVFrcGxSbGw0VjIxd2JGSXdjRWxXUm1oM1ZXMUtXR0ZIUmxWV00yaFlXVzE0VjJSRk1WWmFSM0JwVTBWS1lWWlVTWGhVTVZwelZHdGFhbEpGY0doVmJuQkhaV3hzVlZKdVpGaFdhelV3VmtjeGMxWkdTblZSYmxKWFlURmFhRll5Y3pCa01WSjBUbGR3VTAwd1NuZFdWM0JEV1ZVMWMyRXpjR2xTVlRWVldXeFdkMDFXV2xoTlZGSm9ZbFZ3VmxadE5VOVpWa3BXVGxWU1dtRXlVbGhWTVZwWFpFZFdTR0pIYkZkaE1qaDVWbFJHVjFsVk5VZFRXR2hwVW0xb2NsVnFUbTlqVm14eVlVYzVWbUpIZERWVVZWSlhWRzFLVmxkc2JGZFdla1V3V1ZjeFMxTlhSa1prUm5CcFZrWmFWVmRYZEd0VU1sSkdUbFpvYkZJelVsTldNRlpHWld4V1ZWTnVUbEppUnpreldXdFdVMVZ0U25SVmJrWmFZa1pLZVZwRVJtdGpNWEJHVDFVMVUySnJTbHBXYkZwcllUSkdjazFJYUZSaVZHeG9WV3hrVTJWc2JGaGtTRTVUVW14YU1GUldaSGRoVmxwelkwaHdWMVl6YUhGYVZXUkhVMFpLYzJGSGVGTldiSEIzVmtaa2QxSXlTWGhpUm1SYVpXdEthRlJXVmt0V1ZsWllUVmM1YUdKVmNIbFpNR00xV1ZaYWNrNVlWbHBpVkVaTVZqQmFTMlJXUm5SaVJrcHNZa1p2TWxZeWRHdGpNa1owVkZoa2FVMHllRlJaYlRGVFkwWlNXRTVYT1d4aVIzZ3hXVmh3UjJGck1YTlRibVJZVmtVMVVGVjZRWGhrUjFaRlVteG9WMlZyUlhoV1IzUlhUa2RTU0ZaclZsUmhNMUp6VmpCa1UwMVdXWGxqUlhCc1VqQmFTVlZ0ZUc5aE1EQjRWMjFHVlZZelFucFVWVnBQWkZkS1JWUnRSazVTZW1zeVYxZDBhMkl5UmtkVGFscHBVa1Z3VmxWdWNFZFZSbkJJVFZWMFYxSnRkRFpXUjNSM1ZXc3hjMU5xU2xoV00wSlFWbFJLVTFJeVNrZGhSMnhVVWxSV1QxZFhlRlpOVlRGellraE9WV0pZUW5GVmJGSnlaV3hzY1ZOdGRGUmlSVll6Vlcwd01WZHJNVWhoUlhoaFVucEdWRlV3V21Ga1IwNUlaRVpPVGxadVFqVldWRVpYWWpGUmQwMVZaR2xTYlhoWFdXMTBTMWxXY0ZkV2EyUnFZa2hDUjFkclVsTmhSVEZJWlVWYVZWWlhVbkpXTW5oclVtMU9SVlpzYUZkaVYyZzFWMWR3UTJSdFZsZFZibFpZWWxkNFYxUlhjekZPYkZWNFZtczVhRTFyV2pCVk1XaHpWR3hLTmxack5WWldSVXBJV2taYWMyUkZNVmRhUlRWVFYwVkZlRmRyVWt0aE1VMTNUVmhHYVZKR1dsbFpiVEUwWTFac05sRnVUbE5TYmtKS1ZrY3hNR0ZHV1hkT1ZGcFdUVlphVUZsVVNrNWxWbFoxVVd4d1RrMUVWa3hXVmxKTFZUSldjMk5GYUdsU00wSnhWRlZrTkZKV1pISmhSVGxvVFd0YVdWWkhOV3RXVlRCNVZXcE9WVTFXV2xCWk1GcFBWbFp3U0dOSGVHbFdSMmQ2Vm10a05GVXlVblJTYkZwVFlUSjRVMWxzVW5OalZsWnpWMnQwVG1KSFVsWldSM2hyWVRGS2RWRnNiRlZpUmtwRVdWWlZkMlF5VGtoalJtUlhaV3RhV1ZkWGVHdFRNVTVIVjI1U2FsSXpVbFJVVnpWdVpWWmtXRTFVVWs5U2JGcFpWVzEwYzFWdFNsWk9WbEphWWtkUk1GcFhlR3RqTVVweVZHMTBWMkpZYUZwV1JscHJUa2RHY2sxSVpGUmlWR3haVm10V2QxZEdjRmhrU0U1cVZqRktTVmxWV2tOaFIwVjRWbGhzV0dKR1NsQldSM014WTJzeFdWSnNUbGRTYmtKTVYxZDBiMkl4VGtkYVJtUmhVa1ZLY0ZWcVFURmxiSEJXVjJ0a2FHSlZjRlpaVkU1elYyeGFkRlZzVWxwaE1sSlFXWHBLVjFOV1VuUmtSMnhUVWpOb1VGWnRNSGhqTVU1eVRraG9WbUZzY0hCVVZFNURWREZXY2xsNlZtcFNiWFF6VjJ0ak5XRXdNVlpqUld4VlRWZFNNMWxVUm1GT2JFcDFWR3h3YVZaR1dsVlhhMk40VkRKTmVWWnJaRlZpVlZwWVZGWm9RMDVzV1hsbFIzUlZUVVJHU1ZWdGVHOVZSbVJIVjJ4d1ZtSkdjRE5VYTFwelRteE9jMXBIZEZkV00yZzBWMWR3VDJNeFZraFRibFpXWVd4d1ZsUlhOVU5VTVZKVlVWUldhbEpyTlZkVmJURjNWVEF4ZEZvemNGZFdNMUp4Vkd4a1IyUkdWbk5oUlRWWFRUSm9kMWRYTVRSVE1ERnpZVE5zYkZKR1NsZFVWbWhEVjFaWmVVNVZPVnBXYkd3elZHdG9hMWRzV25SVVZFWmhVbXh3ZGxWdGVHdGtWMFpJWTBVMWFWSnRPVFJXVmxwWFlURnNXRlpyYUZWWFIzaFlXVzE0WVZNeGJGaE9WazVQWWtaR05Wa3dWbmRpUmtwVllraGtWazFxUmxCV1ZFcExWbXhrZFdKR2FHbFNNbWhOVmpGU1IxWXhUbGRVYmxaWVlsaFNjRlpxVG05bFZsbDVaVWM1VkUxWGREVlZNblJ6VjBkS1YyTkdXbFppV0doNldUQmFVMDVzVW5KT1ZUbG9aV3RWZVZacVJsTlpWazV6WWpOa1ZHRnJOV0ZXYkdSdlVrWldjMXBGY0d4V2JFcDRWVzB4YzFZd01WZGlNMmhZWVRGYWNWUnNaRmRXTWtaR1drWlNhVmRIYUc5WFYzaHZZakpOZUZwR1ZsVmlSVFZ4VldwQ2MwNVdVbk5hUlRsV1RXdHdlVll5Y0dGWFIwcElWRmhrVmxadFVreGFSVnBMWkZaV2RGSnNXazVTTTA0MlZqRlNUMlF5VW5KTlZscFFWMFZLVlZsdGN6RmpiR3h5Vlc1T1ZXSkdjREJaYTFaM1ZEQXhjMk5HY0ZWV2JXZ3pWbFZrUjJNeFNuRlhiRlpPWWxob1RGWldXbXRVTVU1SVVtdHNZVkpyTlZSYVZ6RTBaVVprY2xkdGNHeFNNSEJKVlRJMVYxWnRTbk5qU0VaYVlUSm9kbFpyV210ak1YQklVbTF3VGxkRlNscFdhMlIzVVRKR1IxZHFXbWxTUlZwWlZXeGFkMUpHYkhGVGF6bFRUV3hhUjFkclpHOVdNREI1WVVod1ZsWnNXbkpaZWtwVFZqSkZlbUpIZUZOU1ZuQnZWbGR3UjFsVk5YTlViR2hxVWtWS2IxVnNVbk5sUmxaWFZXMUdhVkpVUlRKVmJYQmhWbFV4ZFZGc1RsVldWbFV4V1RCYVQxWnNTblJqUms1T1lsZGtObFpzWkRCaGF6VllVbTVTVm1KSGFFOVdhazV2WTBac2RHVkZkRTVpUjNRMVdsVlNVMVpyTVZsUmJHeFhUV3BXVUZkV1dscGtNRFZKV2tad1YySlZNSGhYYTFwaFlqRkplRkp1VWxCV00wSlVXVzB4YjFOV1pGZFhiWFJQVWpCd1IxVnRkRzlYUjBaeVYyNUNXbUpHVlhkYVJFWnpWakZzTmxadGRGZE5SRkY0VmxSR1UyRXhaSE5YYTJoUVZrVTFWbFJYY0Zaa01WRjRXa1U1VDJKVmJ6SlZWM00xVlRGS05tSklaRlpXYkZwMlZWUktTbVZXVW5KWGJGcHBZa2hDYUZaR1VrZFpWVEZIV2toT1dtVnJXazlWYWtKelRteFZlVTFWT1ZkaVZYQllWakkxVTFkdFJYbFZiR2hhVm5wR1ZGVXdaRXRUVm1SMFlrZHNWRkl5YUZSV01WcFhZakZGZUdFemFGUmliRXB3VlRCVk1XRkdXbGRXYTNScVZtMTRlRlV4VWtkaVIwcFhVMnRzVm1KVVZsaFpWRVpQVW1zeFdWRnNWbXhoTTBKSVZrY3hlbVZHU2xoVWExWmhVbnBHV1ZWc1VrSmxWbHBJWkVaT1ZHRjZWbmxaYTJNeFZXMUtkRlZ0T1ZaTlJscE1WVzE0YzJOV1RuSlBWVFZYVFVoQ1dsWnRNREZXTWtWNFUycGFhVkpHV2xsVmJGcDNWRVpzY2xkdVpHdFNNVnBKV2xWYWQxUnJNVlpqUkU1WVZqTkNTMVJXV25KbFJscHlZVWRvVkZJeFNtRldWM2hoWkRKUmVHSklTbUZTYkhCVFZtMHhNRTVXY0ZaYVJ6bG9ZWHBDTTFSc2FFOVhhekI1WlVWMFZXRnJXbnBXYkdSS1pXMUdSMUZ0YkdsaVJXdDVWbXRTUzJReFVuUlZXR1JRVjBWS1ZWbHNWVEZXUm14elZtMUdiRlp0VW5wWlZWWXdWMnN4VjFkcmNGWk5hbFpvV1ZSS1MxZEhWa2xUYkdocFVqSm9UVll4VWt0VE1VNVhXa2hTV0dKR1dsUlphMmhEWTFaYVZWSnRjRTVXVkVaSVdUQmFjMVpIU25OWGJXaFhUVVp3U0Zrd1dsTk9iRVpWVldzNWFHVnJWWGxXYlhoVFdWWk9kRk51U2xSaWJIQmhWRlZhWVZaR2NFaGxTRXBzWWtad01WWlhNVWRXTWxaelZtcE9XRll6UWxCVmVrWnlaVVphZFZWc1pHbFdSVnAzVmxkd1IxbFhUbGRqUlZwaFUwVTFjbGxzVm5kbGJIQldWMnRrYUZKck5VZFZNakYzVm14YVJtSjZRbHBXVjFKUFdsZDRVMlJHWkhKalIyaHBWa2R6ZDFacldtRlZNbEYzVGtoc1ZXRnNjSEJhVjNSTFZERnNXRTFFVm1wU2ExcFhXVlZXVDJGVk1YSk9WV1JYVm5wV2FGWXljM2RsUm1SeFVXeG9hVkl3TVRSV1JsWnJVMjFXYzFSdVVsVmlSbkJ3Vm0xNGQwMUdaRmhrUjNSWFRXdGFNRlpYZEc5aFZrNUhZMGhDV21FeWFIWldWM2h6Vm0xR1JsUnNjRTVXVmxreFYyeFdhMkl5Um5KTlNHUlBWbnBHVTFac1pGTmhSbkJXV2tVMWJGWnNjREZXYlhSM1lVZEtjMU5zU2xkU1JYQXpWa2N4VW1Rd09WbFJiRkpwWWxaS2RsWlVRbGRUTVVwellraEdWR0Y2YkU5V2FrSjNWMVphZEU1V1pHaE5WVzh5V1d0U1YxZEdTbGRqUlhoYVlURndNMXBGWkZkVFIxWkhZMFUxVGxaWVFYcFdNV1IzVTJzeFYyRXphRlJpYkZwVVdXMDFRMkZHV25WalJrNXFVbXhHTlZrd1ZuZFVNa3BYVm1wYVYxSnNTbWhXUnpGWFpFWlNWVk5zVWxkTmJFcEZWMnRTUzFJeFRsZFNia3BYWWxkNFQxbFljRk5PUm1SWVpVZDBWMDFzU2xsV1YzUnZWVVprU0dWR2NGWmlXRkl6V1hwR2EyUkZNVlZWYld4VFlsaFJNbFpzWXpGUk1rWldUVmhHVjJKWVFsZFpiRkpYVTBad1dHVklaRmhTVkZaSFZXMHhSMkZYUlhoaWVrcFhUVzVvY1ZSVlpFZFdhemxKWTBaV1YxSnVRbEJYYkdRd1Vtc3hjMVJzYUd4U1JrcFVWRlprTkZkV2NFWmFSRkpvWWxWd1NsbFZXa3RYYXpGeFVWUkdWVlo2UmtoV01GcFhaRWRXU0dOSGJGUlNNbWN5VmpKMGEwMHdOVmRWYkdSWVltczFjMVZzYUVOalJteDBaVVYwYWsxWGREVlVWVkpIWVZaSmVGTnJWbFpOVmtweVdWY3hWMlJGT1ZWWGJGWnBWMFZKZVZkV1dsZFNNVTVYVW01U1VGWXpRbFJXYlhSMlpWWlplRlZyT1ZkTmJFcElXVEJhYjFReFdrWlRia0pWVmtWS00xbFhlR0ZYUlRGWFdrZHNWMDFJUWtwV2JUQjRaREpGZUZOWWJHeFNSWEJoV1d4b2JrMUdWbkZUYXpsWVZteEtNRnBWWkhOWlZURkdZak5vVjAxV2NIRmFWV1JMVW0xS1NWSnRkRlJUUlVwU1YxWmplR0ZyTVhOVWJHaHJVMFUxY2xacVJrdFRWbHAwVGxoT2FGWXdjRmhXTVdoclZrWlplbEZZWkZWTlYxSlFWRzB4UzA1c1JuSlBWbVJUWlcxNE0xWldXbGRpTVVWNVUxaHNWV0V4Y0ZkWmJYaDNXVlpTVlZKdFJrNVNiVko2VjFod1IxUnNTWGRpUkZwV1RXcEdVRlp0TVV0V01XUjFWV3h3YUUxc1NsbFhWbU40VlRGT1NGTnJiRmhpVjNod1ZUQmtiMVV4WkZkV2JUbFNUVmQwTkZWc2FITmlSa2w1WVVoR1ZWWkZSWGhaYkZwSFZteHdSMVJ0ZEdsU00xRjZWbFJKTVZReVJsWk5XRXBQVjBkNFZWWnFUa0prTVZwRlVWUlNiR0pHU2xaV01uTTFWVEZLYzFaWWJGWk5WMUp5VlZSS1VtVldTbkppUmtwb1RWWndkMVpHWkhwTlIxWkhZa2hPWVZKdFVuSldha1pMVTFaUmVHRklUbGhXYTNCNVdUQm9UMWRIU2xWU1ZFSmFZVEZ3ZVZwWGVGZGtWa1owWWtVMWFHSkdjSGhXYlhoWFlUSkplVlZZYUdoU1ZuQldXVzF6TVZsV1dYZFdWRVpQWWtkU1NsZHJWazloUmtwMFpVUkdWMUl6UWtSWlZ6RkxWbXhrZFZKdFJsTldWRlpNVmtkd1IyTXlUbGhUV0hCaFVtdEtUMVJWVWtKbFZscElaRVpPVkdGNlZubFphMk14VlcxS2RGVnRPVlpOUmxwTVZXMTRjMk5XVG5KUFZUVlhUVWhDV2xadE1ERldNa1Y0VTJwYWFWSkdXbGxWYkZwM1ZFWnNjbGR1Wkd0U01WcEpXbFZhZDFSck1WWmpSRTVZVmpOQ1MxUldXbkpsUmxweVlVZG9WRkl4U21GV1YzaFdUVmRXYzFwR1pHaFNWR3h6V1d0a2JtVnNWbGhOU0dob1VteHZNbFp0TURWWGJVVjNUbFYwVldGclducFpNV1JLWld4d1IxRnJOVTVTUlVZMVZtdGtNRlV4VW5KT1dFcHBVbnBXVTFsdE1WTmlNVlYzVm10MFUySkhlSGhWTW5NMVZHeFpkMk5HYkZkaVZGWllXVlJHUzA1dFNrVldiR2hUVm01Q1RWZFhkR0ZrTWxKSVZtdG9iRkp1UWs5VVZsWjNUVEZrV0dORmNFNVdiWFEwVm0xMGIyRkdUa2hWYkhCV1lrWlZlRnBYZUd0V01rWkdUMWQ0YVZJeVpEWldWbU14WVRGa2MxcEZXbXBUUlRWaFdXeFNWMVV4YkZkV1ZGSnJUVVJzUmxZeWN6RmlSMFYzVmxoc1ZrMVhUWGhWVkVwS1pWWlNjbGRzV21saVNFSm9Wa1pTUjFsVk1VZGFTRTVhWld0YVQxVnFRbk5PYkZWNVRWVTVWMkpWY0ZoV01qVlRWMjFGZVZWc2FGcFdla1pVVlRCa1MxTldaSFJpUjJ4VVVqSm9TbFl4VWtkaU1WRjVVMnRvVkdKclNsVldhMXAzVkRGc1dFNVZTazVOVjNRMldUQm9ZV0pIUmpaV1ZFcGFZV3R3ZWxWWGVFOVNiRTUxVjJ4d1RsSnNjRlZYYTJRMFkyMVdjMWR1VmxaaVZWcFlXbGQ0VjAweFpGaGpSVGxVVFZkME5GWnROVk5XTWtwVlVtNUNWbUZyV21oWk1WcDNVbXh3U1ZSdGRHbFdXRUkyVjJ4V1YyRXlSbk5hUlZwUFYwVTFZVmxzWkZOU1JteHpXa1U1V0Zac1NqQmFWV1J6WVVaYVdHTXpjRmhXUlRVeldrY3hWMVpyTlZaV2JXeE9ZbGhvWVZaWGVHRmtNa2w0WWtaV1ZHSkhVbk5XYlRGdlUwWldXRTVZVG1oV1ZFSTBXVEJvYTFkSFJYbFZiR2hoVm14d2RsVnRNVXRUVmxwMFpFWk9UbFp0T0hoV01XTjNaVVpaZDAxVldtbFRSVnB5VlRCb1ExVldiRmhqTTJSc1ZteEdOVmxyVm5kVmJGbDNUbFZzV2xaWGFISldWRVpMVG0xS1NWSnRSbE5pVlRRd1YxZDBhMU15VWxkV2JsWllZbGhDY0ZVd1pHOVdWbGw1WlVkMFdsWXdNVFJaTUZwdlZsZEdjbE50T1ZkaWJrSjZWRlphYTFKc1duUlNiWGhUVFVSRk1WWnRNREZXTVVaelUycGFWMkpVYkdGWmEyUlRWakZzVjFaVVVteGlSa3BXVmpKNFExVXhTalppU0dSWFZrVmFjVlJXVlhoU01rNUhZa1pTYVdKR2NHOVdha0poVWpKT1IxVnFXbFZYUjJoeldWaHdjMlZHV2xkVmF6bFdVakJhVjFsclZrdFhhekZJVlc1YVlWSkZXa3hWTUZVMVYwZE9TR1JHWkd4aE1YQTJWakZqZDAxV1ZYbFZibEpWWW1zMWMxVnRjekZoUmxweFVtNWtiR0pIVW5wWGExVTFWR3hKZDFkc2JGVk5WMmhZVmpGYVMyTnNUblZYYkhCT1VtMDRkMVpYZEd0VE1VNUhVMjVXYWxJelFrOVdhMlJ2VVRGa1YxZHRjR3hTTVVZMVZUSjBiMVl5U25OVGJXaFhZbTVDVjFwRVJuSmxiVXBHWTBVNVRsWXphRmRYVjNCUFlURldTRk51VmxaV1JscGhWRlJPUTAxc1VsWldWRVpxVmpCc05WbHJWa3RXUmtwV1kwUktXRlpGU2xoV1ZFcFRZekpGZW1OR1pHbGlSWEJ2Vm0wMWQxWnRVWGhpU0VaVllUTlNZVlJXV21GTlJscDBUVWhvYUZacmJEUldNalZIV1ZaS1dGVnVjR0ZTZWtaTVdYcEtWMUl4U25SaFJsSlRWbGhDZUZac1dsTlRNRFZJVW10b1ZWZElRbFpaYkZwM1VURldjVkZVUms1aVIzZ3dWR3hWTlZSc1NuUmxSbXhWWWtaS1JGbFhNVmRXYlVZMlZHeG9WMkpGYjNsWGExSkNUbGRTV0ZWclZtbFNNMEp6V1d4U2IwMHhXa2hPV0dScllsVmFWMVZ0ZEhOVmJVcFZZa2hHVm1KR2NFeFVWM2hyVmxaU2MxcEhkRk5pYTBwYVZrZDRVMUV5UmxaTlNHUnFVak5DV0ZadWNFZFhSbXh6V2tWMFZGSnNjREJaTUdRd1ZUQXhkVm96YkZoV2VrVXdWR3RhVjFkR1NuSmlSa3BwVmxSV1ZGWkdZekZpTWtsNFlrUmFWV0Y2YkdoWlZFSmhVMnhXV0U1WVRtaFdWRUl6VlRJMVQxZHJNWEZXYkZKYVRVWndNMVl4V2xOWFIwcEhVV3MxYUUxV1ZqVldhMXByWkRKUmQwNUliRlZoYkhCd1dsZDBTMVZXVm5KWmVsWnFVbTFTUjFadE1VZGhSa2wzVm1wV1YySlVWbnBXTVZwTFkyeE9jVlpzY0doaGVsWnZWMVJDWVdReFRrZFhibFpwVW0xNFZGUlVTbXRPVmxsM1ZXdE9UMUpzYkRSWlZWWmhZVlpPUjFkdVNsWmhhMXBvVkd4YWMyUkZNVmRhUlRWVFZrZDRORmRYY0V0TlJteFlVMjVLYWxORk5WbFphMXBoVjBad1JsZHVUbGhTTUhCS1ZrZDRUMVV5Vm5Sa00yUlhUVlp3Y2xsNlNsTldiVXBKVW0xMFUyRXdjRkpYVm1SNlpESldjMVZZYkdsU1dGSnlWRmQwWVZOc1ZsaGtSbVJvVmxSR2VWUnJhRzlYYlVwSVZXeG9ZVkp0VWxSVk1GVTFWMWRLUjJKR1RtaE5NRW8yVm1wSmQyVkZOVWhUYTJSb1RUTkNWMWx0ZEV0alJsSllZMFprYUdKR2NGZFhhMk0xWVRBeFdHRkZhRlpXZWxaNldWWlZkMlF4VG5WVWJIQk9ZV3hhVlZaSGVGZGpNazVZVTJwYVZXSkZTbkJaYlhoS1RXeGFSVk51WkZaaGVrWkhWREZvUTFaR1dsWlhia1pXWVd0d2RsUlVSbGRqYkd3MlZtMW9hVlpyY0ZwV1JscHJUa2RHV0ZOdVRsUmhhM0JoVkZjMWJrMUdXbFZTYm1SWVVtMVNNVlpITVVkV01ERkZWV3BPV0Zac2NIRlViR1JUVmpKR1JscEdTbWxXUjNoNFZsY3dNV0l4Vm5OaE0yeE9Va1phY2xSV2FFTlhiRlY1WTBWT2FWSnNXbGRWTWpWVFYyc3hXR0ZHUWxwaE1sSk1XVEJhVDFaV2NFZFdiWGhwVmtkemVWWnJXbGRWTWxKMFVteG9WV0V5YUc5Vk1HUlRWa1pXZFdOSVRtcFdia0pJVjFST2IyRldTWGRqUkVaWFZucFdhRmxYTVV0VFYwWkhWV3hvYVZJeFNtOVhXSEJIWkRGa1IxVnVSbEppVjJoWVdsY3hNMlZHV1hkV2JHUmFWakZhU1ZaR2FITldNa3B6VjJ0MFdsWjZRVEZVYkZwU1pWVTFWVkZ0ZUdobGJYZzBWbXRhVTFReFZraFNiRnBwVWxWd1lWUlZaRk5rYkhCRlVtdDBWRkpVYkZsWk1HUXdWakpXY2xkdWNGaFdla0Y0VmxSS1UyUkdVblZVYlhoVFlYcFdiMVp0Y0Vka01sWnpXa2hPWVZKVWJFOVZha0poVjFaUmVHRkdaRmhXYTNCWVdUQlNVMWR0Vm5KalJtaGhVbXhhU0ZVd1dtdGtWMFpJWTBVMWFWSnRPVFJXVkVaclpEQXhTRlp1U2xCWFJWcFhWbXRhUzFWV2JGZFdibVJvWWtaYU1GUldWbXRoYlVwSlVXeHdWazFxUmxCV2JYaFBVbTFPUlZOdFJsTmxhMW8yVjFaU1IyUXhaRmRVYmxKVllsZDRWVlZ0TlVOa1JscHlWbTFHV2xadGREUldSM2h2VkRGYVJsTnRhRmROUmxvelZGWmFhMk15UmtkVGF6bG9aVzE0TTFac1kzZGxSMFowVTJ4a1dHSnJOVmRaYTJSUFRrWnNWbHBGWkZoU01WcEhWbTB4YzFSdFJuSlhibHBZVm14d2NWUlZaRWRXYXpsSlkwWldWMUp1UWxCWGJHUTBZMnN4YzFSc2FHRlNWVFZ5VkZkMFlWTnNWbGhrUm1Sb1ZsUkdlVlJyYUc5WGJVcElWV3hvWVZKdFVsUlZNRlUxVjFkS1IySkdUbWhOTUVvMlZtcEpkMlZGTlVoVGEyUm9UVE5DVjFsdGRFdGpSbEpZWTBaa2FHSkdXakJVYkZacllrZEtTVkZzYkZWaE1WcElXVlprUzFac1pIRlJiR2hwVWxSV1RGWkhjRXRVTURWMFUxaHdhRkpVYkZoVmJuQnpaREZaZVUxRVJsUk5hM0JJV1RCYVlWWXlTbk5UYlVaWFlXdHZNRnBYZUZkamJHdzJWbTEwVTJKWWFGcFhWM1J2VmpGT2RGSnVWbFpXUmxwaFZGUk9RMDFzVWxaV1ZFWlBZbFZzTlZsclZrdFdSa3BXWTBSS1dGWkZTbGhXVkVwVFl6SkZlbU5HWkdsaVJYQnZWbTAxZDFadFVYaGlTRVpWWVROU1lWUldXbUZOUmxwMFRVaG9hRlpyYkRSV01qVkhXVlpLV0ZWdWNHRlNla1pNV1hwS1YxSXhTblJoUmxKVFZsaENlRlp0ZUZkaU1VMTVWVzVTVldFeWFGaFpiVEUwWTJ4VmQxcEVRbEppUjFKNVYxaHdWMkZIU2taWGFrSmhWbGRvYUZZeWMzaGtWbEoxVVd4V2JHRXdWak5XUjNCTFZEQTFkRk5xV2xKaGVteFVWVzV3YzJReFZsZFdiVGxTVFd0c05WWkhkR0ZXYlVwelkwZEdWVlpGV21oVVZWcHJZekZzTmxKck5WTk5SM2N5VmxSSmVGUXhXblJUYkdSWVlteEtZVmxVU2xOWFJteFlUVlpPVkZJd2NFcFdNakZ6WVZaT1NHRkdUbGhXYkZwMlZWUkdjbVZHV25KaVJsSnBZa2hDZUZaWGNFZFpWVFZYWTBWYWFGTkZjRk5XYWtaTFUyeHNjbUZIZEZwV2JWSkhWRlpvUTFaWFZuSmpSV1JWWWxoT05GVnNaRTlTVm5CSVRWWm9VMVpGUmpWV2EyUXdWVEZrY2s1WVNtbFNlbFpUV1cweFUySXhWWGRXYTNSVFlrZDRlRlV5Y3pWVWJGbDNZMFpzVjJKVVZsaFpWRVpMVG0xS1JWWnNhRk5XYmtKTlYxZDBZV1F5VWtoV2EyaHNVbTVDVDFSV1ZuZE5NV1JZWTBWd1RsWnRkRFJXYlhSdllVWk9TRlZzY0ZaaVdGSk1WR3hhYzJOV1VuSlViV3hUVFVSVmVGWnNaSGRXTVVaelUxaG9WR0pyTlZsWmJGSkhVMFpTVjFwRmRGUldiRnBaV1d0YVExUnJNVVZSV0d4WFVucFdNMVZYY3pGamJVcEpWV3hPYVdKWWFIaFhWM2hYVjJzeFYxUllaRnBOTW1odlZXcENZVmRXY0VWVWJHUm9WbXMxU0ZscmFIZFdSbHBZVld0b1lWSkZjRXRhVm1SWFUxWlNkR0pIZUZkU2JHOHlWakowYTJNd01IaGlNMnhUWWtkb1VGWnFTalJqUmxKVlUyMTBUbFp0ZUhsWlZWcDNZV3N4U0dWRmJGaGhNbWhVVmpKNFdtVlhWa2xqUmxaVFpXdGFVVmRyWTNoVE1WcElWVmhzWVZJemFGaFVWVnAzVFd4a1dHTkZjRTlTTVVwWVdWUk9jMVZHWkVkVGF6VldWa1ZLVEZwSGVITmpWbEp6VkcxMFUySllhRnBYVjNSdlZERlNXRk5zV2s5V1JYQmhXV3RWTVdWV2JGZFdWRkpzWWtaS1ZsWXljelZWTVVwelZsaHNWazFYVW5KVlZFcFNaVlpLY21KR1NtaE5WbkIzVmtaa2VrMUhWa2RpU0U1aFVtMVNjbFpxUmt0VFZsRjRZVWhPV0ZacmNIbFpNR2hQVjBkS1ZWSlVRbHBoTVhCNVdsZDRWMlJXUm5SaVJUVm9Za1p3ZUZadGVGZGhNa2w1VlZob2FGSlhVbE5aYlRFMFkwWlNWVkZyZEdwTlYzUTFWR3hhVDFReFdsWlhhM0JYVWpOQ1JGWXllR3RTTVU1MVdrWm9XRkl6YUV4V1IzQkhZekpPV0ZOWWNHaFNhMHBQVkZWU1FtVldXa2hrUms1cVlYcFdlVmxyWXpGVmJVcDBWVzA1VmsxR1dreFZiWGh6WTFaT2NrOVZOVmROU0VKYVZtMHdNVll5UlhoVGFscHBVa1phV1ZWc1duZFVSbXh5VjI1a2ExSXhXa2xhVlZwM1ZHc3hWbU5FVGxoV00wSkxWRlphY21WR1duSmhSMmhVVWpGS1lWWlhNVEJUTURWWFlraEdWV0V3TlhCVmFrRXhUVlphV0dOR1pGSmlSVFZJV1RCb2ExZHRWbkpqU0hCYVZtMVNTRll3WkZkVFZrWjBaRVpTVTAweFNqTldhMmgzVVdzMVJrNVlTazVXUm5CdldsZDRkMU14YkhSa1JYUnJZa2QwTTFadGVFOWhNa3BJWkVSYVYySlVWbFJYVmxwaFRteGFXVnBHY0doaGVsWk5WakZTUjFZeVVrZFhibEpPVmpKNFZGUldXbmRsUm1SeVZtMTBhazFzU2pCVk1qVlBZa1pLY2xkdE9WWk5SbHBNV1ZkNFlXUkZNVmxVYlhocFZsWndXbFpVU1RGUk1rWlhVMWhzYTAweVVtaFdiWE14VXpGU2RHTXphRmRXTURWR1YydGtkMkpIU2xWaFJGSlhVbXh3VkZwSE1VZFdiRXB5WWtaS2FWWkhlSGhXVjNoaFV6QXhjMXBHVmxWaVIxSnlWVzAxUTFkV1VuTlZhMDVvVmxSQ00xa3daSGRXTVZvMlVteG9XbUpIVWt4Vk1GcGhaRWRPU0dSR1RrNWliV1ExVmpGamVFNUZOVWRXYkdoVFlUSjRVMWxzVlRGWFJteHpXa1JTVDJKSGVGaFhhMVl3WVd4SmQyTkZiRnBoTVVwRVdXdGFWMVpzVGxsaVJuQlhZbGRvVVZkVVFtRmpNbEpJVTJ0c1ZXSlhhRmxWYlhSeVpVWlZlRnBJWkU1U01WcDVWREZvUjJGSFZuTmpSWFJhWWxoU1RGUnNXbk5qVmxKelZHMXNVMkpZVVRKV2JHTjRUa1pzVjFKWVpHaGxhelZvV1d0a2IxUXhVblJqZWtaVFZtMTNNbFl5ZEhkWlZURkdZak53V0Zac1duWlZWRVpMVjBaT1dXSkdWbWhoTVhCM1ZtMXdSMWxWTVZkalJWcGFaV3hhYzFadE1XOVRSbFY1VFZSU1dsWXdjRnBaVldoUFYwWmFSazVXVWxwTlIxSkxXbFpWTVZkR1VuTlhiRTVPWWxka05sWnFRbGRaVmtWNVZteG9WRmRJUWxOWmJHaHZZMVpzZEdWRmNFNVdhMXBYVjJ0U1UyRXlTa2hrUkZaV1lsaENSRmxWV21GT2JVcEZVbXhTVjAwd1JqTldiRlpXVGxkT1YxVnNiR3BTYTBwdlZteG9RbVZzWkZkV2JUbFNUVlZ3V1ZVeGFITldWMFp5VjI1Q1YyRnJXbWhVVmxwM1VteHNObFp0ZUZkaVYyaEpWbFJKZUU1R2JGaFRiR3hvVTBVMVdWWnJWVEZXUm10M1drVndiRlpVVmxsV1IzaFhWVEpXZEdWSWFGZE5WbkIyVmxSS1QxTkdUbGxpUlRsVFRXNW9VbGRXWkRCamF6RnpZMFpXVldGNlZsQlpXSEJYVW14YWMxVnRSbFJpUnprelZUSndUMWRzV2xoaFJWSldZa2RTUzFwV1dsTmpWa3AwWWtaa1RsWnRPVFJXTW5SWFlXczFXRlpzWkdoU1YxSlZXV3hvYjJGR2JITmhSemxxVFZkU1ZsWkhlRTloYkVsM1lrUldWV0pIVWxCV2JGcExUbTFLU1ZKc2FGZGlWMmhWVjFSQ2ExTnRWbFpPVlZwVFlsZDRWRlJYTlc1bFJsbDVaVVphVGxaVVJsbFZNbmh2VmtkS1dXRklSbHBXYkZwNVZGUkdjMVl4Vm5WWGF6Vk9Va2RuTWxacldsTlpWbEY0VTJ0b1ZWWkZjRlZXYWtwVFVrWndSVk5yWkZSV2ExcDVWbTB4YzFSdFJqWlZhbEpZVmpOb2NsWnFTbE5YUmxaeVlVWkNXRkl6YUdGV1Z6RXdaREpOZUZwSVVrNVdSa3B3VlcweE1FNXNXbGhPVlU1b1ZsUkdlRlp0TVhkV01VcFlWRlJHV2xZemFIcFdNVnBYWkZaR2RHSkZOV2hpUlhCRVZtcEdVMU5yTlZoVVdHeFdZa2RvVDFZd1dtRldiR3gwWlVkR1RsSnRVbGxVVmxwcllrWmFXR1ZJYUdGU1YyaEVWbFZrUjJOc1NsVlViVVpwVWpKUk1GZHNaSHBPVjA1WFZXeFdWR0pGU205V2JHaERZMVphV0UxSWFGTk5helY2V1RCYWMxWkhTbFpPVm1SV1RVWmFNMVJYZUhkVFJURlpWRzFvVGxkRlNtRldWRWw0VkRKR1YxUnJaR3BTZWtaWVZXeGFkMkZHWkZWU2F6bFlVbFJXVmxWWE1VZFhSa3BaVVZob1YwMXVhSFpXVjNNeFkyczVXVkZzV21oaE1IQjNWbGR3UjFJeVRrZFZhbHBTVmtaS1VGbFljRVpOYkdSWlkwZEdWR0pWY0hsVk1qVmhWMnN4UjFkc1VtRlNNMmg1V2xkNFlXUldWblJTYkdSc1lrWlplbFl4WkhkVU1VMTRZVE5vVjJKc1NsaFpiRkpIWTBaV2NWSnRSbXBXYmtKSFYydG9UMkV5U2xaalNIQmhWbFp3U0ZsVldrOVNiRTUwWTBaa1YxWXlhRTFYYTJONFZERk9SMWR1Vm1sU00xSlZWV3BPVTJReFdrVlRibVJvWVhwV01GWnNhSGRXVmxwSFkwWkNWbUV4Y0VkVVYzaFBWMFp3UmxSdGRFNWhNWEJMVmxaa01GWXlSbFpOV0VwUFUwZG9ZVmxyWkZOWFJuQkhXa1pPVkZKVWJGcFphMXB6VlRKRmVsRnVjRmROYWtJMFZHdGtTMUl5UlhwalJscHBZVEJ3ZDFaR1pIZFdNa1p6VjJ4YVlWSjZiSEpVVm1SdlUwWldXRTVZVG1oV1ZFSXpWVEkxVDFkck1YRldiRkpWWWtaYVNGVXdXbXRrVjBaSVkwVTFhVkp0T1RSV1ZFWnJaREF4UjFacldsQlhSVnBXVmpCa1UxVldiRmRXYm1ST1RWZDRWMWxWVms5Vk1WbDNZa1JXVjFJelFraFpWbHBhWlVaa2NWSnRSbE5XTURCNFYyeGFZV0l4U1hoVWJsSnNVakJhY0ZZd1pHOWxiRmw0VldzNVZrMXJOVWxWTVdoelZERlpkMDVXVWxwaVdGSm9WRzE0YTJNeGJEWlJiV2hYVmtkNE5GWlVSbE5aVjBwR1RVaGtUbEpGY0ZaV01HaERZMVpTZEdSSVRtbGlSVm94VjJ0a2IxWkdTbFpqUldSWVZqTkNURlpFUVhoWFJrNXpZVVprYVdKR2NIbFdWelYzWXpBMVYxcEZXbGhoTTFKd1ZXMDFRMDFHY0ZaYVJGSllZWHBDTkZVeU5XdFhiVVp5WVROb1dGWkZXa3hhUmxwTFpGZE9TRkpzWkd4aVJYQkVWbXBKZDAxV1NYbFdiazVxVW0xb1VGVnFTalJWVmxKVlVWaGtUbUpHU2xwWk1GcDNWREpGZVdWSWNHRldWbHB5VmpKNFdtVnNWblZVYkhCT1ltMWpkMVpzV210VU1sSkdUMVpXVkdKWGFGaFVWbFozWld4a1ZWTnFVazlTTURFMVZsYzFUMVZHV2xWU2JHaGFZVEpvZGxWNlJuTmtSVFZYVkcxc1UwMUVWWGRXUjNoclRrZEZlRk5yYUZCU1JYQlZXVlJLYjFaR2JEWlNibVJUVW1zMVZsZHJaSGRpUjBwVllYcEtWMUo2UmpOYVJ6RkhWbXhLY21KR1NtbFdSM2g0VmxkNFlWTXdNWE5hUmxaVllrZFNjbFZ0TlVOWFZsSnpWV3RPYUZaVVFqTlpNR1IzVmpGYU5sSnNhRnBpUjFKTVZUQmFZV1JIVGtoa1JrNU9ZbTFrTlZZeFkzaE9SVFZIVTFoc1ZXSkhlRlpaYkdodlkwWmtjVkZyZEU1V2JWSllWMVJPYjJGV1NsaGxTR2hoVWxkb00xWlZaRWRqYXpGRlUyeFNWMlZzV2xWWFdIQkhaREZLUjFSc1ZtRlNla1paVld4U1FtVldXa2hrUms1b1lYcFdlVmxyWXpGVmJVcDBWVzA1VmsxR1dreFZiWGh6WTFaT2NrOVZOVmROU0VKYVZtMHdNVll5UlhoVGFscHBVa1phV1ZWc1duZFVSbXh5VjI1a2ExSXhXa2xhVlZwM1ZHc3hWbU5FVGxoV00wSkxWRlphY21WR1duSmhSMmhVVWpGS1lWWlhNVEJUTURWWFlraEdWV0V3TlhCVmFrRXhUVlphV0dOR1pGSmlSV3cwVlRKd1MxZEdXa1pUYTNoYVpXdHdTMXBXV2xOa1ZrNXlZMGRvYVdKRmNGSldhMmgzVkRGU2NrNVlTazlXVmxwWFZtdGFkMU14WkhGUmEzUk9UVmQ0VjFsVlZrOVZNVmwzWWtSV1YxSXpRa2haVmxwYVpVWmtjVkp0UmxOV01EQjRWMnhhWVdJeFNYaFVibEpzVWpCYWNGWXdaRzlsYkZsNFZXczVWazFyTlVsVk1XaHpWREZaZDA1V1pGWmhhM0IyVkZSR2ExSnNaSEpVYlhoWFRVZDNNbFpXWTNoT1IwWjBVMjVPVkZaRldsTldiR1J2VmtaU2MxcEZPVlJTYkhBeFdUQldkMkZIU25OVGJscFhVa1Z3TTFWWGN6RmtSbHBaWTBVMVdGTkZTbEpYVm1RMFVtMVdWMVZZYkdsU1dFSlRWbXBCTVZOV2JGWmhSM1JXVFZWdk1sbHJhRWRaVmtwMFZHcFNXbUV5VWt4YVJscFhaRlprZEdOSGJGUlNNbWhXVm1wS05HRXhiRmhVV0docVVtMW9WbGxYZEV0aU1WcDFZMGhPVGxadFVrZFdNblJQWVZVeGNrNVZhR0ZXVm5CSVdWY3hTMVpYU2tWVWJHaHBVakpvVFZaR1ZtdFdNVlp6VW01U2ExSXdXbGhVVm1oRFpHeGtjbGR0ZEU5U1ZFWkhXV3RvUjJFeFRrbFJiRVphVmpOb1NGUnJXbEpsVjBwR1pFZG9VMDFFVlhoV1ZFbDRZakpLUjFaWWJHaFRSVnBoV1ZkMGMwMHhiRFpSYms1VVVteEtNVll5TVhOV2F6QjVWVzVXV0ZaNlFqUldha0Y0VW0xV1JsVnNTbWxpU0VKNFYxZDRhMVF5Vm5OVWJGcGhVa1pLVDFsVVRtOVNWbFpZVGxVNWFFMXJXbHBYYTJNeFYyMUZlV0ZIUmxwbGEwcDZWVEJrVjFKV1RuSmxSbHBPVWpOT05sWXhVazlrTWxKeVRWVmFUMVpzV25CVVZ6RTBVVEZWZDFacmRHdGlSM1F6Vm0xNFQyRXlTa2hrUkZwWFlsUldWRmRXV21GT2JGcFpXa1p3YUdGNlZrMVdNVkpIVmpKU1IxZHVVazVXTW5oVVZGWmFkMlZHWkhKV2JYUnFUV3hLTUZVeU5VOWlSa3B5VjIwNVZrMUdXa3haVjNoaFZtMUdSbVJIZEdsV1ZGWktWbTB3TVdNeVJYaFVhMmhyVWxWd1lWcFhjekZXUm14V1drWk9WRkl3Y0VsWk1GWjNZVWRLYzFOdVpGZFNSWEF6Vlcxek1HVldVbkZYYld4c1lUQndVbFp0ZEdwT1YwNUhVbXhhYUZKVk5YQlVWM014VWpGYVdFNVhSbGhoZWtJMFZqSndRMWRIU2toVVdHaFZWbGRTUzFwWGVFOWtSbEp6VjIxc1YySklRWGRXTVdRd1lURlplVkp1VWxaaE1taHdWVEJhZDJOR2JISmhSemxXWWtkNFYxbFZWazlYYXpGWFYydHdWazFxVm1oWlYzaEtaVVprY1ZadFJsTldNbWcxVmxaYWExVXlVa2hUYTJ4cVVqSm9XRlJWYUVOTk1XUllaRWQwYWsxRVJrbFdiWGhUVmtaYVNGVnNXbUZXZWtFeFZHMTRVbVZHVm5WWGJXaFhUVVJXU2xkV1ZtOWhNVlY0VTJwYWFWTkZXbWhWYlRGUFRrWnNjbHBGZEd0V2JGb3hWakl4ZDJGV1RraGhSbFpYVFc1b2NsZFdaRTVsUjA1SFlVWldhR0V3Y0haV2JUVjNZekF4VjFwRldsaGhNRFZ3VkZkek1WTkdjRlpYYlhSb1VtMVNSMVJzYUd0WFJsbzJVbTV3V21WcmNFaFdNVnBYWTFaYWNtTkhhR2xXUjNOM1ZtdFNTazFWTVVoV2JrcFFWMFZhV0ZZd1pHOVZWbXhYVm01T1VtSkhkRE5YYTJNMVlUQXhWbU5GYkZWTlYxSXpXVlJHWVU1c1NuVlViSEJwVmtaYVZWZHJZM2hVTWsxNVZtdGtWV0pWV2xoVVZtaERUbXhaZVdWSGRGVk5SRVpKVlcxNGIxVkdaRWRYYkhCV1lsaFNURnBIZUhKa01XUnhWV3hrVG1FeGNHRldhMk14VVRGa2RGTnNhR3hUU0VKaFZtMHhiMVpHVW5OV2EyUlVWbTFTTVZWWE1YZFViVXBaWVVoa1dGWnNjSEpVYTJSUFUwWldjbUpIYUU1aVdHaFNWa1pTUW1Rd01YTlZXR2hXWW14d2IxWnFRVEZUYkZWNVRsZEdhRTFWYkRSV01qVkhXVlpLV0ZWc2FGcFdSVXA2V1RGa1UxSlhTa2hqUjNocFZrZG5lbFpyWXpGa01sSjBVbXhhVTJFeWVGTlpiRkp6WTFaV2MxZHJkRTVpUjFKV1ZrZDRhMkV4U25WUmJHeFZZa1pLUkZsV1ZYZGtNazVJWTBaa1YyVnJXbGxYVjNoclV6Rk9SMWR1VW1wU00xSlVWRmMxYm1WV1pGaE5WRkpQVW14YVdWVnRkSE5WYlVwV1RsWmtWazFHV2pOVVYzaHlaREZ3UjFwSGVGZE5WWEJMVjFaU1ExSXlSbGRUYWxwcFUwVmFXVlp0TVc5V1JtdDNXa1Z3YkZaVVZrbFphMXBEVkd4S1NGa3piRmRTYldnelZrZHpNV050U2tsV2JFcHBWa2Q0ZUZaWGVHRlRNREZ6V2taV1ZXSkhVbkpWYlRWRFYxWlNjMVZyVG1oV1ZFSXpXVEJrZDFZeFdqWlNiR2hhWWtkU1RGVXdXbUZrUjA1SVpFWk9UbUp0WkRWV01XTjRUa1UxUjFWc2FGUlhSM2hXV1d4a2IyTnNWbkZUYWxKT1lrZDRNRmxyVm5kVU1rWTJVbTVvV2sxR1NuSlpWekZYWkVVNVNWcEdWbWxTYTI5NVYxWmFWMUl4VGxkU2JsSlFWak5DVkZadGRIWmxWbGw0VldzNVYwMXNTa2haTUZwdlZERmFSbE51UWxWV1JVb3pXVmQ0WVZkRk1WZGFSMnhYVFVoQ1NsWnRNSGhrTWtWNFUxaHNiRkpGY0dGWmJHaHVUVVphUjFwRmNHeFdiRW93V1ZWa01GVXdNWFZhTTJ4WVZucEdjbFZVU2s1bFZrcHpZVVU1VjAweWFGZFhWekUwV1ZVeFIxcEdhRTVXYlZKelZteGtOR1ZHY0VaaFJVNVdVakJhTUZkWWNFOVhhekI2VVdwS1ZWWldWWGhVYlRGS1pWZEtSbE5zVWxOV1dFRjVWakZTUTFZeFZYbFZiazVvVFROQ1dGbHRlRXRoUmxwMVkwWmFhMDFYZUhoV1IzUXdWMnN4VjFkcVFsZGlWRUkwV1ZaYVNtVkdaSFZTYlVaVFZqRktObGRyWTNoVE1rMTVWbXRhVGxZeWVFOVpXSEJYWkd4a2NsWnRkR3BOYkVvd1ZUSXdNVlZ0U2xsUmJrSlZWbnBXZFZwVlduTmpNV3cyVW14V1RtSkZjRnBXUmxwcll6RnNWMXBGV21sVFJVcFdXbGQwZDJWV1VuUmpNMmhUVmpGS1JsbHJZM2hYUmtwR1YxUktWMUpGY0ROV1YzTjRVbXM1V1ZGc1VsZFdWbkI0Vmxkd1MySXdNSGhXYmtwYVpXeGFiMWxzV2t0WFZsSlhXa1JTYUZZd2NIcFZNbkJMVjJzeGRWcDZRbGRXUlZvelZqQmFhMlJXVW5SU2JHUk9Va1pKZWxZeFdtRmhhelZZVld4a2FGSlhVbE5aYkZKelkxWldkRTVYT1ZOV2JYaDVWMnRXYTJKSFNsWk5WRkpWVFVaYVNGbFdXbHBsUm1SWldrWndWMVl3TUhoWFZsSkxWREExVjFSc1ZtRlNia0pZVlc1d2NtVnNXa1ZUVkVaT1VsUnNXVlpIY0dGaFYxWnlVMnhDWVZaNlFURlpNRnBIVm0xR1JsUnRiRTVoZWxaSVZteGpNVmxXWkhKTlNHaFlZV3RLV1ZsclpFNWxSbEpXV2tWd2JHSkZOVEJXUjNoaFlWWmFjMk5FUWxoV00xSnlWbXBLUjJSR1ZuSmhSMnhVVW01Q2QxZFhkRzlpTVZaellrWmFhRkpWTldGVVZsWlhUbFp3VmxwSE9XaGhla0l6Vkd4amVGVnNXbGhoUm1oaFZqTm9NMVl3V2xkak1WcDBZMGRzVjFadVFYcFdNblJYWWpGU2RGSnNXbEJUUjNoVVZtdGFkMVF4Vm5KaFJVcE9UVmhDZWxsVlZURlVNa1kyVm10YVYySkdTbWhWTW5oMlpERk9jVlJzY0ZkV01taEZWbGQ0YTFOdFZsZFZia1pUWWxkNFdGUldXblpsUm1SeVZtMXdUMVl4V2xoWlZWWnJWa2RLV1dGSGFGcGlSMmgyV1hwR2ExWldVbk5VYlhCVFRVZDNNVlpIZUd0VU1WcHpVMWhzYUZKRk5WbFZiRnBoVlVac05sSnVUbGhXYkVveFdUQmFjMkV3TVVaalJGcFlWak5DVEZaRVNrZFRSbFp5WVVkc1ZGSnVRbmRYVmxwWFkyc3dlRmRyYkdwVFJuQnpXVmh3Umsxc2JIRlRiazVvWWtWc05WbFZVazlXYlVWNVZGUkdXbFo2UmxSV01GVjRWMGRXU0dKSGJHbFNWemsxVmpGU1MwNUZOVWRXV0docVVtMW9XVmx0Y3pGaFJscHhVVlJDYTAxWGVGaFhXSEJYWVRGYWRHRkZaR0ZXVjJob1ZqSnplR05zWkZsYVJuQlhZbFV3ZUZkcldsZGpNazVZVTFod2FWSnJTbkJaYlhoS1RXeGFSVk51WkZaaGVrWlhWREZvUTFaR1dsWlhia1pXWVd0d2RsUlVSbGRqYkd3MlZtMW9hVlpyY0ZwV1JscHJUa2RHV0ZOdVRsUmhhM0JoVkZjMWJrMUdXbFZTYm1SWVVtMVNNVlpITVVkV01ERkZWV3BPV0Zac2NIRlViR1JUVmpKR1JsZHRlRlJTYmtKb1ZrWmtNRmR0VVhoaVJtUmFaV3hhY2xac1ZtRlRWbkJXWVVWT2FGWXdjRmhXTW5oRFdWWktkRlJxVWxwV2JIQXpWakZhVDFkSFNrZFJhelZwVjBVeE5WWnJaRFJWTURGSVZtNUtVRmRGV2xkV2ExVXhWVlpzVjFadVRsSmlSM1F6VjJ0ak5XRXdNVlpqUld4VlRWZFNNMWxVUm1GT2JFcDFWR3h3YVZaR1dsVlhhMk40VkRKTmVWWnJaRlZpVlZwWVZGWm9RMDVzV1hsbFIzUlZUVVJHU1ZWdGVHOVZSbVJIVjJ4d1ZtSkhhSFpVVjNoclZsWk9jbHBGTlZOTlJuQmFWa1JHYjFZeFJuTlRXR1JQVmtWd1lWbFVTbTlYUm5CR1drVjBhbUY2VmxaVmJURnpWakF4U1ZGdWNGaFdSWEI2VlRKek1HVldTbk5XYld4T1RXeEtVbFpHYUhkU2F6VlhZMGhPYUZKVVZsQlpXSEJYVW14YWMxVnRSbFJpUnprelZUSndUMWRzV2xoaFJWSldZa2RTUzFwV1dsTmpWa3AwWWtaa1RsWnRPVFJXTW5SWFlXczFXRlpzWkdoU1YxSlZXV3hvYjJGR2JITmhSemxxVFZkU1ZsWkhlRTloYkVsM1lrUldWV0pIVWxCV2JYaEtaVmRHUlZSc2FGTldiSEJ2VjFSQ2ExTXhUa2RYYkZwVFlsZG9XRnBYZUZkTk1WbDVaVWM1VkUxcmNGaFphMXB2VmxkS1dXRklSbUZXYkZwNVZGUkdhMVl4Vm5WWGJYUk9Va2QzZUZkclZsTmpNa1owVm01U1VGTkhVbFpXYlhoTFRXeHNWMVpyWkZSV2Exb3dWREZrZDFVeFduSmlNMnhYVFZaS1VGWnFTbE5TTWs1SFlVVTVWMUpWY0hkV1JsSkRaREpHYzFkc2FFNVdiVkp3Vm1wQ2QxTldXblJOV0dSb1RWVnNOVnBWVWt0WGJVcFpXbnBDVjFadFVraFZNVnBIWkVaU2MxUnRiRmROTW1jeVZtcEtORkl4UlhkTlZXaFZZbXhLVkZsdGRFdGpiRlYzVmxob2FsSnNTVEpWTW5SaFZESkdObEpyV2xwTlJrcHlXV3hhYTFKV1JsVmlSWFJzVmpOU00xWkVUbXRrYkUxM1pVUldhVTF0VWxOVVZ6RnZaREZzY2xwR1NtRk5WbkJLV1d0b2ExbFdXa2hQVnpWYVZtMU5lRlJWV25kWFJuQklaVWR3YUZaVldqUldSV2hyWkcxRmVHTkZhRk5oYTBwaFZtMDFUMlJXWkZWVWEzUnBVbTE0V2xaWE1UUlpWa3BWWWtSR1ZHRnJWak5YYWtaRFZrWkdXV0ZGT1ZkU1YzUTFWa1JHVTJGdFVYZE5XRVphVFROQ1VWcEVTVFZqUmxJMlZHczFUMkY2VmtaV2JGSmhVMnh2ZDFOcVRscFdWMmhFVld4a1NtVldVbkZTYld4WFRWWnZlRmRyVm1wT1YxWlhZVVZrVkdKWWFHaFpiR2h2WXpGa1ZWUnNUbXBTTUd3MVZHeGtUMVpzU1hsaFJFNVlVbFphYUZrd1pFdFRSbHBXVW0xc2FWWldiM2RXTW5odlZESlJlR0pHYUZWaVdHaHhXbFpXY2sweFpGZFZibHByVFVSc01WcEZVbk5oYlZaMFQwaGtWVmRJUWpKWlZsWkhVMVpHZEU5WGNGTldhMjk1VmpGU1QxWXlVa2RqUm1oUFZrVktjRlJVUW5kaGJGcFlUVlprYVZZd2NFbFdiVEYzWVRGSmVXVkVTbHBpV0djd1ZsWmtSMU5XUm5SVWJFNXBWak5vTmxZeWVFZFJNazVJVTI1U1ZXSnJOWEpXYWtaTFl6RnJlbUpGY0U5TlYzaFdXV3BPYTFWSFNuVlZWRlphVFROQ01sUlZWVEZTVjBsNVlrVktWRkpWY0RKWFZFSlhWVEpTYzJFemNGZGliRXBvVm01d1ZtUXhiSEZVYTNSYVRWWmFNRlp0TUhoaFZrbDRWMjVHWVZKWFVucGFSekZMWXpKV1IxSnRhRlJTVlhCeFZsY3dlR015VFhoalJrcFNZbFJHY2xadWNGZGpWbkJHV2toT2EySlZjREZXUm1SelZVVXhjbFpVU2xWV1Zrb3pWR3BLWVZkV1VsVlhhemxUVW10VmVWVXhaR3RSTWxGNVVtdHNVbUV4V25CVVYzTXdaVVpzYzFwR1pHdFdNVXBKVkRGb2MxZFdTbkpqU0U1WVlsUkZNRmxyV25KbGJGWjFVVzFzVG1Gc1duRldiRlpyWWpKUmVHRkZXbGhpYTBwd1ZXcEdWMUZzWkZWVFZGWnJWakF4TmxaWE1XOWhWMHB6VTJwYVZGWXpRWGRaVlZVMVkxWkdWVmR0ZUU1bGExa3lWa1JLZDFWdFZsWlBXRUpVVmxWYWNWVnFTbTlOTVZaeVdYcFdhR0pXU2xsVVZtUTBZVmRLYzFOcVNscE5ibWN3VmxSR2QxZEdaSFZVYlVaWFRVUlNNMWRXV21wT1YxSlhZVVZrVW1KVWJIRlZiVFZ2VTBac1YxcEVVbWxTVlZwSlZrYzFUMWRzWkVaT1ZGcFlZa2RvVDFsV1ZUUmxWa3BWVjJzMVUxTkZSWHBYYlhodlZHczFjazVWVmxkV1JuQkxWMnBDUzAweGJGWmhSVTVUVmpCc05WWkhjRWRoVmxsNFYycEdZVkpYVFRGYVZscHZVakZPZEdWSFJtbFhSMmg2VmpGU1QxVXlUa2hUV0d4UFZqQTFWMVZxU205Tk1XUkdWbTFHYWxJd2NFbFdiRlpIWVVaYU5sWllaRmhpUjJoTVdXeGFjMWRHVW5SbFIzQnNWbGR6ZWxZeFdsTmtiVkYzVDFoV2ExSkhlSEZhVnpBMFpERlNWMVZ1V21oV1ZWcEtWVmN3TldGc1NsZFRha3BZVmtVMVdGcEZXbmRYUlRWVlVXMXNUazFJUW5GV2JHTjRWakpLV0ZOcmFGZGlXRUp5VldwS05FMXNiSFJsUkZKV1ZqQmFTbFZYTVU5Vk1rcFlaVWh3V0dKRldrUlVWV1JQWkVaS2RWRnRkRlJTVkVaM1ZraHdTMUpyTlhKTlZWWnFVa2RTZEZZd1VrSlBWWEExWVROQ1VHUXlPVXhVU0d4MldqRkZlV0ZJUW1sU01VWnVWbXRvYzJReGNGVmlNbVJvVm5wVmQxZHNaR3RpUjA1d1VWaEdUV1F5T1hKWGEyUkhUVVpzVjJNeU5WcE5NSEJ6VjFab1UySkdjRVpQV0ZaTFRWUkNibFZHVGtKbFJUVlZVMVJLVUZaSFRYaFVWVkpDWldzNU0ySXliRkJOTURBeVZHdFNWazVyYkc1UmJtUm9VMFZLUmxscVNrOU5WMHBZVm01V2ExSjZiRFZYUlZwTFlrWndkR1ZIZUZwTk1VcDNXV3BKTVZreFZraGhTR1JaVWxad2QxbHJaRlpSVjBwMFVtNVNZVmRGTlROWFZtUlBZa2RPTlZOVVpGcFdSemt6VkRJMU1FOVhUalppZWtKT1pXMDVjRkZWYUVOaU1rNUdWVzVhV2sweFdqQlhiR014VFVkSmVsTnRUbFppVmxwMFdXdGtWMkZ0VWtoaVNGcHBZa2hvVWxsVmFFTlpNVXAwWWtoT1lWVlZTbmRaYlRGUFl6SlNXRlZ0ZUdwbFZXc3pWMVpTZG1Rd09YVmtSR3hxWlcwNGQxUnJVblpoVlVaSlVXMDVhbEpXU2pKWFZFNVhaRVp3V0U1VVFtbE5NSEJxVmxjeFYySlhTa2hXYlhCclVqSjRNbGx0ZURSVlYwWkpVVzFPVTJKWGVIcFhiRVpEWWxkU1dFNVhjR3RTTW5neVdXMDFUbUZWT0hsU1ZGcE9Va2hCTTFwc2FFNU9helZGVlZSYVNsb3dTak5aVldoRFVsZEplVlJxUm1sV01Wb3hXa1ZqTldWV2FFZFRiWGhoWWxob2MxZFVUbE5qUjBsNVRsZE9WbEl5YUROWFJWWmhZMGRLU0ZaVlJscE5hbXd4V1hwT1UyRkhTblZWYm5CS1lXNVNiMVF5Y0VKT2JWVjZUVmh3VUdGc1JqVlVNbXhLVVZkT1NHRklaRk5TZW14eFdrWmplR0pIU25WVmJscHFZa2hvVkZkc1pHRmpNWEJZVkdwQ2FGWjZiREZYUlZwRFlqSk9SMlZGWkdoV00yaHpVVlZrVDJNeGJGbFVibkJoVjBVeGNGUjZTa1pPYXpGRlkwUmtiVmRGTURKVWExSldUbXRzYmxGdVpHaFRSVXBHV1dwS1QwMVhTbGhXYmxaclVucHNOVmRGV2t0aVJuQjBaVWQ0V2sweFNuZFpha2t4V1RGV1NHRklaRmxTVm5CM1dXdGtWbEZYUmxoT1ZFSmhWMFZ3ZEZkV1pFOWlSMDQxVTFSa1dsWkhPVE5VTWpVd1QxZE9ObUo2UWs1V1J6bHdVVlZvUTJJeVRrWlZibHBhVFRGYU1GZHNZekZOUjBsNlUyMU9WbUpXV25SWmEyUlhZVzFTU0dKSVdtbGlTR2hTV1ZWb1Exa3hTblJpU0U1aFZWVkpkMWt5TVVkalIxSkpWRmRzVUUxclZUSlVWVkozVGpKYVdVMUVNRzVMVTJzM1EyZHZka3RwUWtSaFIyeHpXa05DVldWWVFteFBhVUp3WW01U2JGb3lWbmxKUTI5MlEybFNhMWxZVW1oWGVXUnFZMjFXYUdSSFZtdFVNalJ1V0ZOQk9VbEVSVEZOYWxrMVRucHJlRTFVUlRkRGFVazNZM3B2TUU1VWIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVW0xc2MxcFJRblZaVnpGc1l6TkNhRmt5Vm5wSmFuUm9UMnBCTm1Vek1YcFBhbEY2VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRWRoVjNoc1FVZHNkVmt5ZURGYVIxWjZTV3AwYUU5cVFUWmxNekY2VDJwUk1FOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oSFlWZDRiRUZIV2pGaWJVNHdZVmM1ZFdONVNUZFpWRzkzVDI1ME9XTjZiekJPUkc5cFFVaENiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoUllVaENZMUp0YkhOYVVVSnFZakkxZW1SSFJuVmtTRTFwVHpKRk5rMUVjRGRtV0UwMlRrUkpOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJWcHdZa2RWUVZreWVHaGpNMDVzWTNsSk4xbFViM2RQYm5RNVkzcHZNRTVVYjJsQlNFSnZZMFZTZGxrelZuUmFWelV3WWpOS1kxVnRWbTFpUjFacVpFZHNkbUpzZUZGaFNFSmpVbTFzYzFwUlFuQmlibEpzWTIxYWFGa3lWbnBKYW5Sb1QycEJObVV6TVhwUGFsRjRUMmxKUVdOSGFIZFNSemxxWkZjeGJHSnVVblpqYkhoVFdsZGFjMXBYVGpCaFZ6bDFXRVpDYjJOR2VFZGhWM2hzUVVoU2VWbFhiREJqZVVrM1dWUnZkMDl1ZERsbVVUMDlKeWtwT3dvS0x5b2dRMmhwYkdRZ1ZIbHdaVG9nYVc1MFpXZGxjaUFxTHdva1pHRjBZVnNuWTNKbFlYUmxaRTl1SjEwZ1BTQXhOVEkyT1RjNU1UazNPd29pTzNNNk5EVTZJZ0J3YUhCRWIyTjFiV1Z1ZEc5eVhGSmxabXhsWTNScGIyNWNVR2h3WEVacGJHVUFibUZ0WlhOd1lXTmxjeUk3WVRvd09udDljem8wTXpvaUFIQm9jRVJ2WTNWdFpXNTBiM0pjVW1WbWJHVmpkR2x2Ymx4UWFIQmNSbWxzWlFCcGJtTnNkV1JsY3lJN1lUb3dPbnQ5Y3pvME5Eb2lBSEJvY0VSdlkzVnRaVzUwYjNKY1VtVm1iR1ZqZEdsdmJseFFhSEJjUm1sc1pRQm1kVzVqZEdsdmJuTWlPMkU2TURwN2ZYTTZORFE2SWdCd2FIQkViMk4xYldWdWRHOXlYRkpsWm14bFkzUnBiMjVjVUdod1hFWnBiR1VBWTI5dWMzUmhiblJ6SWp0aE9qQTZlMzF6T2pReU9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHTnNZWE56WlhNaU8yRTZNRHA3ZlhNNk5EVTZJZ0J3YUhCRWIyTjFiV1Z1ZEc5eVhGSmxabXhsWTNScGIyNWNVR2h3WEVacGJHVUFhVzUwWlhKbVlXTmxjeUk3WVRvd09udDljem8wTVRvaUFIQm9jRVJ2WTNWdFpXNTBiM0pjVW1WbWJHVmpkR2x2Ymx4UWFIQmNSbWxzWlFCMGNtRnBkSE1pTzJFNk1EcDdmWDA9JykpOwoKLyogQ2hpbGQgVHlwZTogaW50ZWdlciAqLwokZGF0YVsnY3JlYXRlZE9uJ10gPSAxNTI2OTc5NTc5OwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0='));

/* Child Type: integer */
$data['createdOn'] = 1527755047;
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}'));

/* Child Type: integer */
$data['createdOn'] = 1527755126;
