<?php 
/* Cachekey: cache/stash_default/documentation\api\php\5f8a64d2a0ae44105ca04ff6e316c68b/ */
/* Type: array */
/* Expiration: 2018-06-05T05:09:08+00:00 */



$loaded = true;
$expiration = 1528175348;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755138;
