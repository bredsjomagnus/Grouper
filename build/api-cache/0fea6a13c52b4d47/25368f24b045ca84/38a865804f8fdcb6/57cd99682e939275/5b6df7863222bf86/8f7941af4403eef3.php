<?php 
/* Cachekey: cache/stash_default/documentation\api\php\579738be7b31639cd52db60fc0ba4697/ */
/* Type: array */
/* Expiration: 2018-06-04T19:28:09+00:00 */



$loaded = true;
$expiration = 1528140489;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755133;
