<?php 
/* Cachekey: cache/stash_default/documentation\api\php\018868efb675c918b12b9b0e022a2c69/ */
/* Type: array */
/* Expiration: 2018-06-04T16:37:39+00:00 */



$loaded = true;
$expiration = 1528130259;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755129;
