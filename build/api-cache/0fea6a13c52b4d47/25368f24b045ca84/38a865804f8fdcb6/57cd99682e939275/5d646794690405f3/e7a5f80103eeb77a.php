<?php 
/* Cachekey: cache/stash_default/documentation\api\php\0793b0ffc9f793a2a81050f146fa6ce0/ */
/* Type: array */
/* Expiration: 2018-06-04T16:59:58+00:00 */



$loaded = true;
$expiration = 1528131598;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755127;
