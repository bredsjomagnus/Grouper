<?php 
/* Cachekey: cache/stash_default/documentation\api\php\b5bb619d0f9a3949f6722d8ac2912a8b/ */
/* Type: array */
/* Expiration: 2018-05-26T22:24:34+00:00 */



$loaded = true;
$expiration = 1527373474;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979193;
