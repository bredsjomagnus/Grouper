<?php 
/* Cachekey: cache/stash_default/documentation\api\php\ac7affdb434628000d243178e7f37295/ */
/* Type: array */
/* Expiration: 2018-05-27T00:45:11+00:00 */



$loaded = true;
$expiration = 1527381911;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979194;
