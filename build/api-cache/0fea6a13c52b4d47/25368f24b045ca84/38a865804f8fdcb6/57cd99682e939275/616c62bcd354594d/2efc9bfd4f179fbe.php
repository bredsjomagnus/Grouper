<?php 
/* Cachekey: cache/stash_default/documentation\api\php\6fd469668791b4e9e5f33634f7a049a0/ */
/* Type: array */
/* Expiration: 2018-06-04T14:45:53+00:00 */



$loaded = true;
$expiration = 1528123553;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755128;
