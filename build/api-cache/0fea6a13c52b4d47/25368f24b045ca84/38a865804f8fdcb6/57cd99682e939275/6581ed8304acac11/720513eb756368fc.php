<?php 
/* Cachekey: cache/stash_default/documentation\api\php\f1d7f1b6580259129c2fc0a00f2821c9/ */
/* Type: array */
/* Expiration: 2018-06-05T00:22:38+00:00 */



$loaded = true;
$expiration = 1528158158;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755145;
