<?php 
/* Cachekey: cache/stash_default/documentation\api\php\a51d0098f07859a305e88e5acadc72f2/ */
/* Type: array */
/* Expiration: 2018-05-27T01:14:48+00:00 */



$loaded = true;
$expiration = 1527383688;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979584;
