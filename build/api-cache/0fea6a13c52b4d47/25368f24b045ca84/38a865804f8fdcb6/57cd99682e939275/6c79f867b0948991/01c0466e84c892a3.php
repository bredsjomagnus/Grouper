<?php 
/* Cachekey: cache/stash_default/documentation\api\php\6dc92590dfd71a8eaf6e95e719c9faf9/ */
/* Type: array */
/* Expiration: 2018-05-26T16:57:49+00:00 */



$loaded = true;
$expiration = 1527353869;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979581;
