<?php 
/* Cachekey: cache/stash_default/documentation\api\php\158822e898cf9c535bfe6d1d07e8aa2d/ */
/* Type: array */
/* Expiration: 2018-06-04T21:31:24+00:00 */



$loaded = true;
$expiration = 1528147884;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755139;
