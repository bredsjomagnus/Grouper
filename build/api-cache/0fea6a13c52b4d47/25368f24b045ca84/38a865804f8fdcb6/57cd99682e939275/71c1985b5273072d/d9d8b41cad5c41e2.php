<?php 
/* Cachekey: cache/stash_default/documentation\api\php\2ab86de592fce34a24dd92fca4116b99/ */
/* Type: array */
/* Expiration: 2018-05-26T23:59:18+00:00 */



$loaded = true;
$expiration = 1527379158;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526970274;
