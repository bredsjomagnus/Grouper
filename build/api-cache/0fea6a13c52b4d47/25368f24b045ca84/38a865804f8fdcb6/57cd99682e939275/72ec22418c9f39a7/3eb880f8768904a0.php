<?php 
/* Cachekey: cache/stash_default/documentation\api\php\a2c3246be2f54901d90232368b4b9a1a/ */
/* Type: array */
/* Expiration: 2018-06-05T06:43:28+00:00 */



$loaded = true;
$expiration = 1528181008;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755149;
