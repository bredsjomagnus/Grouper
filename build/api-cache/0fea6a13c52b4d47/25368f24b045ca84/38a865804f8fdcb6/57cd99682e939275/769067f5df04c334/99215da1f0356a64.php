<?php 
/* Cachekey: cache/stash_default/documentation\api\php\a0497bd269f125c2c0e11e0dbcfb99c1/ */
/* Type: array */
/* Expiration: 2018-05-26T15:18:43+00:00 */



$loaded = true;
$expiration = 1527347923;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979584;
