<?php 
/* Cachekey: cache/stash_default/documentation\api\php\858a2f867baa1acd5556968c3a1e81a4/ */
/* Type: array */
/* Expiration: 2018-06-05T00:30:39+00:00 */



$loaded = true;
$expiration = 1528158639;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755153;
