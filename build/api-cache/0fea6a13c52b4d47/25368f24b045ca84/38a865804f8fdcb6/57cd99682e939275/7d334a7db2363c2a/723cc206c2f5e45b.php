<?php 
/* Cachekey: cache/stash_default/documentation\api\php\f89ae42f9d07c17537bc3b33f4dbe7b0/ */
/* Type: array */
/* Expiration: 2018-06-04T21:44:36+00:00 */



$loaded = true;
$expiration = 1528148676;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755156;
