<?php 
/* Cachekey: cache/stash_default/documentation\api\php\831acfe51df2f921aadf0ce037a66d8d/ */
/* Type: array */
/* Expiration: 2018-05-27T07:24:24+00:00 */



$loaded = true;
$expiration = 1527405864;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979582;
