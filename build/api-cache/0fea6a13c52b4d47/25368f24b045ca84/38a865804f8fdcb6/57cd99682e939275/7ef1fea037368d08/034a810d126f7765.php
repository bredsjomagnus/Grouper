<?php 
/* Cachekey: cache/stash_default/documentation\api\php\c5915486c0ba6c6f7dc4e6ec5f1f3ace/ */
/* Type: array */
/* Expiration: 2018-06-04T20:00:01+00:00 */



$loaded = true;
$expiration = 1528142401;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755143;
