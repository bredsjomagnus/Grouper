<?php 
/* Cachekey: cache/stash_default/documentation\api\php\1e41f65b2a0d3b899f80a258d17fd1e2/ */
/* Type: array */
/* Expiration: 2018-06-04T15:03:07+00:00 */



$loaded = true;
$expiration = 1528124587;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755155;
