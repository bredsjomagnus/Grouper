<?php 
/* Cachekey: cache/stash_default/documentation\api\php\159f2c2adf890f63301bead8bacfefad/ */
/* Type: array */
/* Expiration: 2018-06-04T15:13:28+00:00 */



$loaded = true;
$expiration = 1528125208;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755125;
