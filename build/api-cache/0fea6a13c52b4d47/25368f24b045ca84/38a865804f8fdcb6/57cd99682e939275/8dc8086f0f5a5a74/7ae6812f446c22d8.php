<?php 
/* Cachekey: cache/stash_default/documentation\api\php\b29ac6bb75153db76c31b26527f52fd7/ */
/* Type: array */
/* Expiration: 2018-06-05T07:45:33+00:00 */



$loaded = true;
$expiration = 1528184733;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755136;
