<?php 
/* Cachekey: cache/stash_default/documentation\api\php\c79343ab20418dcdcfe3b49af9202243/ */
/* Type: array */
/* Expiration: 2018-05-26T18:31:17+00:00 */



$loaded = true;
$expiration = 1527359477;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979581;
