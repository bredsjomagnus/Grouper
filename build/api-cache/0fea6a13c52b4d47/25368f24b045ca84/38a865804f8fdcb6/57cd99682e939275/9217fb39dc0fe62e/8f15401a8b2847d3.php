<?php 
/* Cachekey: cache/stash_default/documentation\api\php\f95642a4f96dc79b6049c0a8e8bfb9eb/ */
/* Type: array */
/* Expiration: 2018-06-05T00:03:43+00:00 */



$loaded = true;
$expiration = 1528157023;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755149;
