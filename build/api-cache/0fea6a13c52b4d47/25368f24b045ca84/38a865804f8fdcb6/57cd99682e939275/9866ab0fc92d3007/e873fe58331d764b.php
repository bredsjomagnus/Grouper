<?php 
/* Cachekey: cache/stash_default/documentation\api\php\7b8a43589566e42d22918eb412349b98/ */
/* Type: array */
/* Expiration: 2018-05-27T01:05:13+00:00 */



$loaded = true;
$expiration = 1527383113;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979583;
