<?php 
/* Cachekey: cache/stash_default/documentation\api\php\3b171406232cd9f1553ef77da59149ac/ */
/* Type: array */
/* Expiration: 2018-05-27T04:53:39+00:00 */



$loaded = true;
$expiration = 1527396819;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979193;
