<?php 
/* Cachekey: cache/stash_default/documentation\api\php\3171a462888e9c5e41f70e34753d2229/ */
/* Type: array */
/* Expiration: 2018-05-26T16:00:31+00:00 */



$loaded = true;
$expiration = 1527350431;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526970271;
