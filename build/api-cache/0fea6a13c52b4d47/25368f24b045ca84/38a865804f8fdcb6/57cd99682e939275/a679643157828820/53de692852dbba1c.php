<?php 
/* Cachekey: cache/stash_default/documentation\api\php\666215ad15b34ea2a2aa8f4fcf29ade5/ */
/* Type: array */
/* Expiration: 2018-06-05T06:31:30+00:00 */



$loaded = true;
$expiration = 1528180290;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"99c157169f787d2edf442329a000be44";s:39:" phpDocumentor\Reflection\Php\File name";s:20:"a1a3dbfd9914fea2.php";s:39:" phpDocumentor\Reflection\Php\File path";s:121:"build/api-cache/0fea6a13c52b4d47/25368f24b045ca84/38a865804f8fdcb6/57cd99682e939275/a250a3cb139cd758/a1a3dbfd9914fea2.php";s:41:" phpDocumentor\Reflection\Php\File source";s:62368:"<?php 
/* Cachekey: cache/stash_default/documentation\api\php\9b3eff80efa96bce8feea2f0a16a9918/ */
/* Type: array */
/* Expiration: 2018-06-05T07:06:22+00:00 */



$loaded = true;
$expiration = 1528182382;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjgzNmI4YWI4MzkzYjkxNjhjNzZhZDY4NWUwNTQ3YzNhIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6Ijg5MzI3YTVlYmJkMDY5M2UucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTIxOiJidWlsZC9hcGktY2FjaGUvMGZlYTZhMTNjNTJiNGQ0Ny8yNTM2OGYyNGIwNDVjYTg0LzM4YTg2NTgwNGY4ZmRjYjYvNTdjZDk5NjgyZTkzOTI3NS85ZmIxNzVkYzUzMmNmZDg4Lzg5MzI3YTVlYmJkMDY5M2UucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo0NTYwNDoiPD9waHAgCi8qIENhY2hla2V5OiBjYWNoZS9zdGFzaF9kZWZhdWx0L2RvY3VtZW50YXRpb25cYXBpXHBocFw3ZDU5Y2Y0NzUxNjkwMTM5M2Q4NTkzMjE3OTYwYTJjZi8gKi8KLyogVHlwZTogYXJyYXkgKi8KLyogRXhwaXJhdGlvbjogMjAxOC0wNi0wNVQwNDoxNDo1NiswMDowMCAqLwoKCgokbG9hZGVkID0gdHJ1ZTsKJGV4cGlyYXRpb24gPSAxNTI4MTcyMDk2OwoKJGRhdGEgPSBhcnJheSgpOwoKLyogQ2hpbGQgVHlwZTogb2JqZWN0ICovCiRkYXRhWydyZXR1cm4nXSA9IHVuc2VyaWFsaXplKGJhc2U2NF9kZWNvZGUoJ1R6b3pNem9pY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxJam94TWpwN2N6bzBNem9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJrYjJOQ2JHOWpheUk3VGp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBR2hoYzJnaU8zTTZNekk2SWpWaE5tRmlORFpqTkRreVpHWTNPVEF3WW1aalpUZ3hORE15TTJZNE5HUmhJanR6T2pNNU9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHNWhiV1VpTzNNNk1qQTZJakprWmpZMk16RXpNVGxoTnpsak9UWXVjR2h3SWp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBSEJoZEdnaU8zTTZNVEl4T2lKaWRXbHNaQzloY0drdFkyRmphR1V2TUdabFlUWmhNVE5qTlRKaU5HUTBOeTh5TlRNMk9HWXlOR0l3TkRWallUZzBMek00WVRnMk5UZ3dOR1k0Wm1SallqWXZOVGRqWkRrNU5qZ3laVGt6T1RJM05TOWpOamczT0daallUWTNNelJsWlRrMEx6SmtaalkyTXpFek1UbGhOemxqT1RZdWNHaHdJanR6T2pReE9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFITnZkWEpqWlNJN2N6b3pNekF6TWpvaVBEOXdhSEFnQ2k4cUlFTmhZMmhsYTJWNU9pQmpZV05vWlM5emRHRnphRjlrWldaaGRXeDBMMlJ2WTNWdFpXNTBZWFJwYjI1Y1lYQnBYSEJvY0Z3NE5UUTRaV1V4T1RBMk5XVXdaV1UzWXpBelltTmpNVEkxT1RabE1HTXpaaThnS2k4S0x5b2dWSGx3WlRvZ1lYSnlZWGtnS2k4S0x5b2dSWGh3YVhKaGRHbHZiam9nTWpBeE9DMHdOaTB3TkZReE56b3hNRG93TlNzd01Eb3dNQ0FxTHdvS0Nnb2tiRzloWkdWa0lEMGdkSEoxWlRzS0pHVjRjR2x5WVhScGIyNGdQU0F4TlRJNE1UTXlNakExT3dvS0pHUmhkR0VnUFNCaGNuSmhlU2dwT3dvS0x5b2dRMmhwYkdRZ1ZIbHdaVG9nYjJKcVpXTjBJQ292Q2lSa1lYUmhXeWR5WlhSMWNtNG5YU0E5SUhWdWMyVnlhV0ZzYVhwbEtHSmhjMlUyTkY5a1pXTnZaR1VvSjFSNmIzcE5lbTlwWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFIyRlhlR3hKYW05NFRXcHdOMk42YnpCTmVtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUpyWWpKT1EySkhPV3BoZVVrM1ZHcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJSMmhvWXpKbmFVOHpUVFpOZWtrMlNXcENhbHBVVG1oWlZFSnFUbFJHYVU5VWF6Uk5ha0V5VDBkU2FFNXFWVFZhUkZac1dsUmplVTlYU210SmFuUjZUMnBOTlU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhIWVZkNGJFRkhOV2hpVjFWcFR6Tk5OazFxUVRaSmFra3pUVVJqTkU1RVNYZE5WR1JwVFdwa2FVOVhXWFZqUjJoM1NXcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJTRUpvWkVkbmFVOHpUVFpOVkVsNFQybEthV1JYYkhOYVF6bG9ZMGRyZEZreVJtcGhSMVYyVFVkYWJGbFVXbWhOVkU1cVRsUkthVTVIVVRCT2VUaDVUbFJOTWs5SFdYbE9SMGwzVGtSV2FsbFVaekJNZWswMFdWUm5NazVVWjNkT1IxazBXbTFTYWxscVdYWk9WR1JxV2tSck5VNXFaM2xhVkd0NlQxUkpNMDVUT1doTmFtZDNXbFJSTWxreVJtcE5SRVUxVDFSQmVFeDZTVE5OUkdNMFRrUkpkMDFVWkdsTmFtUnBUMWRaZFdOSGFIZEphblI2VDJwUmVFOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oSFlWZDRiRUZJVG5aa1dFcHFXbE5KTjJONmIzbE5lbGwzVGtSdmFWQkVPWGRoU0VGblEyazRjVWxGVG1oWk1taHNZVEpXTlU5cFFtcFpWMDV2V2xNNWVtUkhSbnBoUmpscldsZGFhR1JYZURCTU1sSjJXVE5XZEZwWE5UQlpXRkp3WWpJMVkxbFlRbkJZU0VKdlkwWjNNMDB5U1hsUFZFVjRUMVJXYlU5RVFtdE9SRXBxVDFSQmVFNVVVVEJhVjFFd1drUlJNazFIU1hwUFF6aG5TMms0UzB4NWIyZFdTR3gzV2xSdloxbFlTbmxaV0d0blMyazRTMHg1YjJkU1dHaDNZVmhLYUdSSGJIWmlhbTluVFdwQmVFOURNSGRPYVRCM1RsWlJkMDFVYjNsTlJHOTVUME56ZDAxRWIzZE5RMEZ4VEhkdlMwTm5iMnRpUnpsb1drZFdhMGxFTUdka1NFb3hXbFJ6UzBwSFZqUmpSMng1V1ZoU2NHSXlOR2RRVTBGNFRsUkpORTFVV1hoT2FrazBUM2R2UzBwSFVtaGtSMFZuVUZOQ2FHTnVTbWhsVTJkd1QzZHZTMHg1YjJkUk1taHdZa2RSWjFaSWJIZGFWRzluWWpKS2NWcFhUakJKUTI5MlEybFNhMWxZVW1oWGVXUjVXbGhTTVdOdE5HNVlVMEU1U1VoV2RXTXlWbmxoVjBaellWaHdiRXRIU21oak1sVXlUa1k1YTFwWFRuWmFSMVZ2U2pGU05tSXpjRTVsYlRsd1dUQmtiMlF4U2toUFYzQnJWbnBHYzFsdE5WTmtiVTV6WlVaT1lWWXhjSHBYYkdSUFRVZEdXRTlZVmxsU2EwcDJXVEJhTkZJeVJsaGxSM2hLWVcwNU5GUlhjSGRPTWs0MllucENUbVZ0T1hCUlZXaERZakpPUmxWdVdscE5NVm93VjJ4ak1VMUhTWHBUYlU1V1lsWmFkRmxyWkZkaGJWSklZa2hhYVdKSWFGSlpWV2hEV1RGS2RHSklUbUZWVlVweVdXcEtUMUV5U2toUFYzQm9aVlZyTTFaSGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlNNbWh2V1hwS2JtRlZPSHBVVkZwT1pXdHJNbE5YY0VkaE1ERnhZVWR3VDFKRmNIRlVWM0JDVFZVeFdGUlliRTVoYTBwMFZHMXdWMkpGTVVoVGJXaE9ZV3RWZVZSc1VrWk9SVFI1VkZoa1NtRnVValpVTW5CT1RsVTVjRk5WUm1wU01tZ3pWV3RqTldGdFVsaE5WM2hwWW14S01sa3llRFJWTVhCWVYyNU9ZVll3TkhkWlZtTTFaRlpvUjFGdE9XcFNibWhJV1Zaa05HSkZSa2hPVjJocFZqRldjRlI2VGs1T2F6RnhVVlJhU21KVlZqVlVNVkphWld4c2NWRlVRazVsYTJ0NFZERlNTbVZHYkRaVVdGWnFVakpvTTFOWGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlRSVXB2V2tWa2JtRlZPSHBVVkZwT1ZrVnNORlF5YkV0aFYxSllZa2hPWVZGNmJHOVpNR1J5WkVacmVWSnRjR2hTTVZZeVZGVmtZV0pHYkZWWGJXaE9Wa1UxY1ZSc1VrdGhWVFZJVlZSQ1QyVlVhRFZVYkZKT1RXczVTRmRZYkU5U01Hd3pWR3RTVjJGc2JGVmFla0pOWldzd01GZFdVbTVOYXpWVldqTmtUMUl4YXpCWGJURlRZV3hzY1ZkWVdrOVdSMUp4VjJ0U2NrNVZOWEZhTTJ4aFZrZDBObFF4VWtwTk1EVlVUMFJTVUZaRlduSlVWRXBMWVVac1dGWllaRTVsYTBZMFYyeFNZV0pWZDNsU1dHeFFWa1pzTmxkWGNFSk5SVEUyVTFSR1VGWkZiRFJYV0hCT1pGZE9TR0ZJWkVwaGJsSTJWREp3VW1WRk9YQlRWVVpxVWpKb00xVnJZelZoYlZKWVRWZDRhV0pzU2pKWk1uZzBWVEZ3V0ZkdVRtRldNRFIzV1Zaak5XUldhRWRSYlRscVVtNW9TRmxXWkRSaVJVWkpWRzVhYTFkRmNIRlhiRTVLVGpKT05tSXphRTloYkZZMlZGZHdkbUZXUWtWUFdHUm9VMFZHYmxFeWF6UmpWV3hHVkcxb1drMXRhSE5aVkVwWFRsVTVjRkZ0Y0ZwV01EVjJWMnhOTldWdFVraFNibkJvVW1wc2NsZHNaR0ZoUjFKWVpVUkNUVTFzU2pKWFZFNVhaRVp3V0U1VVFscFhSa3AzV1dwSk1Wa3hiRmxSYmtKWlUwVktkbGt3V2pObFJURTJVMjF3V21Wc1JqUlhWM0JxWlVac2NWRnRjRTVpVld0NlZEQlNhazFyT1VoVmJXeE9WakF4TmxkV1pFcE5WVEZZVTFSV1RsRjZhRzVUTW1zMFV6QjROV0l5WkZkVFIzZ3pWMnhTZGxveGJGbFRibXhhVjBkMGJsTXlhelJUTUhnMVlqSmtVMWRIYUROWlZtaExZVWRTU0dKSVdtbGhiVGx1VkZkd1FtVkZPVVJOU0dSUFZYcENOVlJxUmxKa01EVkZZbnBHVGxaSE9UUlVWazU2WkRBeFJXSXpaRTVSTUVaNFZFaGtkbE13VG01aU1uUnBVbnBzYjFkclpGZGhNR3hGVFVka2ExTkZiM2hYYkZKNlV6QndTRlpxVW1wU01uZzFWMVpvVTJOSFNYbE9SMlJSVlRCR05GUnNVa3BOTURFMllYcEtUMkZ0VGpSVU0yUjJVekJ3U0ZWdGFHdFNNRlp1VlVaT1EyRkhUblZUYldoc1ZUSmtkMVF6WkhaVE1IZzFZakprVWsxdGFIZFphMlJTV2pGYVNXSklaR0ZXUnpsdVdXcEtTMk5XY0ZoVWFrSktVVEk1TWxFeWJGTmhNV3haVlcxb1dHVlhValZYYkdoVFRWZE9kRTVITlZsVk1FVTFVMVZvVjJSWFRYbFdibXhvVmpCYWVsbFdhSGRpUlhSSVUyMW9hazFzVlhsVWExazFZVEZ3V0ZSdVdtRlNNVloyVTJwR1UwNXRTWHBqUlRWc1lsUnNkMWRVUW10aU1sRjRVMnRvVUZZelFuSldibkJIWXpGc2RFNVdUbXRpVlRWNldsVmFUMWxXV1hoalNIQllZa2RTVUZSVlpFZFhSVGxaVm14c1UyRXdjREpYVkVKaFRrWkplVkpzYUd4U00yaExXVmN3TlU1R1VsaGpTR1JQVFdzME1sbHVjRU5VYlZaMFQxaENVbFpYYUVSWmFrcFBVbXhXZFZkc2NFNU5WbTkzVmpKNGFrMVZNVWhUV0hCVVlsVTFWMWxzV21Ga1JteHlXa1prYUdKV1NrbFphMmhoWVZkS1NXRkdTbHBXVjJoRVYxUkdTMlJIU2tsVWJVWldWbFZ3ZVZkWGNFdFVNVVY1VTJ0b1VGWXpRbTlhVmxaeVRURmFTR05FUW14aGVteDRWa1pTVjFWSFJsWmlSVXBhVFVkU2RscEVSa3RUUlRsWVkwZDBWMlZyV25wWFZ6QXhWVEpTZEZSdVRteFNhelZvVm1wR2QyVnNaSE5hUlRsT1VqQmFXVlF4YUZkWFZrcHlVMjVhV2sxR2J6QlZha3BIVjBkV1NHVkZTbE5OYldoMlYxaHdTMkp0UmxaUFNIQlZWa1p3VDFwWGRISk5iRTVZWTBoS1RsWlVWbFpXUnpFMFZHc3hjMWR1UmxWV1ZrcExWRmR6ZDJWV1NuUmlSbkJYVWxWV05WWkhkRk5pYlZGNFlUTnNWRlpGV2xCYVYzTjNaVlprYzFWclRtaFNia0l3Vld4b2MxTnRSblZWYWxwVlRXNUNUMVJzVlRWalJrNVdVbTF3VTAxdFozcFdWM1JxVGxkR2RGVnNhRTVXTTJod1dXMTRTMDFzYTNsbFJGSldUVmhDV1ZZeU5VOVpWbGwzVGtoa1dsWnRUVEZhUmxwdlVqRkdkRTlYY0ZOaWJXaEpWMVphYTA1SFNrWlNhMmhQVmpKb2NGWnFSbGRqUmxJMlZHczFUMkY2Um5oVlZsSmhVMjFHZEZWdVFsVmhNbEpQVkd0YWQxSldhM3BpUlRWc1lrVndlbFpHVmxOWlYwcFhZa1pXYUUweFduRlZha3B2VFRGT1dHTkVRbXhoZW14NFZrWlNWMVZIUmxaaVJVcGFUVWRTZGxwRVJrdFRSVGxZWTBkMFYyVnJXbnBYVnpBeFZUSlNkRlJ1VG14U2F6Vm9WbXBHZDJWc1pITmFSVGxPVWpCYVdWUXhhRmRYVmtweVUyNWFXazFHYnpCVmFrcEhWMGRXU0dWRlNsUlNWWEIyVjJ0V2EySnRSbFpQU0hCVlZrWndUMVpyVm5OT1JsRjVZa1YwYUZZeFNsbFphMmhQV1ZaR05tSkhPVnBOUjFKNVdrVmFjbVZXU25SalIyaFRUVlpaZVZaR1ZtdFpWMHBIWWtaV1dHSlhhRTlXYTFVeFkxWlNjMVZyZEdoV1ZGWkpWbFpTUTFReVZsVmhSRlpWWWtaS1QxUlhjelZUUm1SWllrVTVVMDFIZDNwV1IzUlRWakpHYzJKR1ZtRmxhMHBPV2xkemQwMUdaRmRWYlRWT1lYcFdWbGRxVG10VU1VbDRZWHBDV0dKVVJsUlpWM2h6WTFaa1dWZHJPVmRTTVVwNFZqSjBVMk5yTlZaT1dFWmhUVEo0YUZaclpEQk9iRkY0Vld0d1RrMUVWbFZVTVdONFYyMVdjbU5JU2xWaVJrcDZXV3hWTVZOR1VsbGlSVFZvWVRGd2VWWkVRbE5SYlZaR1pVUmFZVkl5ZUZCVmFrRjNUVVprY2xWdGNHeFdWRVV5VmxjeE5GUnNTa2RqU0ZKWVZteEtlVnBHWkU5VFIwWkpXa1Z3YUdKc1NUSldSRXAzVlcxV1JrOVlRbFJXVlZweFZXcEtiMDB4Vm5KWmVsWm9ZbFpLV1ZSV1pEUmhWMHB6VTJwS1drMXVaekJXVkVaM1YwWmtkVlJ0UmxkTlJGSXpWMVphYWs1WFVsZGhSV1JTWWxSc2NWVnROVzlUUm14WFdrUlNhVkpWV2twV1J6VmhZVEZrUm1OSVJsaGlSVFZMVkdwS1QwNXRTWHBoUlRWWFVsZDNNVlpFUWxOa2JVWlhVV3RXVUZkSFVtOVZNRlpIWW14RmVXRjZVbXBXVjNoSFZrY3hiMWRyTVhSaFNFNWFWa1Z3V0ZSc1ZUVmpSa1owWTBad1YwMUVWakpXTW5oT1RsZFdkRlZyYUZOaWJrSnZWVzF3YzJOc1pITmFSMFpvVWpGS1dWcFZVa05VVlRGelUycEtXRlpGTlZoYVJWcDNWMFUxVlZGc2NGaFNhM0F6VjFkd1NrMVdhM2hpUm14U1ltdEtXbFV3Vmt0a2JHdDNWMnBPYTAxWGVIaFhXSEJMVkcxV2NtRjZRbGhYU0VKeVdXdFZOVkpYUmtoa1JuQnNZbGhvZWxaRVJsTlVhekZ5VDFWV1dGZEhhRkJaVjNOM1pVWlJlRlZzV2s1TlJGWlpWbFpvZDFsWFJsVmhSelZVVFcxek1GVjZRalJPVjBsNVdrWmtWRkl6WjNwV01uaFRaR3h2ZUdKR2JGUmliWGhoVmpCa01HSnNUWGxoZWxKVVRVaG5NVmxxU210Vk1XUklZVVJPV2xadGFFeFpWV1JUVTBkS1NWZHRiR2hpVkd4MVZrWmtkMUZ0VmtaUFZWSk9VMGRTVUZaWWNFTk9WbEowWlVaS2JGSlVSbmhaYm5CRFZERmFTRTlJWkZWV2F6VTJXa1JCZUZKWFNYcGFSVFZTVFVWYU5GWkZhR3RrYkUxM1ZHMDFhVTF1VW5CVmJuQnpZakZrY2xwR1pHaE5SM2hHVkZWa2EyRXhUa1ppTTJoWVlrWktObFY2UW5kVFJscHhWVzF3VTAxdVp6RldNVnB2VlRKT1NGTlliRTlTTWxKU1ZsUkNSMDVHVW5OVmEzQk9UVVJGTWxaR1VsTlVNbFp6VW1wU1ZVMHlVakpWZWtKM1UwWldkR0ZIZEZOTlJscDFWbFZhVDFFeVJraFVibFpVWWxkb2MxWlVTbXRrTVZGNldraGFWRTFJWnpGWmFrcHJWV3N4ZEdGSVpGcGhNbEpUVjJwR1lWTlhTa2xhUjBaWFVucHNkVmRYY0V0VE1rNVhZMFpvVldGclNrdFZWRWsxVFd4RmVXSkdUbWhOVjNoYVZsY3hiMWRIVmxoVmFsWllZa2RvVkZSV1pFOWtSVFZJVGxac1ZrMUZWVEZWTVZadlZqSlNXRlJZYkZkaWJYaHZWbXBDWVdWc2JGZGhTR1JwVWxoU1NWVXlNVzloYXpGelZsaHNWV0V4YXpGWlZFWjNWMFpTZFZkdFJsTk5WbG95VlRKd1IxVXdOWFJUV0hCcVVsUldjMWxzVW5Oa01XUlZVVzEwYVUxc1JqUlZNblJ2VlVaWmVsRnVTbGRpYmtKSVdYcEdjMlJGTlZkVWJYUnBWbFJXTmxkc1ZtRlVNV3hYVjFob2FsTklRbGxaYTJSVFZVWlNWbHBGWkZoU1ZHeGFWbTE0YzFVeVJYZGpSRXBZVmtWS2FGUnJXa3BsVmtwellVZDRVMDB5YUV4WFZtTjNUbFUxUjFWc2FHcFRSMUpRVkZkek1FMXNiSFZqUlU1VllsWmFNRlF4YUVOVmJGcFlZVVZTV21GcmNGQlZiWGhYWkZaa2MyTkZOVTVXYlRrelZtcEtOR0ZyTVZaTlZXaFVWMGhDVlZsc1ZURldNV3h6VjIxR2ExSnRlSGxYYTFwcllVZEtWMU5yYkZwaE1taG9XVlprUzFOWFJrZFRiSEJYVmpKb1JWWXhVa2RUTWxKSVUydHNWV0pWV2xkV2JGWjNaVlprV0dORmRGVk5WVlkxVlRKMGIxVkdXWHBSYlRsaFZteGFlVlJVUm1GVFIwNUZVVzE0YUdWdGVEUldhMXBUVmpGV1NGSnNXbWxTVlhCaFZGVmtVMlJzY0VWU2EzUlVVbFJzV1Zrd1pEQldNbFp5VjI1d1dGWjZRWGhXVkVwVFpFWlNkVlJ0ZUZOaGVsWnZWbTF3UjJReVZuTmFTRTVoVWxSc1QxVnFRbUZYVmxGNFlVWmtXRlpyY0hsVk1qVmhWMnN4UjJKNlFsWmhhM0JJVmpCa1YxTkhWa1pUYkU1T1lsZG9NbFl4YUhkVE1rcDBVbXhhVUZOSVFsWldhMXAzVkRGd1dHUklTazVpUlRWWldUQlZNVlJyTVZsUmJHeFdUVmRvZGxZeU1VdFdNa3BGVkd4V2FWWkZXbWhXUjNSaFl6RmFWMkl6Y0dGU01GcFVWV3hhV2sxV1draE5XR1JhVmpCYWVWUnNWbGRWTVdSSVZXMW9WMkV4VlhoWmFrWlRWMWRPUjFkck9WTmlXR2QzVmxjd2QyVkdUblJTYmxaV1lXeHdWbFJYTlVOVU1WSnpWbFJXYWxKck5WZFZiVEYzVlRBeGRGb3pjRmRXTTFKeFZHeGtSMlJHVm5OaFJUVlhUVEpvZDFkWE1UUlRNREZ6WVROc2JGSkdTbGRVVm1oRFYxWlplVTVWT1ZwV2JHd3pWR3RvYTFkc1duUlVWRVpoVW14d2RsVnFSa2RrUlRsWVkwWk9hV0pYYUVwV01WcGhZVEExU0ZOcldsTmhNbWhRVm1wS2IyTkdXbkZTYkdScVVteEpNbFpIY3pGVU1rWTJVbXhhV2xkSVFtaFZNakZMVW14T2RWZHNjR2hoTW5RMFYxZDBZVlV5VWxkWGJsWldZa2hDY0ZadGVIWk5WbHAwWkVkMFYwMXNXakJXVjNSVFZERmtTRlZ0T1ZaTlJscElXVEJhVTA1c1VuSk9WVGxvWld0VmVWZFdhSGRaVms1ellqTmtWR0ZyTldGV2JHUnZVa1pXYzFwRmNHeFdiRXA0VlcweGMxWXdNVmRpTTJoWVlURmFjVlJzWkZkV01rWkdXa1pTYVZkSGFHOVhWM2h2WWpKTmVGcEdWbFZpUlRWeFZXcENjMDVXVW5OYVJUbFhZa1ZzTlZsVlVrOVhSa3BYVjIxb1drMUhVa3hWTUZwaFZteEtkR05HVGs1U2JYZDZWakZhVjFReFRuSk9TR3hWWVd4d2NGcFhkSGRWVmxweVdYcFdhbEp1UWtsVVZscHJZVEZhZFZGcmJGVk5WMmg2VmtaVmVHTXlTalpUYkdoWFlsVXhORmRVUW10VE1sSkdUMVpXVW1KWVVsUmFWekZ1WlZaWmVVMUlhRk5OYXpWNldUQmFjMVpHWkVkalNFcFdZV3RhYUZSdGVIZFNiRkpWVm14T1RsWXphRnBYYTFaclRrZEdkRkpzVm1sU2EzQmhWRmR3UWsxV1VsaE5WV1JZVW14YU1GcFZaSGRoUmxwSVpFUlNXRlpzU2tkVWJGcGhZekZLYzFWc1FsZGhNWEIyVmxjMWQyTXdNVmRhU0U1WFZrVmFUMVpxUW5kWFZsVjVUVlJTYUdKVmNFaFZNalZQVjIxV2NrNVdUbUZTYlZKUVZUQmtSMU5XY0VaalIyaHBZa1ZyZVZaclVrdGtNVlowVm10YVVGZEZTbFZXYkZaaFkxWldjVk50T1U1TlZscDVWMWh3VjJGSFNsZFRiR3hWVm0xUk1GbFdaRXRqTVU1eFUyeHdUbUp0WTNkV2JGSkhaREZrUjFwSVZsVmlWVnBZVkZWU1UwMHhaRmRYYlhCUFZqRktXRmxWVm10VmJVcFZZa2hHVm1KVVZuWlZNRnB6VmpGd1JWVnRiRk5XVm5CTFZtdGpNVmxYUlhoYVJWcHFVMFZhV1ZsclZURlRNVkp4VTJzNVQySlZiekpXUjNNMVZURktkR016YkZaTlYxSXpWRlJDTTJWV1VuSmhSMmhVVWpGS1JsWXljRTlSTURGWFdrWmtXazB5YUhCVmFrRjRUbXhXV0UxWE9WaGhla1o2Vm0wd01WWnRTbFZTYTJoYVRXNW9NMVl4V2s5a1JsSnpXa1pPVGxadE9IbFdNblJYV1ZVMVIxWnNhRlZpYkVwUlZtdFdkMkl4V25GU2EzUnFUVmQwTlZwVlVsTlViRmwzVm1wU1ZVMVdjR2hXVjNoaFUxWlNjbVZHU2s1aGJGcFpWMnhrTkdReFdrZFNia3BoVW01Q1dGUlVSa3RsYkdSVlUycFNUMUpyTlVoWk1GcHZWREZaZW1GSVJscGlSbHBoV2tSR2MyTldVbkpqUlRsT1VsUlZlRlp0TURGa01XeFhWbGhrVkdFeWFGbFdiVEZTWkRGc2NscEZPV3BOYkZwSVZXMHhkMkZXV2toa1JGWllWbXh3Y2xaVVNrdFRSbEoxVkcxNFUxSldjSFpXUmxwVFl6RlplRlpzWkZoaGJFcFhWbXBDWVZOV1VYaGhSbVJhVm14d1ZsWnNhRzlYYlVwSVZXdDRXbUV5VWxCWk1XUk9aREpTUmxWdGJGZFdSbGt5Vm1wR1lXSXhVWGxXYmtwcFVsZFNVMWxzVW5OalJsSllZMFprYWsxV2NFbFViRnByWVRGS2RHVkVRbGRpVkZaNlZtcEdTbVZHWkhGWGJVWlRWbFJXUlZkWGRHdFdNVTVYVm01U2JGSXllSEJXYlhSMlRXeFZlRlp0Ums5U2JGcFlWa2QwYTFWdFNrZGpTRUphWWtkUmVscEVSbXRTVmtaMFVtMTRWMkpZYUZwV1JscHJUa2RGZDAxWVJtbFNSbHBoVm10V1ZrMVdXbk5YYm1SWVZteEtlRlZYZUV0VWJVVjRZbnBLVjAxdWFFaGFSRUV3WkRGU2RFNVhiRTVpVmtwTVZsWlNRMUl5U25OVmEyeHBVMFp3Y1Zac1ZURmtNVlpYV2tkMFZHSkZWak5WYlRBeFZrVXhkR1ZGVWxaV2JWSlVXa1ZhUzJSWFNrWmpSazVYVFZWd05sWXhZM2RsUmxsNVZteGthVkp0ZUZkWmJYaDNZMVprY1ZOVVZtbGlSVFZYVmtkMFMxbFZNVWhsUlZaYVlXczFhRlZyWkVkV2JFcDBUbFpTVjFaVVZrVlhhMUpMVkRKU1NGTnJWbFJpU0VKWlZXMTBkMlZzVlhoV2F6bFdUV3R3V0ZscldtOWhNVWw2WVVoR1dsWjZWbEJXUlZwR1pWZEtSbE50Ums1U00yaEdWbFpqTVdFeVJYaFhXR1JxVTBoQ1lWWnRNVk5VTVdSeFVtNWthMVpzY0RGV2JYaDNWR3N4Vm1ORVRsaFdNMEpMVkZWYWRtVldVbGxpUm1Sb1lUQndXVlpxUWxkU01sSnpWRmhvVTJKc2NHaFVWV1EwVWxaV1YxcEhkR2xTTVVZMVZERmpNVlpHV2xaT1ZVNVlZV3RLZWxWcldrZFhSbkJHWTBaS1RsWllRWGRXYWtaaFlUQXhTRk5yYUZWaWEwcFRWbXRrTkZNeFZuVmpSbVJxVFZoQ1NsbHJWazlXUmtwMVVXeHNWV0pIVVRCWlZ6RkxWbXhrV1ZwR2NHaGhlbFpNVjFkd1EwMUdXbGhVV0dSclVsaENVMVJWVm1Ga1ZsVjRWbXM1VW1KSE9UTlphMVpUVld4WmVsVnRhRnBpUmxwb1dsWmFhMk15UmtaalIzUlRZVEJ2ZDFaWE1IaE5SbXhYVTI1S1ZHRnNXbUZaVjNNeFlVWnJkMWR1WkZSU2JIQXhXV3RXTkZVeVZuTlhibkJZWVRKb2VsVlVSbGRYUmtweVlVWkNXRkpzY0c5V2JYaFRWbTFXUjJKSVRtRlNXRkp3VldwQk1XUXhaSEZUYWtKYVZqQndWMVl5TlhOWFIwcElZVVYwV2sxR1dYZFdiR1JPWkRKU1JtTkdTazVTVm5BeFZsUkdWMVF4Um5OaU0yUnBVbFpLVTFacVRsTmpiRlp4VTIwNWEwMVhkRFpaVkU1clZFVXhXVkZxUWxaaVZGWk1WMVphYTFKdFNraE9WbHBUWVhwV1JGZFdVa2RrTWxKSFUyNVdWR0pWV2xsVmJHUjZaV3hXVlZOdVRsSmlSemt6V1d0V1UxVnRSblJsUlZaWVlXdHJNVmx0ZUU5V2JGSnlVMjFHVG1GNlZrdFdiVEI0WXpKR1YxTlliR3hUUlZwVlZteGtVMkZHVWxkYVJYUnJVbXhLZUZWWE1XOVdNbFowWkROb1ZrMVdXblpXVkVwTFUwWlNXV05HV21sU1ZuQjJWbGMxZDJNd01WZGFTRTVYVmtWYVQxWnFRbmRYVmxWNVRWUlNhR0pWVmpSWk1GSkxWMnN4Y1ZGcVVscFdWMUpVVld0YWRtVnNSbkpWYldoWFZsWndNVlpVUmxkVU1VVjNUa2hrVldKclNsTldha3BUVXpGV1ZWRnJaR2xpUlRWWFZrZDBTMWxWTVVsUmEzQldWbnBHZGxsVVJrOVNNVTUxVkd4d1RtRnJSak5XTW5CSFVURmFSMUpzYUdsU1ZFWnpWbXBLVTAxc1dYZFdhemxzWWxaYWVWUXhWbE5oUlRGeFlrVXhWbFpGY0haWlYzaE9aREZrY1ZWdGFFNWlSbXQ1Vm10a2QyTXhaRmRTV0d4clUwZFNXVlZzWkZOV1JsSnhVVlJDYkdGNlJsWlpWVlkwVlRKS2RGVnFTbGROUmxweVZsUkJNR1F3TlZaaVJUVlhUVVJXVGxac1VrdE9SMFp6V2toS2FGTklRazlaYkZwM1ZsWnNjbFZ0T1ZWU2EzQXhXVlZvUzFsV1pFbFJibHBWVFZaWmQxWnJaRVpsYkVaMFRWWk9VMVpZUW5oV2Frb3dZakpXY2s1V2FGaGlSa3BSVldwS05GVldjRVZUVkZacFlrVTFWMVpIZEV0WlZURklaVVZXVmxadFVuSlZNbmhHWlVaT2NWUnNjRmRXTURCNFYydGFZV1F4V25KT1ZsWlRZbGQ0V0ZSVmFFTmxiR1JWVTI1T1VtRjZiRmRaYTFaVFZtMUdjbE50T1ZaaGEyOHdWRzE0VTFJeFZsVlNiV3hYWWxob1dsZHJWbXRPUjBaMFVteFdVbGRGY0dGVVZXUlRaR3h3U0UxVmRHdFNiSEI1VkRGa01GWXlWbkpYYm1SWFRXNW9kbFV5Y3pCa01WSjFVV3hLVjAxc1NreFdWbEpEVWpKS2MxUnNXbFZoTUhCb1ZGVm9RMU5zV2xoTlJGWm9VbTFTUjFSV1VrTldiRW8yVW10b1lWWjZSazlhVmxwaFpGZEtTR1JHVG1obGJGb3lWakZrTkdFeFduUlRXR1JWWW10S1UxWnFTbE5UTVZaVlVXdGthV0pGTlZkV1IzUkxXVlV4U0dWRlZsWldiVkp5VlRKNFQxSnNUbkZXYkdocFVqRktlVll5TUhoVE1XUkhVMjVHVW1KSVFrOVpiR1JUVFd4VmVXUkhPVkpOYTFwSlZsZDBjMVp0U2xsaFNFWmFZa1pLVkZwWGVFOVdiRkp6VkcxMFRtRXhjRXBXUkVadlZqRnNWMWRzVmxkWFIyaGhXV3RrVTFSR2JISmFSVGxxVWpCV05sWkhkRk5oUmxwV1YyNVdWazFXV2xCVlYzaDJaREpLUmxWc1NsZE5iRXBNVmxaU1ExSXlTbk5VYkZwV1lURndjVlJWVlRGa01WWlhXa2QwVkdKRlZqTlZiVEF4VmtaYVZrNVZUbGhoYTBwNlZXdGFSMWRHY0VaalJrcE9Za1Z3VkZZeFdsZGhhelZZVld4a2FsSnNTbE5aYlhoaFkyeGFkV05GWkdwU2JWSjZXVlZXZDFsVk1WbFJha0pWVFZkb2VsbFdXbHBrTVdSWldrWlNWMVpVVm5oV01uQkRUa2RPUjFKc2FHdFNNMEpVVkZjeGJtVldaRmhOU0doWFRWWkdOVlpYZUc5VWJGbDVaVWRvVjAxR1ducFpiWGhUVTBkS1JsTnRiR2hOYm1oS1YxZDBiMlF4VG5OVWEyaFdZV3hhWVZsWGRISmxSbXgwWkVoT1YxSnRkRE5hUlZaM1ZXc3hSbGR1VmxaTlZscFFWVmQ0ZG1ReVNrWlZiRXBZVWxWd1VsZHJVa3BPVmxKSFZHeGFWV0V3Y0doVVZXUTBVMnhTVmxacVFsTlNNSEI0VlZkME5GWkdXWHBSV0dSaFZqTk5NVmt4V2xkV1ZrcHpVVzFvVjFZemFFUldNVkpEWVRKSmVWVllhRlJoTW1oUlZtcE9RMk5zV25WalJXUnFUVmQ0TUZSc1drOWhNa3BXVGxod1lWWldjRkJYVmxwYVpVZE9TV05HYUdsU01VcFJWa1pXYTFJeFpFWlBWbXhYWWtkNFZGbFVRbmROYkdSVlVXMUdUMUpyYkRWVmJYaHZZa1pKZW1GRlRsWmlia0pZV1dwR2MyTXhjRWRhUjNocFZsUldTbFpYTUhoa01XeFhXa1ZhVGxkRlNsWmFWM1IzVWpGU2RHTXphRmRXTURWR1YydGtkMkpIU2xWaGVrWlhVbnBHTTFwSE1VZFdNa1pHVjJ4b2FWWXlhSFpXUm1RMFdWVTFWMXBGV2xoaVJUVndWV3BCZUU1c1dsaE5WVGxYWWtVMVIxa3dVa3RaVmtvMlVtNXdXbFpGV2pOV01WcFBaRVpTZEdSR1pFNU5WWEF3Vm0weE5GWXhTblJTYkZwUVUwZFNVVlZyV25kVU1YQllaRVZhVG1KRk5WbFViRlpQWVZVeGNrNVZaRmRXZWxab1ZqSnpkMlZHWkhGUmJHaHBVakF4TkZaR1ZtdFRiVlp6Vkc1U1ZXSkdjSEJXYlhoM1RVWmtXR1JIZEZkTmExb3dWbGQwYjJGV1RrZGpTRUphWVRKb2RsVXdXbkpsUjBaR1QxZHNVMDFJUWpOV1ZFWlRXVlpTZEZKdVZsSldSVFZoVkZST1EwMXNjRmhqZWtaUFlsVnNOVmxyVmt0V1JrcFdZMFJLV0ZaRlNsaFdWRXBUWXpKRmVtTkdaR2xpUlhCdlZtMDFkMVp0VVhoaVNFWlZZVE5TWVZSV1dtRk5SbHAwVFVob2FGWnJiRFJXTWpWSFdWWktXRlZ1Y0dGU2VrWk1XWHBLVjFKc2NFaGpSbWhUVmtaYU5sWXhZM2hoTVVWNVUyeG9WV0pIZUZaWmJHaHZZMFpzVjFadVNrNU5WM1EyV1RCb1lXSkdXbFZXYm1oYVlXdHdlbFl4V2t0V01rNUlUMVp3VjFKWVFsbFhiRnBoWWpGSmVGWnVVbXhTTTBKUFZGWldkMk5XV25OV2JUbFVUV3hLTUZaWE5WTmhWa2w2Vlcxb1YwMUdXak5aVjNoM1VqRndSVkZ0Um1sU2JrSllWbGQ0YTJNeFZrWk5TR1JPVWtWd1ZsWXdhRU5aVmxKMFpFaE9hV0pGV2pGWGEyUnZWa1pLVm1ORlpGaFdNMEpNVmtSQmVGZEdUbk5oUm1ScFlrWndlVlpYTlhkak1EVlhXa1ZhV0dFelVuQlZiVFZEVFVad1ZscEVVbGhoZWtJMFZUSTFhMWR0Um5KaE0yaFlWa1ZhVEZwR1drdGtWMDVJVW14a2JHSkZjRVJXTVdOM1pVWkplVlZyWkdwU2JFcFZWbXRrVTJOV2NGaE5SRkpzVW14R05WbHJWakJVYkZsM1ZtcFNWVTFXY0doV1YzaFdaREpHTmxSdFJtbFNNbEV3VjJ4a2VrNVhUbGRXYkd4cVVtdEtiMVpzWkRSUk1XUlZVVzEwYVUxc1JqUlZNblJ2VlVaWmVsRnVTbGRpYmtKSVdYcEdjMlJGTlZkVWJYUnBWbFJXTmxkc1ZtRlVNV3hYVjFob2FsTklRbGxaYTJSVFZVWlNWbHBGWkZoU1ZHeGFWbTE0YzFVeVJYZGpSRXBZVmtWS2FGUnJXa3BsVmtwellVZDRVMDB5YUVSV1YzQkxUa1V4VjFwR1ZsUmhiRXBQVm0wMVExTldXblJPV0dSVVlsVmFNVlpYTURWV1ZURjFVV3RPVldKVVJsZGFWM040VjFkT1IxRnRhR2xTVmxsNlZtdFNTMk14VG5OU2JHaFZZVEpvYjFVd1pGTldSbFoxWTBoT2FsWnVRa2hYVkU1dllWWkpkMk5FUmxkV2VsWm9XVmN4UzFOWFJrZFZiR2hwVWpGS2IxZFljRWRrTVdSSFZXNUdVbUpYYUZoYVZ6RXpaVVpaZDFadFJsSk5hMncxVmtkMGEySkdTbGhWYlRsWFlXczFkbGw2UmtkV2JIQklVbXMxVjAxSVFYZFdhMlIzVVRKR1IxZHFXbWxTUlZwaFZGUktORk14VW5GU2JrNVhWakJzTmxkcldrTmhWMHB6VWxSR1dGWkZOVE5hUjNONFVtczFWbFp0YkU1aVdHaEVWbFJDVjFNeVVuTmhNMlJYWWtVMWNsbHJaREJPYkZwMFRsWk9XbFpzYnpKV2JHaHJWMjFHY2s1VmVGaFdSVnBZV2tWYVlXUkZNVmhpUms1T1ZtNUNORll5ZEZkaE1rMTVWVzVTVkdKck5YTlZiWFJoWWpGVmQxWnJkR2hpUmxvd1ZGWm9UMkZyTVZsUmJFNVdWbnBHTTFsV1ZYaGpWbHB4VjIxR1UxWXhTa2xYYTFwclZURk9WMVZzYUdsU2EwcFBXVlJHVm1WV1drZFdiRTVyVFVSU05WWXllSE5XVmxwSFkwWkNWbUV4V25sVVYzaFBWMFp3UmxSdGRFNWhNWEJMVmxaa01GWXlSbFpOV0VwUFUwZG9ZVmxyWkZOWFJuQkhXa1pPVkZKVWJGcFphMXB6VlRKRmVsRnVjRmROYWtJMFZHdGtTMUl5UlhwalJscHBZVEJ3ZDFaR1pIZFdNa1p6VjJ4YVlWSjZiSEpVVm1SdlVqRlplVTVWVG1oV2EydzBWbTEwUzFkR1drWmlla0phVmxkU1QxcFhlRk5rUjFaSVkwZDRWMVl6VGpaV2FrWmhWVEpTZEZacldsQlhSbHB5VlRCb1ExVldiRmhsUldSUFZteEdOVmxyVmpCWGF6RldZMFJDVm1KVVZreFhWbHByVW0xT1NHTkdaR2hOYkVwWlYyeGplRlV4U1hsV2EyUlRZbGhDY0ZaclpEQk9WbVJYVjIxMFZrMXJjRWxXUnpWUFlrWktSbGR0T1ZWV2JFcDZWbXBHVjFZeFpIRlZiRnBYVFVad1NsWkVSbTlXTVd4WFYyeFdWMWRIYUdGWmEyUlRWRVpzY2xwRk9XcE5WbG93V2xWa2QxUnJNVlpYYm1SWFUwaENRMVJyVlRGamF6RlZWMnhrVjFKdVFreFhWekV3VXpKU2MyRXpaRmRpUlRWeVdXdGtNRTVzV25ST1ZrNWFWbXh2TWxac2FHdFhiVVp5VGxWNFdGWkZXbGhhUlZwaFpFVXhXR0pHVGs1V2JrSTBWakowVjJFeVRYbFZibEpVWW1zMWMxVnRkR0ZpTVZWM1ZtdDBhR0pHV2xaVk1uQlRZVVpKZDAxVVdsZFNla1pvVlRJeFIyUkZPVlZWYkZaWFlrVnZlbFpIY0V0VU1EVjBVMnBhVW1GNlZtOVpiRkp6WkRGV1YxWnRPVkpOYTJ3MVZrZDBZVlp0U25OalIwWlZWa1ZhYUZSVldtdGpNV3cyVW1zMVUwMUhkekpXVkVsNFZERmFkRk5zWkZoaWJFcGhXVlJLVTFkR2JGaE5WazVVVWpCd1NsWXlNWE5oVms1SVlVWk9XRlpzV25aVlZFWnlaVVpLV1dKSGVGTk5iV2g0VmtaU1FrMVhTbGRTYkZwaFVqQmFjMVZxUVhoT1ZscDBUbFprVkdKVldqRldWM2hIVmxVeGRWRnJPV0ZTUlVVeFdUQmFUMlJXY0VoaFJsSlRWbGhDU0ZZeFpIZFRNVkYzVFZab1ZHSkhhRmhaYlhoaFkyeFdkV05JVGs5V2JWSkhWakowTUdGV1NuVlJha0poVmxkUk1GWXljM2RsUms1MVdrWndhR0V5ZERSV01WSkhVekpTVjFOdVZtcFNNRnBZV2xkNFMyUXhXa1ZUYm1SVVlYcFdNRlpzYUhkV1ZscEhZMFU1WVZaNlJrOVVWM2hQVjBad1JsUnRkRTVoTVhCTFZsWmtNRll5UmxaTldFcFBVMGRvWVZsclpGTlhSbkJIV2taT1ZGSlViRnBaYTFwelZUSkZlbEZ1Y0ZkTmFrSTBWR3RrUzFJeVJYcGpSbHBwWVRCd2QxWkdaSGRXTWtaelZtNVNUMVpYVW5OWmEyaERWMVpTY2xaclpGcFdNSEI1VmpKd1lWZEhTa2hVV0dSYVZteFZNRnBYZUZOV1ZtUnlUMVpPVTFZelRqVldWRVpyVGtVMVIxTllhR2xTYldoeVZXcE9iMk5XYkhKaFJ6bFhZa2RTZWxsVlZUVlViRXAwWVVWb1ZsWjZWbnBaVmxWM1pVZE9TVnBHYUdoTmJFcFpWMnhhWVdJeFRsZFhibFpVWWtkNFQxWnRlSGRTUmxsM1ZtMUdVazFyYkRWVk1XaHpWREZaZW1GR1dscGlXR2hvVkZWYWExZEZNVmRhUjNoWFlraENTbFp0TURGa01rVjRVbGhrYUdWck5XRlVWRTVEVFd4d1dHTjZSbXBXTUd3MVdXdFdTMVpHU2xaalJFcFlWa1ZLV0ZaVVNsTmpNa1Y2WTBaa2FXSkZjRzlXYlRWM1ZtMVJlR0pJUmxWaE0xSmhWRlphWVUxR1duUk5TR2hvVm10c05GWXlOVWRaVmtwWVZXNXdZVko2Umt4WmVrcFhVbXh3U0dOR2FGTldSbG8yVmpGamVHRXhSWGxWYkdScFVtMW9UMVpxVG05VE1XeFlUbFpPVDJKR1JqVlpNRlpoVkd4YVZXSklaRlpOYm1oSVdWVmFTMDV0U2tWU2JHaHBVbXhXTkZaR1dtdFRNV1JIVkc1U2JGSXpRbkJWYlhSM1pXeGtXV05GT1ZaaVZWcFhWREJvZDFSc1pFbFJiRVphVmpOb1IxcFZXbEpsVjBwR1kwWktWMDFFVmtwWFZsWnZZVEZWZUZOcVdtbFRSVnBvVlcweFQwNUdiSEphUlhSclZteGFNVll5TVhkaFZrNUlZVVpXVjAxdWFISlhWbVJPWlVkT1IyRkdWbWhoTUhCMlZtMDFkMk13TVZkYVJWcFlZVEExY0ZSWGN6RlRSbkJXVm14T2FGWnJiRE5XTW5CaFYyMVdjbFpVUWxaV2JIQXpWVEJWTlZkSFRrZFRiV3hZVWpKa05WWnFSbE5UTWxaMFVteGFVRk5IVWxCVmEyUlRZMVp3V0UxRVVtdE5Wa3A2VmxjMVlXRkdXbFpYYTNCV1ZucEJNVmxYZUV0V01VNXhVMnhvVjFKVVZsbFhhMVpoWkRGa1JrNVdWbEppVjNoUFZGVm9RMk5XV25OWk0yaFhUV3R3V1ZVeWRHOVdNa3BaVVc1S1ZtRnJiekJVVjNoelpFZFdSVlZzV2xkTlJuQkxWbFpqZUZReFZuSk5XRlpvVW5wc1lWcFhjekZWUm1SMFpFVmtWRkpyY0RCWmEyUjNWR3N4Vm1KNlJsZE5WbkJ5VmtSQmVGSnRTa2xTYlhSVFRXNW9VbGRXWkRCU2F6QjRZVE53YWxOR2NFOVZiRkpIWlVac2NWTnVUbEppUlRWSFZUSTFZVmRyTVVkWGJGSmhVak5vZVZwWGVHRmtWbFowVW14a2JHSkdXWHBXTVdSM1ZERk5lR0V6YUZkaWJFcFlXV3hTUjJOR1ZuRlNiVVpxVm01Q1IxZHJhRTloTWtwV1kwaHdZVlpXY0VoWlZWcFBVbXhPZEdOR1dsZFNWemgzVjFaV2ExUnRWbk5WYmxKWVlUQndWRlJXYUVOTk1XUllUVWhvVTAxck1UTlphMmhIWVRGSmVXVkdSbHBXTTFKSFZGUkdjbVZ0VGtsWGF6VlRWa1ZWZVZkWGNFdGpNVVp6Vkd0YVZHSnNjR0ZVVlZwaFZrWndTR1ZJU214aVJuQXhWbGN4UjFZeVZuTldhazVZVmpOQ1VGVjZSbkpsUmxwMVZXeGthVlpGV25kV1YzQkhXVmRPVjJORldtRlRSVFZ5V1d4V2QyVnNjRlpYYTJSb1VtczFSMVV5TVhkV2JGcEdZbnBDV2xaWFVrOWFWM2hUWkVaa2NsTnNVbE5XV0VJeVZqRlNTbVZHV1hsVmJHaFdZVEZLVlZaclpGTldiSEJZVFVSV1QySkdTbGRXVnpWaFlVWlpkMDVWYkZwV1YyaHlWbFJHUzA1dFNrbFNiVVpUWWxVME1GZFhkR3RUTWxKWFZtNVdXR0pZUW5CVk1HUnZWbFpaZVdWSGRGcFdNREUwV1RCYWIxWlhSbkpUYlRsWFltNUNlbFJXV210U2JGcDBVbTE0VTAxRVJURldiVEF4VmpGT2RGSnVVbEJXUmxwV1ZGZHdWbVF4Y0ZoamVsWnFWbXhLVmxaSGVFTmhSbHBZWlVWT1dGWkZTbkpaYWtwU1pVWk9jbUZHUWxkTk1FcDVWbTAxZDFJeVRYaGlTRkpQVm1zMWNsbHNWVEZsYkhCV1YyczVXbFpzYkRSWk1HaDNWMGRLU0ZWc1FsVldWMUpJVmpCVk5WZFdXbk5pUms1WFltdEZkMVl4YUhkVE1WbDVWV3hhVTJFeWFGbFpiVEZ2WTFaU1dHVkhSazVXYXpWWldUQlNRMkpIUmpaaVNHaFdUVlpLVUZaVlpFZFdiVTVJWTBaa1YxWnNjREpXYkZwaFdWWmtSazVXYkZKaVdGSlVXVmN4TkZOV1pGVlRXR2hUVFd4S1NGa3dXbk5aVms1SFkwaEdXbUpIYUZSWmJGcGhZMnh3UjFwSGVHbFdhM0JJVm10amVHSXlSbkpOV0U1WFltdEtWbHBYY3pGVU1WSjBZek5vVDJKSFVsWldNblIzV1ZVeFJtSXpjRmhXYkZwMlZWUkdTMWRHVGxsaVJsWm9ZVEZ3ZDFadGNFZFpWVEZYWTBWYVdtVnNXbk5XYlRGdlUwWlZlVTFVVWxwV01IQmFXVlZvVDFkR1drWk9WbEphVFVkU1MxcFdWVEZYUmxKelZHMXNhRTFYT0hsV2FrbzBZV3N4UjFKc2FGUmliRXBVV1cxNFMyRkdXbFZSYmtwT1RWZDBObGt3YUdGaVJscFZWbTVvV21GcmNIcFdiWGhMVjBkR1IxTnNaR2xTTURFMFYxUkNhMVV4U1hkUFZscGhVak5DY0Zac1duWmtNVmw1WlVjNWFFMXNTakJXUnpWVFlURkplR05HYUZaaGExcG9WRzE0ZDFKc1duSlBWMmhUVFVSRk1WWnRlR3RqTVZaR1RWUmFVMkZzY0ZaVVZ6VkRWVEZTVlZGVVZtcFNhelZYVlcweGQxVXdNWFJhTTNCWFZqTlNjVlJzWkVka1JsWnpZVVUxVjAweWFIZFhWekUwVXpBeGMyRXpiR3hTUmtwWFZGWm9RMWRXV1hsT1ZUbGFWbXhzTTFScmFHdFhiRnAwVkZSR1lWSnNjSFpWYWtaSFpFVTVXR05HVG1saVYyaEhWakZrTUdFeFNYbFdibEpWVjBkb1VWVnNWbUZpTVZwMVkwVmtUazFYZUhsWGExcHJZVEZLZFZGc2JGVmlSa3BFV1ZjeFYxWnRSalpVYkdoWFlrVnZlVmRyVWtKT1YxSllWV3RXYVZJelFuTlpiRkp2VFRGYVNFMVlaR3RpVlZwWFZXMTBjMVZ0U2xWaVNFWldZa1p3VEZSWGVHdFdWbEp6V2tkMFUySnJTbHBXUjNoVFVUSkdWazFJWkdwU00wSllWbTV3UjFkR2JITmFSWFJVVW14d01Ga3daREJWTURGMVdqTnNXRlo2UlRCVWExcFhWMFpLY21KR1NtbFdWRlpVVmtaak1XSXlTWGhpUkZwVllYcHNhRmxVUW1GVFZscElUbGRHYUZZd2NIbFVhMmhyVjBaYWRGUllhRlZXVjFKUVZHeGFUMVpXY0VkalJtUlRaVzEwTmxaclVrcE5WVEZHVDFab1ZXRnNjSEJhVjNSTFZVWndXRTFFVm1wU2ExcFhXVlZXVDJGVk1YSk9WV1JYVm5wV2FGWXljM2RsUm1SeFVXeG9hVkl3TVRSV1JsWnJVMjFXYzFSdVVsVmlSbkJ3Vm0xNGQwMUdaRmhrUjNSWFRXdGFNRlpYZEc5aFZrNUhZMGhDV21FeWFIWldWM2h6Vm0xR1JsUnNjRTVXVmxreFYyeFdhMkl5Um5KTlNHUlBWbnBHVTFac1pHOVNSbkJYV2tWd2JHSkZXakJhVldSM1lWZEtSbU5FVGxkTmJtaDJWa2N4UjFack9VbGlSazVYVW01Q1VGWnRkRzlSYXpCNFlUTndhbE5HY0U5V2JGSkhVbXhzY1ZOdVRsaFdhM0JZV1RCak5WZHNXa1pqUm1oaFZteHdkbFZxUmxka1IxWklZMFUxVGxaWVFuaFdiWGhYWWpGTmVWVnVVbFppYkVwd1ZXcE9VMkZHV1hkV2JtUm9Za2hDU0ZkclVrTlpWMHBIWTBaa1ZtSlVSbEJXYlhoS1pWZEdSVk5zY0dsV1JWcFpWbXRTUzFVeFpFWk5WbWhwVWpCYVdWVnNhRU5XTVZsNVpVYzVWVTFFUmtkVU1XaEhZVlV4ZFZWdGFGcGlSbHBvV2xaYWEyTXlSa1pqUjJoWFZrZG5lbFpFUWxOWlZsSjBWbTVTVlZaRmNGVldibkJYVWtac2NWTnJPVk5pUmxveFZqSjRkMVJyTVZkaU0yUlhUVzVvY1ZSV1ZYaFRSazVaWTBaU2FWWlVWbGhYVjNoaFdWZFNSMkpJU21GU2JWSnZXV3hhUzFOV2JISmhSMFpvVmpCd1NsbFZXa3RYYkZwWVlVVlNXRlpGV2xoVk1WcFBaRlprZEdOR1RrNVdiVGg0VmpKMFYySXlUblJTYkZwUVYwVmFZVnBYZUhkak1WSlZVVmhrVG1KR1NubFdWM2hMVkRKRmVXVklWbFpXZWxaeVdWVmFUMUpzVG5KWGJIQm9ZVE5DVVZaR1dtdFRNV1JIVjI1V1YySllVbFJhVnpFelRWWlpkMVp0UmxSTmEzQklXVEJvVTJKR1NYcGhSMFpWVmtWYVRGcEVSbk5qVms1VlVteHdUbFpzY0VwWFZsWnZZVEZrVjFOdVNsUmhiRnBoV1Zkek1WSkdiSEphUlRsclZteGFlRlp0ZEV0Vk1ERlpVVlJDV0ZkSVFreFdha3BUVm0xS1NWSnRkRk5oTUhCU1YxWmtlbVZGTUhoVldHeHBVbGhTY2xSWGRHRlRiRlpZWkVaa2FGWlVSbmxVYTJodlYyMUtTRlZzYUdGU2JWSlVWVEJWTlZkWFNrZGlSazVvVFRCS05sWnFTWGRsUlRWSVUydGthRTB6UWxkWmJYUkxZMFpTV0dOR1pHaGlSbG93Vkd4V2EySkhTa2xSYkd4VllUSlNlbFpWWkVkamJVWTJVMjFHVjFKVVZsQldSekY2WlVVMWMySkVXbGhoTTBKb1ZGVldkbVZzWkZkV2JUbFNUVlZ3V1ZVeGFITldWMFp5VjI1Q1YyRnJXbWhVVmxwM1VteHNObFp0ZUZkaVYyaEpWbFJKZUU1R2JGaFRiR3hvVTBVMVdWWnJWVEZXUm10M1drVndiRlpVVmxsV1IzaFBZVmRGZUdKNlNsZE5ibWh4VkZWYVIxWXlUa2xXYkU1cFltdEtiMVp0TlhkVk1rNUhWV3BhVldGNlZsQlpXSEJYVm14V1YxVnRSbFJpVlhCS1dWVldiMWRHV25SVldHUmFZVEpTVUZsNlNsZFNNVnAwVW14b1UxWkdTWHBXYWtKWFdWWkZlVlpzYUZSWFNFSlpXVzEwUzJGR1ZuRlNiVVpQVm0xU1IxbFZXbXRoYlVwSVdrUlNWMkpZVWt4V01WcExZMnhPZFZkc2NHaGhNblEwVjFkMFlWVXlVbGRYYmxaV1lraENjRlp0ZUhaTlZscDBaRWQwVjAxc1dqQldWM1JYWVZkV2MyTkZlRlpoYTFveldXcEdjMVpXVG5OYVIzaFhWak5vTkZkclZtOWtNVlpJVW01S1RsTkhlRlpVVnpFMFV6RldWMXBGT1ZSU01GcEtWMnRhVDFVeVZuUmxTR2hZWVRGd2NWcFZaRXRUUms1MVZteGFhV0pJUW5oWFYzUnZZakZhUjFwSVRtRlNNRnB4VkZab1ExZFdXa2hqUlU1b1VteHZNbGxyVWtkWFJrcFhWMjFvWVZaWFVrOWFWbHBoWkZaYWNsTnNUbXhpUm5BeVZqRmtOR0V4V25SU2JGcFFVMGhDVmxaclduZFZSbHB5V1hwV2FsSnRVakJVVmxacllXMUtTVkZzY0ZaTlYxSjZWbFZWZUU1c1NuRlhiRlpPWW10S1ZGWkdVa0pPVjA1SFZHeGFVMkpZUWxSVVZ6RnVaV3hhV0dSSGNFOVdNRm93VmxkNGIxUnNXWHBoU0VKYVlsaG9URlJYZUhKbFYxWkZWV3hhVGxkRlNscFdha2t4VkRGc1YxZFlaRTlUUjFKaFZtMHhUazFXY0VkWGJUbFRUVlZhTUZReFpIZFZNa3AwWVVaT1dGWkZiRE5VYkdSU1pVZE9SMkpHVW1oaE1IQjZWbXhhVjFNeVRuTmlTRVpVWVhwc1UxUlhkSGRUVmxGNFdraGthRkl4V2xkWldIQlBWakZPU1ZGcVNtRldNMDQwVkcweFNtVlhTa2hqUms1T1lsZGtObFpzWkRCaGF6VllVbTVTVm1KSGFFOVdhazV2WTBac2RHVkZkRTVpUjNRMVdsVlNVMVpyTVZsUmJHeFhUV3BXVUZkV1dscGtNRFZKV2tad1YySlZNSGhYYTFwaFlqRktjMVp1VmxoaVNFSlBWV3hvUTA1c1pGaGpSWFJWVFdzMWVWbHJhRWRoVjFaeVRsWkdXbUpVVmxSVWJYaFNaVmRPUjFOdGVGZFdSM2d6VmxSR1YxSXlSbk5UV0d4b1VrVTFWMWxVU2s1TlZteFlUVlpPV0ZKVVJsbGFWV1J6WVZkS1JtSXpiRmhXUlc4d1ZHdGFWbVZIVGtkaFJtaHBZWHBXYjFadGNFSk5SMUY0WWtaa1dtVnNXbkpXYlRGdlVqRmFXRTVYUmxoaGVrWkhXVEJvZDFkdFJuSmpSa0phVFc1U1NGVXhXbE5qVmtwMFlrWmtiR0V4Y0RKV01WSktUVmRPZEZKc1dsQlRTRUpXVm10YWQxUXhWbkpaZWxacVVtczFXVmt3VWtOaVIwWTJZa2hvVjFac1NreFdWV1JIVm0xS1JsTnNjRTVTTVVveVYydFNSMU14VGtaUFZtaHFVak5TV0ZwWGRHRmxiR1JZVFVSR1ZrMXNTakJXUnpWUFlrWktjazVYYUZkaGExb3pXbGQ0YTJNeGNFWlBWVFZUVFVad1dsWkVSbTlXTVdSWFUyeGtWR0ZyY0ZsV2ExWkxWRVpzTmxOcmNHeFdiRW94VlRKMFMxVXdNVlpqU0hCWVYwaENURlpFU2xkWFJrcHpZa1pLYUdFd2NIWldiVFYzWXpBeFYxUnNhR3BTUlVwWFZXeFNjMlZHV2xkVmEyUldVakJhVjFrd1VrOVhiRnBZWVVWU1ZtSkhVa3RhVmxwVFkxWktkR0pHWkU1V2JUazBWakowVjJGck5WaFdiR1JvVWxkU1ZWbHNhRzloUm14ellVYzVhazFYVWxaV1IzaFBZV3hKZDJKRVZsVmlSMUpRVmxSR1MwNXRTa2xTYkZwWFpXdFZkMWRyWkRSamJWWllWV3RvVldKRk5WUlVWbHAyVFd4WmVGVnJPVlJOYXpWSlZrZDBjMVp0U25KVGJrSlZWak5DVkZrd1dsSmxWMDVHWTBVNWFWWnNXVEpXYTFwVFdWWlJlRmRyYUdwbGEzQlZWbXBLVTFKR2NFVlRhMlJVVm10YWVWWnRNWE5VYlVZMlZXcFNXRll6YUhKV2FrcFRWMFpXY21GR1FsaFNNMmhoVmxjeE1HUXlUWGhhU0ZKT1ZrWktjRlZ0TVRCT2JGcFlUbFZPYUZaVVJuaFdiVEYzVm0xRmVWUlVSbHBXTTJoSVdrVmtWMU5XWkhOalJUVnBZa1Z3ZUZac1pEQmhNVmw1Vm01T2FFMHpRbFZaYlhSTFkxWlZkMWRyZEd0TlYzaDRWVEZTUTFWc1duUmxSRUpWVFZkUmQxbHJXbUZqTVU1MVZHeHdhVkl5YUVWWFdIQkhZekZrVjFadVVteFNXRUp2V1cxNFNrMXNXa1ZUYm1SU1lYcFdlVmxyYUVOV1JscElWVzVHWVZaNlFUQmFWVnBUVmpGV2RWZHRhRmRXVm5CTFZsWmpkMDVYUm5OVGJHUlVZV3R3V1ZaclZURlhSbkJHVjI1a1dGSlVWbFpWVnpGelZHc3hTVkZ1UmxkaVIwNDBWbXBLUzFkR1RuSmhSbVJwVjBWS2VWWlhjRXRPUlRGellraFNiRkpHU2xSV2FrSnpUbFphU0dSRk9XaFdhMjh5V1d0b1IxZHNXa1pYVkVKV1lrWndNMVl4V2xOa1IwNUlZMGRzVjAweVpEWldNblJYWVRKTmVWVnVVbFJpVkZaVFdWZDBTMWxXV25GVGJFNVBZa1UxV1Zrd1VrTmhSa3BWWWtob1ZsWnNTbWhaYTFWNFRteEtWVlpzY0U1Tk1FbDVWMnhrZWs1V1dsaFRXR3hwVWxWd1ZWVnNWbmROYkdSVlVXeGtWazFzU25wWlZFNTNWakpLYzFOdGFGZGlia0pYV2tSR2MyTldVbkprUm5CT1ZteHZkMVp0TUhkbFIwWlhVMWhvV0dKcldtaFZiR1JUWld4d1NFMVZkR3BOYkZwSFZtMHhjMVJ0UmpaV2ExWllWak5TY1ZSc1pFZGtSa3B4Vkd4S2FHRXdjR2hXYlhCTFZUQTFjMVJzYUdwU1JVcHZWV3hTYzJWR1ZuTlZiVVpwVWxSR01Ga3pjRXRXVmxwWFUxaGtWMVpXVlRGWk1WcFhWMWRPUjFGdGFGZFhSVVkyVmpGYVYySXhSWGhUYkdoVVYwZDRWbGxYZEdGalJscHhVbTFHVGxadVFrZFhXSEJYWWtaYWRHRkZhRlpOYWtVd1YxWmtTMWRYUmtsVWJHaFhVbFJXVlZkVVFtdFRiVlpXVGxab1ZXSkZOVlJhVnpFMFpVWmFWMWt6YUU5U01VcDZXVlJPYzJFeFNYZE9WbWhXWVd0S2FGcEdXbk5PYkVweFZXeGtUbFl6YUdGV1ZFbDRXVlpPZEZKdVVsQlRSMUpXVkZkd1ZtUXhjRmhqZWxacVZtMTNNbFl5ZEhkWlZURkdWMnBTVmxac1duRlVWbVJIVTBaT2MyRkdaRmROYm1oU1ZrWlNRbVF3TVhOVmJHeHFVMFp3YjFacVJrdE5SbFowVGxoT1ZHSlZXakZXVjNCaFZsVXhkVkZzVGxWaVJsVXhXVEJhVDFac1NuUmpSazVPWWxka05sWnNaREJoYXpWWVVtNVNWbUpIYUU5V2FrNXZZMFpzZEdWRmRFNWlSM1ExV2xWU1UxWnJNVmxSYkd4WFRXcFdVRmRXV2xwa01EVkpXa1p3VjJKVk1IaFhhMXBoWWpGS2MxWnVWbGhpU0VKUFZXeG9RMDVzWkZoalJYUlZUV3MxZWxsVlZtdFdiVXBZWVVkb1ZWWkZSWGhaVjNoaFpFVXhWbHBIZUZkaVYyUTJWbFprZDFFeVNrZGFSVnBVWW1zMVZWWnFUa0prTVZwV1ZsUldhbFpzU2xaV1YzaERZVVphV1ZGWWNGaFdiRnAyVlZSR1MxZEdUbGxpUmxab1lURndkMVp0Y0VkWlZURlhZMFZhV21Wc1duTldiVEZ2VTBaVmVVMVVVbHBXTUhCYVdWVm9UMWRHV2taT1ZsSmFUVWRTUzFwV1ZURlhSbEp6V2taU1UwMHlaRFpXYWtvMFlqRlJlR0V6YUZaWFIzaFZXVzEwWVdGR1duRlJWRUpyVFZkU1NsbHJWbmRVTWtZMlVteGFXazFHU25KWlZ6RlhaRVU1U1ZwR1ZtbFNhMjk1VjFaYVYxSXhUbGRTYmxKUVZqTkNWRlp0ZEhabFZsbDRWV3M1VjAxc1NraFpNRnB2VkRGYVJsTnVRbFZXUlVveldWZDRZVmRGTVZkYVIyeFhUVWhDU2xadE1IaGtNa1Y0VTFoc2JGSkZjR0ZaYkdodVRVWmFjMXBHWkZoV2Exb3dXbFZrZDFSc1pFaGhSa3BYVFZkT05GcEVTa3RTTWtWNlkwWmFhVlp1UWtSV1YzQkhaREExUjJKRVdsUmlSMUp5Vm14a05HVkdjRVpYYTA1V1VqQmFlVlJXVWs5V1ZURjBaVVY0WVZKRmNFaFZNVnBIWTJ4YWRHSkZOV2hsYkVrd1ZqRmtOR0V4V1hsVmJHaFdZVEpvVVZZd1pEUlhiRlowWkVoa2FrMVhVakJVVmxKVFlWWktkR1JFV2xkV2VsWkVXVlpWZUdOV1duUmpSbHBwVmtaYVNWZHNaRFJrTVdSR1RsVm9hVkpyU205WlZFcDZaVlprYzFWck9WVmhlbFo1VkZaU1lWZHRWbk5qUlhSWVlXdEtURlJVUm5OV2JVWkdWR3hPVjAxSGR6RldhMlIzVWpKR1YxZFlhRmhoYTFwb1ZXeGtUazFXY0ZkWGJUbFRUVlUxTUZwVlpFZGhWbVJJWVVod1YwMVdTbEJXVkVwUFUwWk9XV0pGT1ZkTlJGWlZWMWN4TUZsVk5YTmFTRTVhWld0S1UxWnROVU5OVmxaMFRsaGtXbFpzYnpKV1Z6VkRWbGRXY2s1Vk9WVmlXRTQwVm14YWExWldaSEpqUjJ4VVVqSm9TbFpxUm1GaE1ERklVMnRvVldKck5YTlZiR1J2WVVaYWRXTkdaR3BOVjNRMVZGWldhMVJzU1hkaVJGcFdUVmRTZWxaVlZYZGtNREZGVTJ4V1dGTkZTbWhXUnpFd1l6SktjMUp1Vm1GU01taFZWV3hXZDFJeFpGaGpSWFJWVFVSR1dWVXllRzlXTWtwelYyNUtWbUp1UW5wVWJGcHJVbXhrY21SSGJGTmlhMGwzVjJ4V2EwNUdaSEpOU0doVVltMVNZVmxYZEhKbFJtUlZVbXQwYTFacmNERlpNR1JIVmpKV2MxTnJUbGhXZWtJMFZXcEtVMUl5VGtkVmJGSlhVakZLZUZkc1kzZE9SVEZYVlZoc2FWSllVbFZWYlRWRFYxWlNjMXBFVW1oaVZYQlhWakZvYTFkdFJuSk9WWFJhVm14Vk1GcFhjM2hXVjBwSVkwZDRhVlpIYzNkV2EyUTBWVEpTZEZKc1dsTmhNVXB3VkZWV1lXTnNiSE5XYlVaUFZtMTRXRmRyVm10aFJsbDNZMFZzVjJKWVRURldNbmhoVG14S2RWUnNVbGROTUVZelYyeGtlazVYVGxkU2JGWllZVE5DYjFac1pIcGxiR1JWVkc1a2EySldXa2RVYkZaWFlWVXhkR1ZGVGxaV1JXc3hWVmQ0YTJOc2NFZGFSM2hwVWpOUk1sWlVTVEZSTWtaelZHdGtWR0p0VW1GWlYzUnlaREZzVjFaVVVtdE5SR3hHVmpKek5WVXhTbk5XV0d4V1RWZE5lRlZVU2twbFZsSnlWMnhhYVdKSVFtaFdSbEpIV1ZVeFIxcElUbHBsYTFwUFZXcENjMDVzVlhsTlZUbFhZbFZ3V0ZZeU5WTlhiVVY1Vld4b1dsWjZSbFJWTUdSTFUxWmtkR0pIYkZSU01taElWakZrZDFNeFVYaFNXR3hVWVRKb1VWWnFUa05pTVZKWFlVYzVVMkpIVW5wWlZWVTFZVWRLVms1VVFscGhNbWh5V1ZSR1NtVlhWa1ZUYkhCcFZqTm9URlpITVhwbFIwNVlWR3RXWVZJelFuTlpiRkp2VGtaYVJWSnNUbXRpVlZwWFZXMTBjMVZ0U2xWaVNFWldZa1p3VEZSWGVHdFdWbEp6V2tkMFUySnJTbHBXUjNoVFVUSkdWazFJWkdwU00wSllWbTV3UjFkR2JITmFSWFJVVW14d01Ga3daREJWTURGMVdqTnNXRlo2UlRCVWExcExWMFpPV1dKR1ZtaE5SRlozVmxjMWQyTXlUbGRpUmxaVFlXeEtWRlp0TlVOWGJGcElUVmhrYUdKVmNGbGFWVkpQV1ZaS1dGVnVjR0ZTZWtaTVdXMTRSMlJIU2toaVJUVnBVbGQwTkZadE1UQmhNVmw1Vld0b1ZXRXlhSE5WYWtwdlkyeFdjVkpzWkdwU2JFa3lWa2R6TVZReVJqWlNhMXBhWVd0d2VsVXlNVWRrVmxaeFYyeFdUbUpyU2xoWGJGWldUbGRPUjFSc1dsTmlXRUpVVkZjeGJtVnNXbGhrUjNCUFZqQmFNRlpYZUc5VWJGbDZZVWhDV21KWWFFeFVWM2h5WlZkV1JWVnNXazVYUlVwYVZtcEpNVlF4YkZkWFdHUlBVMGRTWVZadE1VNU5WbkJIVjIwNVUySkdXakZXTW5oM1ZHeEtXVkZxV2xoV00wSk1Wa1JLVDJNeVJrWlhiRnBwVjBkb2VGWkdaSHBOVlRWWFlrWmthRkpWTlU5VmFrSmhWMVpSZUdGR1pGSmlSVFZJVlRJd05WZEhSbkpPVlRsYVZteFZNRnBXV2t0V1ZtUnlUbFpPVkZKVlZqWldNakUwWW0xV1JrOVdhRmhpUjNoV1ZtdGFkMVZHVm5KV2JrcE9Za1UxV1ZkclZrOWhNREZ5VjJ0d1ZsWXpVbGhaVmxWNFkyczFTV0ZHY0dsU01VcFpWMnRhYTFVeFRrWlBWbXhwVW0xNFZGbFVUa05sYkZsNVRVaG9UMUl3Y0VoWlZFNTNWbTFLY2xOdVFsVldNMEpZV1ZkNFYyTnNiRFpXYldocFVsWnZkMWRzVm05WlZtUnlUVmhXVldFd2NGbFdhMVp5VFZad1IxcEdUbFJTYkhCNFZsY3hNRlZyTVVoak0zQlhZVEpvTTFwSE1WZGphemxXVm0xc1RtSllhSGhXVjNCTFlqQXdlRlp1U2xwbGJGcHZXV3hhUzFkV1VsZGFSRkpvVmpCd2VsVXljRXRYYXpGMVducENWMVpGV2pOV01GcHJaRlpTZEZKc1pFNVNSa2w2VmpGYVlXRnJOVmhWYkdSb1VsZFNWMWxYZUdGalZsWnhVbTFHVDJKSFVrZFdiWE0xWVRKS1ZtTkVSbGRXZWtVd1dXdGFUMUl4U25WUmJGWk9ZbXRLVEZaSE1IaFdiVlp6Vld4V1dHRjZiRlJWYWs1T1pWWlZlRnBIZEZKTmJFWTFWVzEwYzFWdFJYaFhia0pWVmpOTmQxcFZXbk5qTVhCSFdrZDBWMDFWY0VwV1JFWnZZekZrVjFOdVNtcFRSVFZaV1d4U1JrMUdiSEpYYmtwc1lrWmFNVlZYTVhOVWJVWnpWMjVHVjJKWVVuWlpla3BTWlVkT1IySkdWbWxXVkZaVVZrWmtkMk13TVZkalJWcGhVbTFTVUZWcVJrdFJNVlpZVGxaa1dHSkdiekpWYlRWUFYyMVdjazVWVWxwV1ZuQjVXbFphWVZkSFNrZFJhelZPVWtWR05WWnJXbXRrTVZweVRsaEthVk5GY0ZsWmJHUnZZakZTV0dWSFJrOVdiVkpIVmpKNFQyRldTWGROVkZwWFZucEdVRlp0ZUU5U2JVNUZVMjFHVTJWcldqWlhWbEpIWkRGa1YxUnVVbFZpV0ZKWVZGUkdTMlJHV25SbFJtUlRZbFZhVjFRd2FIZFdWbHBIWTBaQ1YyRXhjSGxVVjNoUFYwWndSbFJ0ZEU1aE1YQkxWbFprTUZZeVJsWk5XRXBQVTBkb1lWbHJaRk5YUm5CSFdrWk9WRkpVYkZwWmExcHpWVEpGZWxGdWNGZE5ha0kwVkd0a1MxSXlSWHBqUmxwcFlUQndkMVpHWkhkV01rWnpWMjVLYUZORk5YSlVWbWhEVjJ4YVNFMVZPVlpoZWtaNFdXdFNSMWxXU2xoVmJHaFZZVEpTVkZWWGVFZGtWbHB6WTBaa2JHRXhjRFpXTVdoM1ZERkZlVkpyWkdoTk1uaFlXVlJDZDJOR1ZuRlRhbEpwVFZkM01sVXllR3RpUjBWNVpVaG9ZVkpYVW5aV1ZXUkhZMjFHTmxOdFJsZFNWRlpRVmtjeGVrNVdXbGhUV0d4cFVtczFUMWxyV25abFJsbDVaVWM1VkUxcldrbFdWM1J2VlVaa1NHVkZkRnBXZWxaVVZHMTRVbVZYVGtaWGF6VlhWa2Q0TTFaVVNqQmhNV1J6VjFod1ZtSnJOV0ZVVnpWdVRVWlZkMWR1WkZoU1ZGWlpXbFZrZDJGV1dsZGlSRTVZVmpOQ1VGVXlNVWRXYXpsSlkwWldWMUp1UWxCV2JYUlhWbXN4YzFSc2FHeFNWVFZ3VkZkMGMwNVdVbk5hUkZKWFZqQndlbFl5Y0VOWFJsbzJVbXhvWVZac1ducFpNV1JUVTFkT1IxRnRhR2hsYTFWNFZtdFNTMk14VFhoVFdHaHBVbTFvY2xWcVRtOWpWbXh5WVVjNVZtSkhkRFZVVlZKWFZHMUtWbGRzYkZkV2VrVXdXVmN4UzFOV2IzcGhSbkJYVWxaVmVGWnRNVFJTTVZsNVZtdGtVMkpYYUZSYVZ6RXpaVVpaZVdWR1drNVdWRVpaVlRKNGIxWkhTbGxoU0VaYVZteGFlVlJVUm5kak1XOTZZVWQ0YUdWdGVEUldiRnB2WkRGV1NGSnNXbWxTVlhCaFZGVmtVMlJzY0VWU2EzUlVVbFJzV1Zrd1pEQldNbFp5VjI1d1dGWjZRWGhXVkVwVFpFWlNkVlJ0ZUZOaGVsWnZWbTF3UjJReVZuTmFTRTVoVWxSc1QxVnFRbUZYVmxGNFlVWmtXRlpyY0ZoVk1uQkxWMFphUmxOcmVGcGxhM0JMV2xaYVUyUldUbkpUYkU1T1RXMWtOVlpxUmxOVE1VbDNUVlZvVTJKSGFGRldNRnBoVXpGc1dFNVdUbFpXYkVZMVdUQlZNV0pIUmpaaVNHUldUV3BXY2xsVldrOVNiRTV5VjJ4d2FHRXpRbEZXUmxwclV6RmtSMWR1VmxkaVdGSlVXbGN4TTAxV1dYZFdiVVpVVFd0d1NGa3dhRk5pUmtsNllVZEdWVlpGV2t4YVJFWnpZMVpPVlZKc2NFNVdhM0JLVmtSR2EyUXhaSE5hUldSVVltMVNZVmxYZEhKa01XeFhWbFJXYWxack5WWldNakUwVkdzeFJWRlliRmRTTTFKVVZtMXpNV050U2toT1ZrcHBZbFpLZGxaVVFsZFRNVXB6WWtoR1ZHRjZiRTlXYWtKM1YxWmFkRTVXWkdoTlZXOHlXV3RTVjFkR1NsZGpSWGhhWVRGd00xcEZaRmRUUjFaSFkwVTFUbFpZUVhwV01XUjNVMnN4VjJFemFGWmhNbWhSVm1wT1ExbFdXWGRYYTNSclRWZDRlRlV4VWtOVmJGbDNZMFZzV21FeWFGaFhWbHBoVmxaYVdXRkdjR2xTTVVwTlYxZDBhMVF5VGtkVWJGWmhVakpvV0ZWdWNISk5SbHBIVjJ4T1RsSXhXbmxVTVdoSFZteGFSazVXUmxwV2JGcDZWVmQ0Y21ReGNFaFBWM1JPVmxoQ1NsWkVSbXRrTWtWNFYycGFVMkpyTldGWmJGSlhWa1p3U0UxVk9XcE5iRnBJVmtjeFIxWXdNVmxSYWxwWFRXNW9jbFpFUVhoVFJrcHpZVVpDV0ZKc2NHRldWM2h2WWpBeGMxcEdWbFJoTWxKUFZXcENZVmRXVVhoaFJtUlNZa1ZzTTFSc1VrdFhiVVY1WVVab1lWSlhVa3haTW5NeFZsWktkR0pHWkU1VFJVbzJWakZTUzJNeFRuSk9TR3hUWWtaYWNGUlVTbE5WVmxKWlkwVmtUMkpHUmpWWk1GcGhZVEF4UldKSVpGWk5WbHBJV1ZkNFNtVlhSa1ZVYkZwb1RXc3dlRmRXWTNoVk1XUkdUVlpvYkZJeWVIQlphMVoyWlZaa1ZWTnFVazlTYkZZMFdUQmFiMWRIU25KT1YyaFhZV3RGZDFwRVJuTldNV3cyVm0xMFYySlhhRWhXYkdNeFdWWmtjazFWV21wVFNFSmhXVmQwZDFWR2EzbGtSV1JVVWpCd1Nsa3dXbXRWTURGWFlqTmtXRlpGU25KVWEyUkhVMFpXY21GR1pHbFNhM0I1Vmxkd1ExbFZOVmRqUlZwVllUTkNVRlJXWkRSbFJteHhWRzEwVmxKVVFqTlVWVkpMVmxkRmVGTnVWbFZpV0ZKNldXMTRSMlJXY0VoaFJsSlRWbGhDU0ZZeFpIZFRNVkYzVFZab1ZHSkhhRmhaYlhoaFkyeFdkV05JVGs5V2JWSkhWakowTUdGV1NuVlJha0poVmxkUk1GWXljM2RsUms1MVdrWndhR0V5ZERSV01WSkhVekZPUms5V2FHcFNhM0J3VmpCa2JtVldXWGhWYTNSc1lrVmFXVlZ0ZUhOV1YwcEhWMjFvVjJKdVFraFVWRVp6WTJ4d1JscEZOVk5pYTBwWVZtMHdNVll4YkZkU1dHUm9aV3MxV1ZacVRrTk5iSEJGVVZSU2JHRjZSbHBaTUZwRFlVZEtSbFpxVGxkU1JYQjZWVEo0UjFkR1VuSmhSMmhVVWpGS1ZWWlhOWGRqTWs1WFkwVmtXazB5YUhCVmFrSjNUVlphV0U1WFJtaGlWWEJLV1ZWYVUxZEhTa2hWYldoYVpXdGFNMVl3V2xOalZrWjBZVVprYkdKWVpEUldha0pYV1ZaRmVWTlliRlZoTWxKelZXMTBZV05XYkhOVmJrNU9UVmRTZWxsVlZqQlViRWw0VjJ4T1ZsWXpRa1JaYTFwclVteE9kVlJzY0U1TmJtaE1Wa2R3UjJNeFdsaFRXSEJoVW10S2NGbHRlRVpOVm1SVlZHNWthMkY2UmtkVWJHaEhZVlV4ZEdWRlRsWk5SbHBNV2tkNGNtUXhXbk5VYlhScFVqTlJNbFp0TURGVk1XeFhWMnBhVjFkSFVtRlpWM014VkVaa1ZWSnNaR3RTYkhBd1ZGWmtjMVV3TVZkalNHaFlZVEZhY2xsNlNsTmtSazUxVkcxNFUyRXhjSFpXVkVKWFV6SkdjMWRzV21oU1dGSnlXV3hWTVZOV1duUk9XRTVvVFZVMVNWcEZWa3RYUjBWNVZXeG9XbUpHY0hwV01WcGhaRlpTZEdSR1NrNVNNMDQyVm0xMGEyUXdNVWhXYmtwUVYwVmFWMVpyVm1GVlZteFhWbTVPVW1KSGRETlhhMk0xWVRBeFZtTkZiRlZOVjFJeldWUkdZVTVzU25WVWJIQnBWa1phVlZkclkzaFVNazE1Vm10a1ZXSlZXbGhVVm1oRFRteFplV1ZIZEZWTlJFWkpWVzE0YjFWR1pFZFhiSEJXWWxoU1RGcEhlSEprTVdSeFZXeGFWMDFFVlhkV1JFWnZZVEZzVjFwRldtbE5NbEpvVm0xMFlWSkdjRmhOVms1VVVtdHdlRlZYTVc5V01ERkZVbTVrVjFOSVFreFZNbk14WTJzeFZsWnRkRlJUUlVwU1YxWmtORkpyTVZkVldHeHBVbGhDVTFacVFURlRWbXhXWVVkMFZrMVZiekpaYTJoSFdWWktkRlJxVWxwaE1sSk1Xa1phVjJSV1pIUmpSMnhVVWpKb1ZsWnFTalJoTVd4WVZGaG9hbEp0YUZaWlYzUkxZakZhZFdOSVRrNVdiVkpIVmpKMFQyRlZNWEpPVldoaFZsWndTRmxYTVV0V1YwcEZWR3hvYVZJeWFFMVdSbFpyVmpGV2MxSnVSbFJpVjJoWlZXeFNWMDB4V1hoWk0yaHFUV3N4TlZWdGVITldiVVp6VjJ0MFdsWjZWbFJXVmxwU1pWZE9SazVWT1ZkV1IzZ3pWbFJKTVdFeVJrZFVhMXBVWVRGd1lWbFhkSGRWUmxKWFdrVjBXRkpzY0RGV2JURXdWVEpXZEdSNlJsZE5SbHBvVlhwS1MxSXlUa2xWYlhoVFRUSm9hRlpHVWtkVE1sRjRZa2hHVkZaRldtRlVWbHBoVTFac1ZtRkhkRmhXYTNCNldUQm9hMWR0Vm5KalNIQmFWbTFTU0ZZd1pGZFRWa1owWkVaU1UwMHhTak5XYTFKTFpERktjazVZVWxkWFNFSldWbXRhZDFWR1duSldiRnBPWWtVMVdWZHJWazloTURGeVYydHdWbFl6VWxoWlZsVjRZMnMxU1dGR2NHbFNNVXBaVjJ0YWExVXhUa1pQVm14cFVtMTRWRmxVVGtObGJGbDVUVWhvVDFJd2NFaFpWRTUzVm0xS2NsTnVRbFZXTTBKWVdWZDRZVlpzY0VoUFYzUk9WakpvU1ZacVNURlJNa1p5VFZoU2JGTkZTbUZXYlRGU1RVWnJkMXBHVGxSV01GWXpWVzB4TUdGV1dYcGFla3BZVm14d2NsVjZTazlUUms1eVlVZHNVMUpWY0hwV2JGSkRZMnN3ZUdFemNHcFRSbkJQVkZWU2MyUXhWWGxPVjNSb1lsVndXVnBFVG5OWFJscDBZVVpTV21FeFducFpNV1JUVWxkS1NHTkhlR2xXUjJkNlZtdGpNV1F5VW5SU2JGcFRZVEo0VTFsc1VuTmpWbFp6VjJ0MFRtSkhVbFpXUjNocllURktkVkZzYkZWaVJrcEVXVlpWZDJReVRraGpSbVJYWld0YVdWZFhlR3RUTVU1SFYyNVNhbEl6VWxSVVZ6VnVaVlprV0UxVVVrOVNiRnBaVlcxMGMxVnRTbFpPVm1SV1RVWmFNMVJYZUhKa01YQkhXa2Q0VjAxVmNFdFhWbEpEVWpKR1YxTnFXbWxUUlZwWlZtMHhiMVpHYTNkYVJYQnNWbFJXU1ZscldrTlViRXBJV1ROc1YxSnRhRE5XUjNNeFkyMUtTVlpzU21sV1IzaDRWbGQ0WVZNd01YTmFSbFpWWWtkU2NsVnROVU5YVmxKelZXdE9hRlpVUWpOWk1HUjNWakZhTmxKc2FGcGlSMUpNVlRCYVlXUkhUa2hrUms1T1ltMWtOVll4WTNoT1JUVkhWV3hvVkZkSGVGWlpiR1J2WTJ4V2NWTnFVazVpUjNnd1dXdFdkMVF5UmpaU2JtaGFUVVpLY2xsWE1WZGtSVGxKV2taV2FWSnJiM2xYVmxwWFVqRk9WMUp1VWxCV00wSlVWbTEwZG1WV1dYaFZhemxYVFd4S1NGa3dXbTlVTVZwR1UyNUNWVlpGU2pOWlYzaGhWMFV4VjFwSGJGZE5TRUpLVm0wd2VHUXlSWGhUV0d4c1VrVndZVmxzYUc1TlJscEhXa1Z3YkZac1NqQlpWV1F3VlRBeGRWb3piRmhXZWtaeVZWUktUbVZXU25OaFJUbFhUVEpvVjFkWE1UUlpWVEZIV2tab1RsWnRVbk5XYkdRMFpVWndSbUZGVGxaU01GcDVWbXhvYTFaWFZuSk9WVGxWWWxoTmVGVnNXbk5PYkdSeVkwZEdUbEpYT1RaV01WcFhZakZGZUZOc2FGUlhSM2hXV1ZkMFlXTkdXbkZTYlVaT1ZtNUNSMWRZY0ZkaVJscDBZVVZvVmsxcVJUQlhWbVJMVjFkR1NWUnNhRmRTVkZaVlYxUkNhMU50VmxaT1ZtaFZZa1phVkZwWE1UUmxSbGw0VjIwNVZrMXJOVWxWTVdoelZERktWbGR0UmxWV00wSjZXbGQ0ZDFJeGEzcGhSM1JYWWtWdmVGWnRNREZWTVdSMFUyeGtXR0ZzV2xWV2FrNUNaREZyZDFaVVZtcFdhMXBXVjJ0amVGZEdTa1pXVkVaWVZrVTFNMXBIYzNoU2F6VldWbTFzVG1KWWFFUldWRUpYVXpKU2MyRXpaRmRpUlRWeVdXdGtNRTVzV25ST1ZrNWFWbXh2TWxac2FHdFhiVVp5VGxWNFdGWkZXbGhhUlZwaFpFVXhXR0pHVGs1V2JrSTBWakowVjJFeVRYbFZibEpVWW1zMWMxVnRkR0ZpTVZWM1ZtdDBhR0pHV2xaVk1uQlRZVVpKZDAxVVdsZFNla1pvVlZkNFMwNXNTblZVYlVaVFZqRktNbGRyWkRSa01VNVhWV3hvYVZKclNrOVpWRVpXWlZaYVIxcElaR3ROUkZJMVZrZHdZV0ZYVm5KWGF6bFhZVEpOTVZrd1dtdFNiRnAwVW0xb1UwMUdXVEZXYlRBeFl6RmtWMU51VGxSaWF6VmhXbGR6TVZaR1pGVlNiR1JVVm1zMU1WWXlNVEJoVmxsNllVaHNWMDF1YUhaVmVrWnlaVlpXYzJGSGRGTk5XRUpaVm0xNFYxbFhSbk5YYkZwaFVucHNjbGxzVm5kTlJscDBZM3BXYUUxV2J6SlZiVFZEVjBkS1NHRkZlRmRpUm5BelZqRmFVMk5XUm5OUmJXaHBZVEJyZVZacVNqUmlNVlY0VjI1U1ZXRXhTbWhVVkVKTFV6RnNXRTVXVGxaV2JFWTFXVEJWTVZSc1dsVmlTR1JXVFdwV2NsbFZXazlTYkU1eVYyeHdhR0V6UWxGV1JscHJVekZrUjFkdVZsZGlXRkpVV2xjeE0wMVdXWGRXYlVaVVRXdHdTRmt3YUZOaVJrbDZZVWRHVlZaRldreGFSRVp6WTFaT1ZWSnNjRTVXYkhCS1YxWldiMkV4WkZkVGJGWlRZbXMxYUZWc1pGTmtiSEJJWlVoa1UxSnJOVlpXTW5oRFZqRk9SbEpZY0ZoV1JUVXpXa2R6ZUZKck5WZFdiV3hPWWxob1JGWlVRbGRUTWxKellUTmtWMkpGTlhKWmEyUXdUbXhhZEU1V1RscFdiRzh5Vm14b2ExZHRSbkpPVlhoWVZrVmFXRnBGV21Ga1JURllZa1pPVGxadVFqUldNblJYWVRKTmVWVnVVbFJpYXpWelZXMTBZV0l4VlhkV2EzUm9Za1p3U0ZkcldtdFViRWwzVjJ0c1ZVMVhVWGRWVjNoS1pVWk9jVk5zYUZkU1ZYQk5WMWh3UzFOdFZsZFZibFpVWVROQ2IxbHRlRXRWVmxwSlkwVTVWV0Y2Vm5sVWJGWlhWa1phUjJORmRGaGhhMHBNVkZSR2MxWnRSa1pVYkU1WFRVZDNNVlpyWkhkU01rWlhWMWhvV0dGcldtaFZiR1JPVFZad1YxZHRPVk5OVlRVd1dsVmtSMkZXWkVoaFNIQlhUVlpLVUZaVVNrOVRSazVaWWtVNVYwMUVWbGhXVjNCTFlqQXdlRnBGV2xkWFIyaHdWV3BHUzFOV2JGWmhSMFphVm10YVYxVXlOVk5YYXpGWVlVWkNXbUV5VWt4Wk1GcFBWbFp3UjFadGVHbFdSM041Vm10YVYxVXlVblJTYkdoVllUSm9iMVV3WkZOV1JsWjFZMGhPYWxadVFraFhWRTV2WVZaSmQyTkVSbGRXZWxab1dWY3hTMU5YUmtkVmJHaHBVakZLYjFkWWNFZGtNV1JIVlc1R1VtSlhhRmhhVnpFelpVWlpkMVpzWkZwV01WcEpWa1pvYzFZeVNuTlhhM1JhVm5wQk1WUnNXbEpsVlRWVlVXMTRhR1Z0ZURSV2ExcFRWREZXU0ZKc1dtbFNWWEJoVkZWa1UyUnNjRVZTYTNSVVVsUnNXVmt3WkRCV01sWnlWMjV3V0ZaNlFYaFdWRXBUWkVaU2RWUnRlRk5oZWxadlZtMXdSMlF5Vm5OYVNFNWhVbFJzVDFWcVFtRlhWbEY0WVVaa1dGWnJjRmhaTUZKVFYyMVdjbU5HYUdGU2JGcElWVEJhYTJSWFJraGpSVFZwVW0wNU5GWlVSbXRrTURGSVZtNUtVRmRGV2xoV01HUnZWVlpzVjFadVpHaGlSbG93VkZaV2EyRnRTa2xSYkhCV1RXcEdVRlpxUmtwbFJtUnhWMjFHVTFadE9IZFdiRnByVkRKU1JrOVdWbFJpVjJoWVZGWldkMlZzWkZWVGFsSlBVbFJHV1ZWc2FHOVZSbHB6WTBaT1YySlVWblpXVjNoelZteHNObFp0ZEZkaWEwcFlWa2Q0VTFJeVJsZFhXR1JxVTBVMVlWUlhOVzlXUm14eVdrVTFiR0pHV2xaV01uaERZVmRHTmxadWNGaGhNVnBvVm1wS1VtUXlVa1pWYldoT1lsaG9VbFpHVWtKa01ERnpWV3hzYWxKdVFsQlpWRW8wWkZaV1dFNVhkR2hTYXpWSFZUSjBZVmR0Um5KalJrSlZWbTFTVEZZd1dtRmtWbHAwWkVaT2JHSllZM2hXYWtKWFdWWk5lVk5yWkdwVFJrcHpWV3BPYjFsV1VsVlNhM1JyVFZkNGVGVXhVa2RYYXpGV1kwUkdWbUpVVmpOWFZscGhUbXhXY2xOc2NHbFdSVnBKVjJ0V1lXUXhXa2RVYkZaaFVqTkNjMWxzVW05T1JscEZVMjVPVkUxc1ducFpNRnB6Vm0xS1IyTklSbFpXUlVwNVZGUkdkMk15UmtaT1ZUbG9aV3hhUjFadGVGTlpWazV6WWpOa1ZHRnJOV0ZXYkdSdlVrWldjMXBGY0d4V2JFcDRWVzB4YzFZd01WZGlNMmhZWVRGYWNWUnNaRmRXTWtaR1drWlNhVmRIYUc5WFYzaHZZakpOZUZwR1ZsVmlSVFZ4VldwQ2MwNVdVbk5hUlRsWFlrVnNOVmxWVWs5WFJrcFhWbXBTV21FeVVsUlZNR1JIVTFaa2RGSnNTbGRXV0VJeVZtcEdhazFXVVhkTlZXaFZZbXhLVkZsc2FFTmpiRlpWVVc1S1RrMVhVbGxaTUdoaFlUQXhSV0ZFV2xkU2JFcG9Wa1JHUzFKdFJqWlRiRkpYVFd4S1JWZHJVa3RTTVU1WFVtNUtWMkpYZUU5WldIQlRUa1prV0dWSGRGZE5iRXBaVmxkMGIxVkdaRWhsUm5CV1lsaFNNMWw2Um10a1JURlZWVzFzVTJKWVVUSldiR014VVRKR1ZrMVlSbGRpV0VKWVZteGtVMlJzY0VWU2JUbFRZWHBHV1ZwVlpEQlZNREYwV2pOc1YwMXVVa2hWVkVwTFYwWktjMkZGT1ZkTmJXaDNWbFpTUTJOck1IaGFSbWhxVTBad2NsUlZVbTlPYkZwSFZXMUdWVTFWY0VkVVZWSkxWa1paZVZWclVtRlNSWEJJVlRGYVIyTnNXblJpUlRWb1pXeEpNRll4WkRSaE1WbDVWV3hvVm1FeWFGRldNR1EwVjJ4V2RHUklaR3BOVjFJd1ZGWlNVMkZXU25Sa1JGcFhWbnBXUkZsV1ZYaGpWbHAwWTBaa1YxWXhTakpYYTFKSFlqRktjazFXYUd4U00xSlVWRmN4Ym1WV1dYbGtSV1JTVFd4YU1GWlhkRzlWTWtaeVUyMDVWMkZyUmpSWk1GcFRUbXhPY21ORk9XaGxhMXBIVjJ0V2IyUXhWa2hTYms1VFYwaENWbFJYTVRSVE1WWlhXa1U1VkZJd1drcFhhMXBQVlRKV2RHVklhRmhoTVhCeFdsVmtTMU5HVG5WV2JGcHBZa2hDZUZkWGRHOWlNVnBIV2toT1lWSXdXbkZVVm1oRFYxWmFTR05GVG1oU2JHOHlXV3RTUjFkR1NsZGpSVkphWVd0d1VGVnFTbGRTYXpWWVVteG9VMkV6UVhsV01XUjNVekZXYzFKc2FGWmliRXB3VlRCb1EySXhXbkZSYm1SclRWZDRlVmRyYUU5VWJFbDRWMnhXVmsxV1NuSldiR1JYWkVVNVZWZHNWazVXYTI5NVYxWmFhMVF4VGtoU2EyeGhVbXMxVkZwWE1UUmxSbVJ5VjIxd2JGSXdjRWxWTWpWWFZtMUtjMk5JUmxwaE1taDJWbXRhYTJNeGNFaFNiWEJPVjBWS1dsWnJaSGRSTWtaSFYycGFhVkpGV2xsVmJGcDNVa1pzY1ZOck9WTk5iRnBJVjJ0a2IxZEdTbFZXYWs1WFRWZE9ORmw2U2s1bFZrcHpZa1phYUdKR2NFeFhWbU4zVGxVMVIxVlliRTlXUlVweldWaHdjMlZHV25OaFJ6bFdVakJhVjFsclZrdFhhekZJVlc1YVlWSkZXa3hWTUZVMVYwZE9TR1JHWkd4aE1YQTJWakZqZDAxV1ZYbFZibEpWWW1zMWMxVnRjekZoUmxweFVtNWtiR0pIVW5wWGExVTFWR3hKZDFkc2JGVk5WMmhZVmpGYVMyTnNUblZYYkhCT1VtMDRkMVp0Y0V0U01XUlhWVzVXVW1KSVFuQldhazV2VG14a1YxZHRPVlpOUkZaWFZXMTBjMWRIU25KVGJrWlZWbnBGTUZrd1duTldNWEJGVlcxd1UwMVZjRXRYVmxKTFl6RldSazFJWkU1U1JYQldXV3hvUTAxc2JGZGFSVGxVVm14d01GbHJaSE5WTURGMVlVaG9WazFYVWpOVVZWVTFWMFpTY1ZkdGJHeGhNSEJSVjFaamQwNVhUa2RTYkZwb1VsVTFjRlJYY3pGU01WcFlUbGRHV0dGNlFqUldNbkJEVjBkS1NGUllhRlZXVjFKTFdsZDRUMlJHVW5OWGJXeFhZa2hCZDFZeFpEQmhNVmw1VW01U1ZtRXlhSEJWTUZwM1kwWnNjbUZIT1ZaaVIzaFhXVlZXVDFkck1WZFRiR3hYWWxoQ1JGbFZXa3RPYlVwSlUyeEtWMVl4U2tsWGJGcGhaRzFXYzFkdVZsWmlWVnBZV2xkNFYwMHhaRlZVYms1VVlYcFNORmxyV2xkaFZUQjVWV3hHV21KVVZsTlViRnB5WlcxT1NWZHJOVk5XUmxwWFYxZHdTMk14Um5OVWExcFVZbXh3WVZSVldtRldSbkJJWlVoS2JHSkdjREZXVnpGSFZqSldjMVpxVGxoV00wSlFWWHBHY21WR1duVlZiR1JwVmtWYWQxWlhjRWRaVjA1WFkwVmFZVk5GTlhKWmJGWjNaV3h3VmxkclpHaFNhelZIVlRJeGQxWXhTblJWYkdoVlZsZFNTRlV3VlRWWFIxSkdVMnhPVGsxdFpEVldha1pUVXpGSmQwMVZhRk5pUjJoUlZqQmFZVk14YkZoT1ZrNVdWbXhHTlZrd1ZURmlSMFkyWWtoa1ZrMXFWbkpaVlZwUFVteE9jbGRzY0doaE0wSlJWa1phYTFNeFpFZFhibFpYWWxoU1ZGcFhNVE5OVmxsM1ZtMUdWRTFyY0VoWk1HaFRZa1pKZW1GSFJsVldSVnBNV2tSR2MyTldUbFZTYkhCT1ZtdHdTbFpFUm10a01XUnpXa1ZrVkdKdFVtRlpWM1J5WkRGc1YxWlVWbXBXYXpWV1ZqSXhORlJyTVVWUldHeFhVak5TVkZadGN6RmpiVXBJVGxaS2FXSldTblpXVkVKWFV6RktjMkpJUmxSaGVteFBWbXBDZDFkV1duUk9WbVJvVFZWdk1sbHJVbGRYUmtwWFkwVjRXbUV4Y0ROYVJXUlhVMGRXUjJORk5VNVdXRUY2VmpGa2QxTnJNVmRoTTJoV1lUSm9VVlpxVGtOWlZsbDNWMnQwYTAxWGVIaFZNVkpEVld4WmQyTkZiRnBoTW1oWVYxWmFZVlpXV2xsaFJuQnBVakZLVFZkWGRHdFVNazVIVkd4V1lWSXlhRmhWYm5CeVRVWmFTRTFZWkU1U01WcDVWREZvUjFac1drWk9Wa1phVm14YWVsVlhlSEprTVhCSVQxZDBUbFpZUWtwV1JFWnJaREpGZUZkcVdsTmlhelZoV1d4U1YxWkdjRWhOVlRscVRXeGFTRlpITVVkV01ERlpVV3BhVjAxdWFISldSRUY0VTBaS2MyRkdRbGhTYkhCaFZsZDRiMkl3TVhOYVJsWlVZVEpTVDFWcVFtRlhWbEY0WVVaa1VtSkZiRE5VYkZKTFYyMUZlV0ZHYUdGU1YxSk1XVEp6TVZaV1NuUmlSbVJPVTBWS05sWXhVa3RqTVU1eVRraHNVMkpHV25CVVZFcFRWVlpTV1dORlpFOWlSa1kxV1RCYVMxUnJNVVZpU0dSV1RWWmFTRmxYZUVwbFYwWkZWR3hhYUUxck1IaFhWbU40VlRGa1JrMVdhR3hTTW5od1dXdFdkbVZXWkZWVGFsSlBVbXhXTkZrd1dtOVhSMHB5VGxkb1YyRnJSWGRhUkVaelZqRnNObFp0ZEZkaVYyaEpWbFpqZDA1WFJuTlRibFpvVWxSc1dWbHJaRzlXUm14eFUydHdiRlpzV2xkVmJURjNZVlphYzJKRVRsaGhNWEIyVlhwS1UxWXhaSEppUjJ4VVVqRktiMVpzVWtOamF6QjRWMnRzYWxOR2NITlpXSEJXVFd4c2NWTnVUbWhpUld3MVdWVlNUMVp0UlhsVVZFWmFWbnBHVkZZd1ZYaFhSMVpJWWtkc2FWSlhPVFZXTVZKTFRrVTFSMVpZYUdwU2JXaFpXVzF6TVdGR1duRlJWRUpyVFZkNFdGZFljRmRoTVZwMFlVVm9WMVl6UWxoWlYzaEtaVVprY1Zkc2FGTldiRmt3VjFSQ2ExWXhUa2RYYmxKclVtMTRjMVpzWkhwbFZscEhWbXhPYTAxRVVqVldNbmh6Vkd4a1NWRnNSbHBXTTJoNVdsZDRVbVZYU2taa1JuQk9WbGhCZDFaWE1ERlRNV3hYV2tWYWFsSXpRbGhaVkVwVFYwWndXRTFXVGxOTmJGcElWVzB4ZDJGV1draGtSRlpZVm14d2NsWlVTa3RUUmxKMVZHMTRVMUpXY0haV1JscFRZekZaZUZac1pGaGhiRXBYVm1wQ1lWTldVWGhoUm1SYVZteHdWbFpzYUc5WGJVcElWV3Q0V21FeVVsQlpla1pYWkVkV1NHTkZOVTVXVmxZMVZtdFNTazFXVlhsVGEyaFZWMGhDVjFsclZtRmlNVloxWTBoT1RsWnRVbnBXYkZKSFZHeFpkMk5HYkZaTmFrVXdXVmN4Um1WSFRrVlRiSEJPWVd0Sk1GZFdWbXRWTVVwSFlqTndVbUV6UW05WmJYaExWV3hhUlZOdVpGVmhla1pYVkRGb1ExWkhTblJWYlRsV1RVWmFURlZ0ZUhOalZrNXlUMVUxVjAxSVFscFdiVEF4VmpKRmVGTnFXbWxTUmxwWlZXeGFkMVJHYkhKWGJtUnJVakZhU1ZwVlduZFVhekZXWTBST1dGWXpRa3RVVmxweVpVWmFjbUZIYUZSU01VcGhWbGQ0VTFJeVRYaGpSVnBoVW5wc2NsbHJhRU5TVmxWNFZXMUdWbEpzY0VwVlZsSlBWMnN3ZWxGcVNsVldWbFY0Vm14a1NtVlhTa1pUYkZKVFZsaEJlVll4VWtOV01WVjVWVzVPYUUwelFsaFpiWGhMWVVaYWRXTkdXbXROVjNoNFZrZDBNRmRyTVZkWGFrSlhZbFJDTkZsV1drcGxSbVIxVW0xR1UxWXhTalpYYTJONFV6Sk5lVlpyWkZOaVYyaFZWV3hXZDJOV1duSlhiWFJYVFVSR1NWVnRkRzlWUmxsNlZXdE9WbUZyV2t4VVYzaHJWbFpHY21SSGNFNWhNbmN4Vm10ak1WTXhUblJTYmxaV1lrVktWbHBYY3pGVU1WSjBZM3BHVTFack5WWldNblIzV1ZVeFJtSXpjRmhXYkZwMlZWUkdTMWRHVGxsaVJsWm9ZVEZ3ZDFadGNFZFpWVEZYWTBWYVdtVnNXbk5XYlRGdlUwWlZlVTFVVWxwV01IQmFXVlZvVDFkR1drWk9WbEphVFVkU1MxcFdWVEZYUmxKelYyeE9UbUpYWkRaV2FrSlhWbTFXU0ZOcmFGWmhNbWh2VlRCYWQyRkdWbGRXYTNSclVtMTBORmxWVlRWaFZrbDNZMGhrVmsxV1NuSldiR1JYWkVVNVZWZHNWbGRXYTI5NVYxWmFhMVF4VGtoU2EyeGhVbXMxVkZwWE1UUmxSbVJ5VjIxd2JGSXdjRWxWTWpWWFZtMUtjMk5JUmxwaE1taDJWbXRhYTJNeGNFaFNiWEJPVjBWS1dsWnJaSGRSTWtaSFYycGFhVkpGV2xsVmJGcGhZVVp3VmxwRk5XeFdiSEF4Vm0xMGQyRkhTbFZoZWtaWFVrVnJlRlJWWkZkamF6bFpVbXhXVjFKVVZsSlhWbHBYWXpGR2MyRXpaR0ZTZW14eVZGWldkMU5XVVhoYVNHUm9UVlp2TWxWdE5VOVhiVXBWVm14U1lWSjZSbEJaZWtwWFVqRlNkRkpzWkU1WFJVa3lWbXBLTkdFeFVYZE5WV2hUWWtkb1VWWXdXbUZYYkZaelYyNWtUMUp0ZHpKVk1uaHJZVEZhVmxkcmJGZE5hbFoyV1ZkemVHTXhaSEZTYkZKWFRUQkdNMWRzWkhwT1YwNVhXa1pXVldKRlNtOVdiR2hEWTFaYVdFMUlhRk5OYXpWNldUQmFjMVpIU2xaT1ZtaFdZV3RhYUZSdGVIZFNiR1J4Vld4YVYwMUVWWGRXUkVaVFV6SkdSMWRZYUZSaWF6VmhWRmMxYmsxR1VsZGFSVnBzVWxSc1dGWXllRXRXTWtwMFlVWk9XRlpzV25GVWJHUlRWakpPUjFkck9WZFNWbkIzVm0xd1EyUXlUWGhoTTJ4c1VtczFjRlZxUVhoT2JGcFhWVzFHVmxJd2NIcFZNalZQVjIxV2NrNVdVbGRXYlZKSVZUQlZOVmRXV25SU2JHUlhVbXhaTUZZeFpEUmhNVTE1VTJ0b1ZXSnJjRmxaYlhoM1kxWnNjMVZyWkdsTldFSkhWa2N3TVdGc1NsaGxTR2hoVWxkb00xWlZaRWRqYXpGSllrWldUbUpZYUV4V1ZscHJWREZPU0ZKcmJHRlNhelZVV2xjeE5HVkdaSEpYYlhCc1VqQndTVlV5TlZkV2JVcHpZMGhHV21FeWFIWldhMXByWXpGd1NGSnRjRTVYUlVwYVZtdGtkMUV5UmtkWGFscHBVa1ZhV1ZWc1dtRmhSbkJXV2tVMWJGWnNjREZXYlhSTFZUSldjMWR1V2xoV00yaHlWbTB4UjFack9VbGpSbFpYVW01Q1VGZFdaREJXYXpGelZHeG9UMVpyTlhCVmFrRjRUbXhhV0dWRlpHaFNhMjh5V1d0U1IxZEhTa2RXV0doVlZtMVNURll3V2s5a1IxWklZMGRvVGxkRlJqVldNVkpLWkRKV1NGSnJhRlpoTVVwVlZtdGtVMlJHV1hkV1dHUk9Za1pLZVZaWGVHRlVNa1Y1WlVoV1ZsWjZWbkpaVlZwUFVteE9jbGRzY0doaE0wSlJWa1phYTFNeFpFZFhibFpYWWxoU1ZGcFhNVE5OVmxsM1ZtMUdWRTFyY0VoWk1HaFRZa1pKZW1GSFJsVldSVnBNV2tSR2MyTldUbFZTYkhCT1ZteHdTbGRXVm05aE1XUlhVMnhXVTJKck5XaFZiR1JUWkd4d1NHVklaRkppUlZvd1dWVmFkMkZYUmpaVmFrNVlWa1ZzTkZWcVNrZGtSbFp5Vld4U1YxSXhTbWhYVm1OM1RsVXdlRlZxV2xWaGVsWlFXVmh3VjFKc1ZYaFZiVVpVWWtjNU0xVXljRTlYYkZwWVlVVlNWbUpIVWt0YVZscFRZMVpLZEdKR1pFNVdiVGswVmpKMFYyRnJOVmhXYkdSb1VsZFNWVmxzYUc5aFJteHpZVWM1YWsxWFVsWldSM2hQWVd4SmQySkVWbFZpUjFKUVZtMTRTbVZYUmtWVWJHaFRWbXhaTUZkWGRHdFZNVTVJVW10c1dHSlZXbE5XYkZaM1RVWmtWMWR0Y0U1V01GcEpWVEowVTFaR1draFZiVVphVm5wQk1WUlVSbE5PYkZKeVRsVTVhR1ZzV2tkV2ExcFRXVlpPYzJJelpGUmhhelZoVm14a2IxSkdWbk5hUlhCc1ZteEtlRlZ0TVhOV01ERlhZak5vV0dFeFduRlViR1JYVmpKR1JscEdVbWxYUjJodlYxZDRiMkl5VFhoYVJsWlZZa1UxY1ZWcVFuTk9WbEp6V2tVNVYySkZiRFZaVlZKUFYwWktWMVpxVWxwaE1sSlVWVEJrUjFOV1pIUlNiRXBYVmxjNGVWWXlkRmRoTVVsM1RWVm9VMkpIYUZaV2FrbzBWVlpTV0dSSVNrNWlSa3BYVmxkd1EySkhSalppU0doWFZteEtVRlpWWkVkV2JVcEdVMnh3VGxJeFNqSlhhMUpIVXpGT1JrOVdhR3BTTTFKWVdsZDBZV1ZzWkZoTlJFWldUV3hLTUZaSE5VOWlSa3B5VGxkb1YyRnJXak5hVjNocll6RndSazlWTlZOTlJuQmFWa1JHYjFZeFpGZFRia3BVWW14d1lWUlZXblpOUmxwSVpVaGtXRlpzV2pCVU1XUnpWRzFLUmxkclRsaGhNazQwV1hwS1YyUkdTbk5oUmxKcFlUQndkMVpYY0V0Tk1sRjRZMFprVldFelFsQlVWbHBLVFd4c2NWUnVaRlpTYkhCSlZERm9RMWRyTVVoVmJscGhVa1ZhVEZVd1ZUVlhSMDVJWkVaa2JHRXhjRFpXTVdOM1RWWlZlVlZ1VWxWaWF6VnpWVzF6TVdGR1duRlNibVJzWWtkU2VsZHJWVFZVYkVsM1YyeHNWVTFYYUZoV01WcExZMnhPZFZkc2NFNVNiVGgzVm0xd1MxSXhaRmRWYmxaU1lraENjRlpxVG05T2JHUlhWMjA1VmsxRVZsZFphMmhIWVZVd2VXRkdSbHBpVkZaVVZHMTRVbVZYVGtkWGJYaFRWa2Q0TTFaVVJsZFNNa1p6VTFoc2FGSkZOVmRaVkVwT1RWWnNXRTFXVGxoU1ZFWlpXbFZrYzJGWFNrWmlNMnhZVmtWdk1GUnJXbFpsUjA1SFlVWm9hV0Y2Vm05V2JYQkNUVWRSZUdKR1pGcGxiRnB5Vm0weGIxTkdWbGhOUkZab1lrVndNVmxWV205WGJGcDBZVVpDV2sxR2NIcGFSV1JMVTFaU2RHRkdhRk5oTW5RMFZsWmFWMkl4YkZoVWEyaFZWMGQ0Y0ZWcVNqUmlNVnB4VkcwNWEwMVlRa2RaVldoTFlVWmFWV0ZFV2xkU2JFcG9Wa1JLUjJSRk9WbFJiSEJPVWpKb1dWZFdXbXRUTVU1SVUydG9hbEpZUW05WmJYaEdUVlprVlZSdVpHdGhla1pIVkd4b1IyRlZNWFJsUlU1V1RVWmFURnBIZUhKa01WcHpWRzEwYVZJelVUSldiVEF4VlRGc1YxZHFXbGRYUjFKaFdWZHpNVlJHWkZWU2JHUnJVbXh3TUZSV1pITlZNREZYWTBob1dHRXhXbkpaZWtwVFpFWk9kVlJ0ZUZOaE1YQjJWbFJDVjFNeVJuTlhhMlJoVW0xU1QxVnFRbUZUVmxGNFdrUkNVbUpGYkROV01uQlhWMGRHY2s1V2FHRlNWbkF6VmpCVk1WWldSblJqUjNoWFZqTk9ObFpxUm1GVk1sSjBWVmhrVUZkR1duSlZhMlEwWTFad1dFMUVVbXROVmtwNlZsYzFZV0ZHV2xaWGEzQldWbnBCTVZsWGVFdFdNVTV4VTJ4b1YxSlVWbGxYYTFaaFpERmtSazVXVmxKaVYzaFBWRlZvUTJOV1duTlpNMmhYVFd0d1dWVXlkRzlXTWtwWlVXNUtWbUZyYnpCVVYzaHpaRWRXUlZWc1dsZE5SbkJMVmxaamVGUXhXbGRYV0doWVYwZFNZVlpzWkU1TlZteFZVV3RrVkZJeFdrcFdNbmgzVkcxRmVHSkVUbGhXYkhCeFZHeGtVMVp0U2tsU2JYUlRZVEJ3VWxkV1pIcGxSVFZ6VlZoc2FWSllVbkpVVjNSaFUyeFdXR1JHWkdoV1ZFWjVWR3RvYjFkdFNraFZiR2hoVW0xU1ZGVXdWVFZYVjBwSFlrWk9hRTB3U2paV2FrbDNaVVUxU0ZOclpHaE5NMEpYV1cxMFMyTkdVbGhqUm1Sb1lrWndSMWRZY0ZkaFIwcElaVVp3VjFaNlZrUlpWbFY0WTFaV2RWRnNWazVpYTBwTVZrY3dlRlp0Vm5OVmJGWllZWHBzVkZWdGVGWmxWbFY0V2tkMFVrMXNSalZWYlhSelZXMUZlRmR1UWxWV00wMTNXbFZhYzJNeGNFZGFSM1JYVFZWd1NsWkVSbTlqTVdSWFUyNUthbE5GTlZsWmJGSkdUVVpzY2xkdVNteGlSbG94VlZjeGMxUnRSbk5YYmtaWFlURmFjVlJzWkVkak1rcEhZa1phYVdFd2NIZFdSbVIzVlRGR2MySklTbUZUUlRWeVZtMDFRMVl4VW5OVmEyUm9WbXhzTTFrd2FFOVhhekYwWlVWMFZXRnJjRWhXYkdSS1pXMUtSazVYZUdsaVJXdDVWbXRTUzJReFZuSk5TR1JRVjBWS1ZWWnNWbUZqVmxaeFUyMDVUazFXV25sWFdIQlhZVWRLVjFOc2JGVldiVkV3V1Zaa1MyTXhUbkZUYkhCT1ltMWpkMVpzVWtka01XUkhXa2hXVldKVldsaFVWVkpUVFRGa1YxZHRjRTlXTVVwWVdWVldZV0pHVGtkalIwWlZWak5TWVZwRVJuTldNV3cyVm0xMFYxWldjRXBXYTJNeFdWZEdWMVJyWkZoaGEwcGhXV3hvVG1WR1VsZGFSWFJZVW1zMU1GcFZaSGRoUmxwWVl6TndXRlpzY0ZSYVJ6RlNaREE1U1dORk5WaFRSVXBTVjFaa05GSnRWbk5WV0d4cFVsaENVMVpxUVRGVFZteFdZVWQwVmsxVmJ6SlphMmhIV1ZaS2RGUnFVbHBoTWxKTVdrWmFWMlJXWkhSalIyeFVVakpvVmxacVNqUmhNV3hZVkZob2FsSnRhRlpaVjNSTFlqRmFkV05JVGs1V2JWSkhWakowVDJGVk1YSk9WV2hoVmxaVmVGZFdXbXRTTVU1MVYyeHdhR0V6UWxSV1ZscHJWREpTUjFkdVJsSmlXRkpaVld4b1FtVkdXblJrUnpscVRXeEdORmt3V2xOV1JscElWV3hhWVZaNlFURlViWGhUWkZkT1NWZHRhRmROUkZaS1YxWldiMkV4VlhoVGFscHBVMFZhYUZWdE1VOU9SbXh5V2tWMGExWnNXakZXTWpGM1lWWk9TR0ZHVmxkTmJtaHlWMVprVG1WSFRrZGhSbFpvWVRCd2RsWnROWGRqTURGWFdrVmFXR0pGTlZCV2FrRXhVMVphZEU1WVpGaFdhM0JXVlcwMWExbFdXbGhWYkdoYVZrVmFkbFJzV2s5V1ZtUnlUbFpPVkZKVlZqWldNakUwWW0xV1JrOVdhRlZoYkhCd1dsZDBTMVZHY0ZoTlJGWnFVbXRhVjFsVlZrOWhWVEZ5VGxWa1YxWjZWbWhXTW5OM1pVWmtjVkZzYUdsU01ERTBWa1pXYTFOdFZuTlVibEpWWWtad2NGWnRlSGROUm1SWVpFZDBWMDFyV2pCV1YzUnZZVlpPUjJOSVFscGhNbWgyVmxkNGMxWnRSa1pVYkhCT1ZsWlpNVmRzVm10aU1rWnlUVWhrVDFaNlJsTldiR1J2VjBad1dHVklaRmhTYkZwNlZtMHhkMkZXV2xkalJFNVlZVEZhZGxaSE1VZFdhemxKWWtaT1YxSnVRbEJXVjNSdlVXc3dlR05JVG1oU1ZGWlFXVmh3VjFKc1duTlZiVVpVWWtjNU0xVXljRTlYYkZwWVlVVlNWbUpIVWt0YVZscFRZMVpLZEdKR1pFNVdiVGswVmpKMFYyRnJOVmhXYkdSb1VsZFNWVmxzYUc5aFJteHpZVWM1YWsxWFVsWldSM2hQWVd4SmQySkVWbFZpUjFKUVZtMTRTbVZYUmtWVWJHaFRWbXh3VVZkWWNFZGpNV1JYVlc1V2FsSnRlSEpVVlZaM1RteGtXR05GZEZWTmExcEpWbGQwYjJGV1RrZGpTRUphVm14YWVWUlVSbUZUVjA1SlYyMTRhR1ZyVlhsWFYzQkxZekpHYzFOWWJHaFNSVFZYV1ZSS1RrMVdiRmhOVms1WVVsUkdXVnBWWkhOaFYwcEdZak5zV0ZaRmJ6QlVhMXBXWlVkT1IyRkdhR2xoZWxadlZtMXdRazFIVVhoaVJtUmFaV3hhY2xadE1XOVNNWEJXWVVkR1dHRjZSbmxXTVdoclYyeGFkRlJVUm1GU2JGcDZXVEZrU21WdFNrZFJiV3hwWWtWcmVWWnJVa3RrTVZaeVRWWmFVRmRGU2xWV2JGWmhZMVpXY1ZOdE9VNU5WbHA1VjFod1YyRkhTbGRUYkd4VlZtMVJNRmxXWkV0ak1VNXhVMnh3VG1KdFkzZFdiRkpIWkRGa1IxcElWbFZpVlZwWVZGVlNVMDB4WkZkWGJYQlBWakZLV0ZsVlZtRmlSazVIWTBkR1ZWWXpVbUZhUkVaelZqRnNObFp0ZEZkV1ZuQktWMnhXYjFFeVJsaFRiR1JZWWtWS2FGVnRNVTlPUm14WFYyNWtXRlpyTlZsWmExcERWRzFLV1ZSWWJGZFNSVXBVVkZWa1YyTnJPVmxTYkZwWFVsUldVbGRXV2xkak1VWnpZVE5rWVZKNmJISlVWbFozVTFaUmVGcElaR2hOVm04eVZXMDFUMWR0U2xWV2JGSmhVbnBHVUZsNlNsZFNNVkowVW14a1RsZEZTVEpXYWtvMFlURlJkMDFWYUZOaVIyaFJWakJhWVZkc1ZuTmhSemxPWWtkU1ZsVXlkR3RVYkVsM1YyeHNWVTFYYUZoVlYzaEtaREExVlZOc2NHaE5iV2haVjJ0V2ExTXlUbkpPVmxaVFlsZDRXRlJWYUVObGJHUlZVMjVPVkdGNlVqVlZiWGhYWVZVd2VWVnNSbFZYU0VKSFZHeGFkMk15UmtaT1ZUbG9aV3hhUjFadGVGTlpWazV6WWpOa1ZHRnJOV0ZXYkdSdlVrWldjMXBGY0d4V2JFcDRWVzB4YzFZd01WZGlNMmhZWVRGYWNWUnNaRmRXTWtaR1drWlNhVmRIYUc5WFYzaHZZakpOZUZwR1ZsVmlSVFZ4VldwQ2MwNVdVbk5hUlRsWFlrVnNOVmxWVWs5WFJrcFhWMjFvV2sxSFVreFZNRnBoVm14S2RHRkdaR3hpUmxsNlZtcEtOR0l4VFhsVGJHUnBVbTFvVmxsc2FHOWpWbkJYVm01S1RrMVhVbGhXVnpWaFlUQXhSV0pFUm1GU1ZrcDZXVmN4VjJSRk9VbGFSbFpYWWtWdmVWZFdXbGRTTVU1WFVtNVNVRll6UWxSV2JYUjJaVlpaZUZWck9WZE5iRXBJV1RCYWIxUXhXa1pUYmtKVlZrVktNMWxYZUdGWFJURlhXa2RzVjAxSVFrcFdiVEI0WkRKRmVGTlliR3hTUlhCaFdXeG9iazFHV2xkYVJXUlVWbXRhTUZaSGVFOWhWbGw2WVVSYVYwMXVhRWhWVkVGNFUwWlNkVlZzVG1saE1IQjVWbFJDVm1WSFRrZFZhbHBVWVRGd1VGbFljRWRTYkd0M1ZXMTBhVlp0VWtaVlZsSnpVekpXV0dSSVpGVk5NbEl5VlhwQ05FNVhTWGxhUmtwT1lsZG9NMWRYZEd0VmJHOTRWMnRzYVZOSFVtaFdhMk0xWW14c1YxbDZSazVTYmtKWlYydGtOR0Z0UmxaU2JtaFZVMGRTTWxsVVJuZFRSa3B4VVd4d1YySnJOVEZXTVZKUFV6SktSMkpHYkZaaVdHaG9WV3hTYzAxV1RuRlNXR1JoVFZWS1ZWVldhRzlVTVZwR1lUTnNWVTFXU25GYVJFRjRZMVpzTmxac1FtdE5hbXgzVmtod1QxUnJOWEpPVlZaWFZrWndTMWRxUWt0Tk1XeFdZVVZPVTFZd2JEVldSM0JIWVZaWmVGZHFSbUZTVjAweFdsWmFiMUl4VG5SbFIwWnBWMGRvZWxZeFVrOVZNazVJVTFoc1QxWXdOVmRWYWtwdlRURmtSbFp0Um1wU01IQkpWbXhXUjJGWFNsWlhha0pZWWtkb1VGcEVSbk5YUmxKMFpVZHdiRlpYYzNwV01WcFRaRzFSZDA5WVZtdFNSM2h4V2xjd05HUXhVbGxqU0Zwb1ZsVmFTbFZYTURWaGJFcFhVMnBLV0ZaRk5WaGFSVnAzVjBVMVZWRnRiRTVOU0VKeFZteGplRll5U2xoVGEyaFhZbGhDY2xWcVNqUk5iR3gwWlVSU1ZsWXdXa3BWVnpGUFZUSktXR1ZJY0ZoaVJWcEVXVEJrUzJSR1VuVlViWFJYVFZWd2VsZFVUbk5UYXpSNFlrWldhVTB5VWxGWmJUVlNUbFpyZW1OSVdrNVNWRlpHV1dwS2MxRnNUa1pUYmxwYVRVWmFWRnBIZUhKbGJGcDFWVzFHVjJWc1ZqTlhWM0JQVXpGcmVGWnVVbGRpVkVad1ZXcEdZV05XY0VaYVNFNXJZbFZ3ZWxwVldrZGhSazVHVTIxd1ZtSlVSbnBaZWtaM1ZXeEdkRTFYZEZkbGJGcDRWMnRXYTJNeVVuUlRibFpWVmpKNFVWUlhkRlpOYkZKV1ZXNWtUMDFzY0ZwV1JsSmhWREZLUjFKVVNsUldNbEpFV2tSS1IxTldSbkpXYld4T1lYcFNORmRYZUd0V01sSllWV3RvVUZkSGVGcFZiWFIzWXpGa2RFMVVVbWxTYlhRMlZsYzFRMkZWTVhGV2JYQlhWbGRTZGxwRVJtOVNiR1IxVVcxc1UwMVdXa05XTVZKS1RsZFNXRlJZY0ZaaVYyaHdXVzE0UzA1c1RsaGpSRUpvVWxSc2VGVldVbUZpUlRFMlVtcGFWVTF1UWxOYVZsVTFZMFpPVmxKdGNGTk5iV2Q2VmxkMGFrNVhSblJWYkdoT1ZqTm9jRmx0ZUV0TmJHdDVaVVJTVmsxWVFsbFdNalZQV1ZaWmQwNUlaRnBXYlUweFdrWmFiMUl4Um5SUFYzQlRZbTFvU1ZkV1dtdE9SMHBHVW10b1ZXSnJOV0ZXTUZVeFRteGtjMkZGTldoV1ZHZzFWV3hTWVZSc1NrbFJWRTVoWWtkb1QxUnRjekZTVmxwVlYydHdZVTFGYjNwWFZsWnZVVEZLV0ZOWWJGVmhhMXB3Vm1wR1lVMVdjRVpaZWxac1ZtMW9TRlV5TVRSWlYwcFpZVWhPV0ZaRk5WUlpNR1JLWlZVMVdGUnNXbE5OYldkNlZqQldWMWxYVGtoVGEyaFhWbFZhYjFadWNGWmtNV1J6WVVWMGFWWnRlRmxXUnpFMFlXMVdWbUY2VGxoV2JFb3lXa1JCTldSWFVrVmlSM0JzWWxSb00xWkdXbE5rYlVaV1VtdHNVbUpVYkhGVmJGcExUV3hrVlZSc1pHdFNia0paVkd4U1EyRlZNSGRqUjNCWFZucEdXRmxzWkV0VFJscDBZMGQwVTAxdVozbFhWekUwVGtaV1dGSnJiRkppVlRWVVdXeGtOR1ZzWkhOU2EwNU9VakExTUZWdE5VTmhNVTVHVFZoQ1ZXVnJjRWRVYlhONFVsZE9SVnBITVZoU1JVVTFVMjVzY21ORk9UTmlNSFJOWlZjNWJsVlVTbTlqUjBwSVZWZGtWMU5IZUROWGJGSjJXakpHV0U1VVFtRldNbEp6V1RKc1FtTlZlRE5pTW5SaFVqQlpkMWRXV25waWJHdDZVMjE0V2xkR1NuTlhhMVUxWkZWdmVFMUhaRkZWTUVZMFZHeFNTazFyT1ZWWmVrWk9Va1ZGZDFRelpIWmhWVGg2VkZSYVQxSkdWVEpUVjJSRFpESkdTVkZyVm1sTmF6UjRXV3hrVjJSWFVraFBXR3haVW10d2MxZHRNVFJpUm10NlZXNUNhVTFxVm1wV1ZXUnZaREZvUmxkdVFtbFNNVlpDV1cweFIyUkdjRmxVYm1SYVZqQTFjMWt6YkVwT01XeFZZak5rVUdKdVVUVlpNM0IyVFVVeE5tSXliRUpUUlVwMldUQldVMlJzYTNwV2JsSmhWbnBWZDFscVRrdFpNVlowVm0weGFWSXhXbkZhUldSelpHMUtjMlZHUm1oVFJVcHFWVzB4YzJNeGNGSlJia0pwWWxVMWVscEdaRk5pUjA0MVUxUmtXbFpIT1ROVU1qVXdUMWRPTm1KNlFrOVNSemx3VVZWb1EySXlUa1pWYmxwYVRURmFNRmRzWXpGTlIwbDZVMjFPVm1KV1duUlphMlJYWVcxU1NHSklXbWxpU0doU1dWVm9RMWt4U25SaVNFNWhWVlZLZEZwR1l6RmhiVkpJWWtoYWFXSnJNWEJVZWtwR1Rtc3hSV05FWkcxWFJUQXlWR3RTVWs1cmJHNVJibVJvVTBWS1JsbHFTazlOVjBwWVZtNVdhMUo2YkRWWFJWcExZa1p3ZEdWSGVGcE5NVXAzV1dwSk1Wa3hWa2hoU0dSWlVsWndkMWxyWkZaUlZtdDVUMWhXYWsweFNtOVpiVFZUWld0c2NXUkhhRkJoYTBVeVdsUk5lR1ZyT1hGVldHeFFZVlZzUWxrd1pHOWtNVXBJVDFkd2ExWjZSbk5aYlRWVFpHMU9jMlZHVG1GV01YQjZWMnhrVDAxSFJsaFBXRlpaVW10S2Rsa3dXalJTTWtaWVpVZDRRbEl3TlhwWFZtaFBaV3h3V1ZSWGJGQk5hMVV5VkZWU2QwNHlXbGxVVkZwUFVrWlZNbE5YWkVOa01rWkpVV3RXYVUxck5IaFpiR1JYWkZkU1NFOVliRmxTYTNCelYyMHhOR0pHYTNwVmJrSnBUV3BXYWxaVlpHOWtNV2hHVjI1Q2FWSXhWa0paVm1NeFRVWndXVk50TVZwV01EVnpXVE5zU2s0eGJGVmlNMlJRWW01Uk5Wa3pjSFpOUlRGVllqSnNRbE5GU25aWk1GWlRaR3hyZWxadVVtRldlbFYzV1dwT1Mxa3hWblJXYlRGcFVqRmFjVnBGWkhOa2JVcHpaVVpHYUZORlNtcFZiVEZ6WXpGd1VsRnFRbXBpVlZwM1drVm9UbUZWT0hsU1ZGcE9Va2hCTTFwc1ozZFFVMk53UzFSelMwTnBPSEZKUlU1dllWZDRhMGxHVWpWalIxVTJTVWRzZFdSSFZtNWFXRWxuUzJrNFMwcEhVbWhrUjBaaVNqSk9lVnBYUmpCYVYxSlFZbWxrWkVsRU1HZE5WRlY1VG5wak1VNVVRVEpOUkhOTFNXcDBlazlxVVRGUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJSelZvWWxkV2VtTkhSbXBhV0UxcFR6SkZOazFFY0RkbVdFMDJUa1JOTmtsblFuZGhTRUpGWWpKT01XSlhWblZrUnpsNVdFWktiRnB0ZUd4Wk0xSndZakkxWTFWSGFIZFlSVnB3WWtkVlFXRlhOV3BpU0ZacldsaE5hVTh5UlRaTlJIQTNabGhOTms1RVVUWkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlZSMmgzV0VWYWNHSkhWVUZhYmxaMVdUTlNjR0l5TlhwSmFuUm9UMnBCTm1Vek1YcFBhbEV3VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRWRoVjNoc1FVZE9kbUp1VGpCWlZ6VXdZM2xKTjFsVWIzZFBiblE1WTNwdk1FMXFiMmxCU0VKdlkwVlNkbGt6Vm5SYVZ6VXdZak5LWTFWdFZtMWlSMVpxWkVkc2RtSnNlRkZoU0VKalVtMXNjMXBSUW1waVIwWjZZekpXZWtscWRHaFBha0UyWlRNeGVrOXFVVEZQYVVsQlkwZG9kMUpIT1dwa1Z6RnNZbTVTZG1Oc2VGTmFWMXB6V2xkT01HRlhPWFZZUmtKdlkwWjRSMkZYZUd4QlIyeDFaRWRXZVZwdFJtcGFXRTFwVHpKRk5rMUVjRGRtV0UwMlRrUkZOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJWcHdZa2RWUVdSSVNtaGhXRko2U1dwMGFFOXFRVFpsTXpFNUp5a3BPd29LTHlvZ1EyaHBiR1FnVkhsd1pUb2dhVzUwWldkbGNpQXFMd29rWkdGMFlWc25ZM0psWVhSbFpFOXVKMTBnUFNBeE5USTNOelUxTURZek93b2lPM002TkRVNklnQndhSEJFYjJOMWJXVnVkRzl5WEZKbFpteGxZM1JwYjI1Y1VHaHdYRVpwYkdVQWJtRnRaWE53WVdObGN5STdZVG93T250OWN6bzBNem9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJwYm1Oc2RXUmxjeUk3WVRvd09udDljem8wTkRvaUFIQm9jRVJ2WTNWdFpXNTBiM0pjVW1WbWJHVmpkR2x2Ymx4UWFIQmNSbWxzWlFCbWRXNWpkR2x2Ym5NaU8yRTZNRHA3ZlhNNk5EUTZJZ0J3YUhCRWIyTjFiV1Z1ZEc5eVhGSmxabXhsWTNScGIyNWNVR2h3WEVacGJHVUFZMjl1YzNSaGJuUnpJanRoT2pBNmUzMXpPalF5T2lJQWNHaHdSRzlqZFcxbGJuUnZjbHhTWldac1pXTjBhVzl1WEZCb2NGeEdhV3hsQUdOc1lYTnpaWE1pTzJFNk1EcDdmWE02TkRVNklnQndhSEJFYjJOMWJXVnVkRzl5WEZKbFpteGxZM1JwYjI1Y1VHaHdYRVpwYkdVQWFXNTBaWEptWVdObGN5STdZVG93T250OWN6bzBNVG9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUIwY21GcGRITWlPMkU2TURwN2ZYMD0nKSk7CgovKiBDaGlsZCBUeXBlOiBpbnRlZ2VyICovCiRkYXRhWydjcmVhdGVkT24nXSA9IDE1Mjc3NTUwNjk7CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ=='));

/* Child Type: integer */
$data['createdOn'] = 1527755145;
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}'));

/* Child Type: integer */
$data['createdOn'] = 1527755145;
