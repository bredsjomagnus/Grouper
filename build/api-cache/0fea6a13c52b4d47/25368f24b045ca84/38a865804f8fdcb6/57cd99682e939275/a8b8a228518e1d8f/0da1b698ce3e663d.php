<?php 
/* Cachekey: cache/stash_default/documentation\api\php\bd015b72d537d8735c1f457397ac1688/ */
/* Type: array */
/* Expiration: 2018-06-04T21:58:30+00:00 */



$loaded = true;
$expiration = 1528149510;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"5eff4488363ec25f796fe585dc139bd0";s:39:" phpDocumentor\Reflection\Php\File name";s:20:"3fac4f7eb98c64fe.php";s:39:" phpDocumentor\Reflection\Php\File path";s:121:"build/api-cache/0fea6a13c52b4d47/25368f24b045ca84/38a865804f8fdcb6/57cd99682e939275/690a1fda4705f6de/3fac4f7eb98c64fe.php";s:41:" phpDocumentor\Reflection\Php\File source";s:41076:"<?php 
/* Cachekey: cache/stash_default/documentation\api\php\39f55c5c78ddfdc7ccc283fc7565918c/ */
/* Type: array */
/* Expiration: 2018-06-05T03:57:58+00:00 */



$loaded = true;
$expiration = 1528171078;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjFlZTAxOTk2YWQ3N2E1NjRiNTU3NGMxNmFlNTJiZmI1IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6IjdhMWY1YmU1NzhkYzg4ZjQucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTIxOiJidWlsZC9hcGktY2FjaGUvMGZlYTZhMTNjNTJiNGQ0Ny8yNTM2OGYyNGIwNDVjYTg0LzM4YTg2NTgwNGY4ZmRjYjYvNTdjZDk5NjgyZTkzOTI3NS8zYTdhYmE3MzIyYjUwYWI5LzdhMWY1YmU1NzhkYzg4ZjQucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoyOTYzNjoiPD9waHAgCi8qIENhY2hla2V5OiBjYWNoZS9zdGFzaF9kZWZhdWx0L2RvY3VtZW50YXRpb25cYXBpXHBocFw4ZjBlNTViNWQ5NmFjNzE2NTU3Y2E3Nzk2YzNhZGI2MC8gKi8KLyogVHlwZTogYXJyYXkgKi8KLyogRXhwaXJhdGlvbjogMjAxOC0wNi0wNFQxNzoxMDoxMSswMDowMCAqLwoKCgokbG9hZGVkID0gdHJ1ZTsKJGV4cGlyYXRpb24gPSAxNTI4MTMyMjExOwoKJGRhdGEgPSBhcnJheSgpOwoKLyogQ2hpbGQgVHlwZTogb2JqZWN0ICovCiRkYXRhWydyZXR1cm4nXSA9IHVuc2VyaWFsaXplKGJhc2U2NF9kZWNvZGUoJ1R6b3pNem9pY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxJam94TWpwN2N6bzBNem9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJrYjJOQ2JHOWpheUk3VGp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBR2hoYzJnaU8zTTZNekk2SWpKaE9UTTNOR014WkdSaFpERmtaVFEyTkRkaVlUTTNNV1poWmpoa1pqYzNJanR6T2pNNU9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHNWhiV1VpTzNNNk1qQTZJalEzTURjMVl6QTVNV0ptTnpNeE1XWXVjR2h3SWp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBSEJoZEdnaU8zTTZNVEl4T2lKaWRXbHNaQzloY0drdFkyRmphR1V2TUdabFlUWmhNVE5qTlRKaU5HUTBOeTh5TlRNMk9HWXlOR0l3TkRWallUZzBMek00WVRnMk5UZ3dOR1k0Wm1SallqWXZOVGRqWkRrNU5qZ3laVGt6T1RJM05TOHlZekEzWTJJeFpEZ3paRE5rT0Rsa0x6UTNNRGMxWXpBNU1XSm1Oek14TVdZdWNHaHdJanR6T2pReE9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFITnZkWEpqWlNJN2N6b3lNVEExTmpvaVBEOXdhSEFnQ2k4cUlFTmhZMmhsYTJWNU9pQmpZV05vWlM5emRHRnphRjlrWldaaGRXeDBMMlJ2WTNWdFpXNTBZWFJwYjI1Y1lYQnBYSEJvY0Z3NE0yWXlOR0prTmpNNVlqSmhZemd4WldKbFl6RmhabVZrWlRJM1lXVTJPUzhnS2k4S0x5b2dWSGx3WlRvZ1lYSnlZWGtnS2k4S0x5b2dSWGh3YVhKaGRHbHZiam9nTWpBeE9DMHdOUzB5TjFRd05Eb3lPRG8xTlNzd01Eb3dNQ0FxTHdvS0Nnb2tiRzloWkdWa0lEMGdkSEoxWlRzS0pHVjRjR2x5WVhScGIyNGdQU0F4TlRJM016azFNek0xT3dvS0pHUmhkR0VnUFNCaGNuSmhlU2dwT3dvS0x5b2dRMmhwYkdRZ1ZIbHdaVG9nYjJKcVpXTjBJQ292Q2lSa1lYUmhXeWR5WlhSMWNtNG5YU0E5SUhWdWMyVnlhV0ZzYVhwbEtHSmhjMlUyTkY5a1pXTnZaR1VvSjFSNmIzcE5lbTlwWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFIyRlhlR3hKYW05NFRXcHdOMk42YnpCTmVtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUpyWWpKT1EySkhPV3BoZVVrM1ZHcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJSMmhvWXpKbmFVOHpUVFpOZWtrMlNXcE9hVTVIUm0xUFJGa3dXVmRGTkU1VWFHcFpla1Y2VGxSU2Fsa3lTbTFhUjA1dFRUSkplVnBxU1RWSmFuUjZUMnBOTlU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhIWVZkNGJFRkhOV2hpVjFWcFR6Tk5OazFVUlRaSmEwNTJZbGhDYUdKdWEzVmpSMmgzU1dwMGVrOXFUVFZQYVVsQlkwZG9kMUpIT1dwa1Z6RnNZbTVTZG1Oc2VGTmFWMXB6V2xkT01HRlhPWFZZUmtKdlkwWjRSMkZYZUd4QlNFSm9aRWRuYVU4elRUWk9ha0UyU1c1YWJHSnRVblpqYVRsdFpXMUdkV0ZYTlhaa1NGSjJUREphYUdFeVZubE1NMDU1V1hrNVIxbFhkR3hqYVRsUlkyMDVNbUZYVW14amFUbHlXVlk1U0ZKVE9VUmlNakYzV1ZjMU5VeHVRbTlqUTBrM1kzcHZNRTFVYjJsQlNFSnZZMFZTZGxrelZuUmFWelV3WWpOS1kxVnRWbTFpUjFacVpFZHNkbUpzZUZGaFNFSmpVbTFzYzFwUlFucGlNMVo1V1RKVmFVOHpUVFpOYWtsNFRucHZhVkJFT1hkaFNFRkxRMjAxYUdKWFZucGpSMFpxV2xOQ1IxbFhkR3hqYkhoUlkyMDVNbUZYVW14amJIaHlXVlk1U0ZKVWMwdERaM0JxWWtkR2VtTjVRa1JpTWpGM1dWYzFOVWxIVmpSa1IxWjFXa2hOWjFoRldtaGhNbFo1V0VaQ2VXSXpXbkJhUjFaNVdFVk9kbUpZUW1oaWJtdExaWGR2WjBsRFFXZGpTRXAyWkVkV2FtUkhWbXRKU0U0d1dWaFNjRmw1UVd0Wk1qbDBZMGRHZFdWV1FubGFWMXB3WlVkV2VrbEVNR2RaV0VwNVdWaHJiME5wUVdkSlEwRm5TVU5CWjBvclIwUnhUMGRFYm5WSFJHOVRZM05KUTJab1p6WnFhR2MxTjJobk5rVnVURU5CYmpSWlQyODBXVTlsTkZsUGFFcDVkMmRLSzBkRWIyVkhSRzlUWTNOSlEyWm9aelpJYUdjMlJXNU1RMEZ1TkZsUGFEUlpUMmhLZVhkblNpdEhSRzFsUjBSdlUyTnpTVU5tYUdjMlNHaG5Oa1ZuTkZsUFdqUlpUMlEwV1U5bk5GbFBaVFJaVDJRMFdVOW5ORmxQVVRSWlQzRTBXVTlaTkZsUFVVcDVkMmRLSzBkRWJVOUhSRzE1WTNOSlEyWm9aelpJYUdjMU4yaG5Oa1Z1VEVOQmJqUlpUMW8wV1U5a05GbFBaRFJaVDJVMFdVOVZORmxQWnpSWlQxRTBXVTlwTkZsUFdUUlpUMVkwV1U5WlNuZHZaMGxEUVdkTFZITkxRMmxCWjBsRFFuZGpiVGt3V2xkT01GcFhVV2RqTTFKb1pFZHNha2xEVW1waU1qRjNXVmMxTlZSdFJuUmFWazR4V20xYWNHVkhWbnBKUkRCbldWaEtlVmxZYTI5RGFVRm5TVU5CWjBsRFFXZEtLMGRFYjJWSFJHdFBSMFJyWlVkRWNtVkhSRzVUWTNOSlEyWm9aelZVYUdjMldHaG5Oa2hvWnpVM2FHYzFWR2huTlZCb1p6VnFhR2MyY21obk5XcG9aelZCYmt4RFFXNDBXVTlsTkZsUFp6UlpUMlEwV1U5aU5GbFBXVXA1ZDJkS0swZEViV1ZIUkc1bFIwUnRLMGRFYm5WSFJHMTFSMFJzVDBkRWNHVkhSRzlsUjBSdFEyTnpTVU5tYUdjMVJHaG5OVmhvWnpaTWFHYzFNRzVNUTBGdU5GbFBZVFJaVDFrMFdVOVhORmxQV1RSWlQyTTBXVTlUTkZsUFdVcDVkMmRLSzBkRWJDdEhSRzlQUjBSclQwZEViMlZIUkd3clIwUnRRMk56U1VObWFHYzFWR2huTldwb1p6VlFhR2MxWjI1TVEwRnVORmxQWlRSWlQyRTBXVTlxTkZsUGFEUlpUMWxLZVhkTFNVTkJaMGxEUVdkSlEwRnVORmxQWVRSWlQxRTBXVTlTTkZsUFdVcDVkMmRLSzBkRWJXVkhSR3RQUjBSc1pVZEVjVTlIUkcxUFIwUnZUMGRFYlVOamMwbERZMmMwV1U5VU5GbFBVVWxQUjBSdFpVZEVibVZIUkcwclIwUnVkVWRFYTA5SFJHNVBSMFJ0VDBkRWEwTmpTMGxEUVdkSlEyczNRMmR2WjBsRFFXZGpTRXAyWkVkV2FtUkhWbXRKU0U0d1dWaFNjRmw1UVd0Wk1qbDBZMGRHZFdWVlZuTmFWekZzWW01U2VrbEVNR2RaV0VwNVdWaHJiME5wUVdkSlEwRm5TVU5CWjBvclIwUnhkVWRFYkU5SFJHMTVZM05KUTJab1p6Vk1hR2MxVkdobk5UQnVURU5CYmpSWlQydzBXVTlSTkZsUFowcDVkMmRLSzBkRWNHVkhSRzFQUjBSdGVXTnpTVU5tYUdjMWNtaG5OV3BvWnpaVWFHYzJTVzVNUTBGdU5GbFBhVFJaVDFVMFdVOWhORmxQVlVwNWQyZEtLMGRFYjA5SFJHdFBSMFJySzBkRWJVOUhSRzVUWTNOSlEyWm9aelpNYUdjMlJHaG5OVVJvWnpWNmFHYzJSVzVNUTBGdU5GbFBVVFJaVDJFMFdVOWlORmxQVVRSWlQyaEtlWGRuU2l0SFJHMHJSMFJzVDBkRWIzVkhSRzlQUjBSdVUyTnpRMmxCWjBsRFFXZEpRMEZuU2l0SFJHMHJSMFJ1WlVkRWIzVkhSRzVsUjBSdlEyTnpTVU5tYUdjMlRHaG5OVlJvWnpaVmJreERRVzQwV1U5b05GbFBVVFJaVDJNMFdVOXBORmxQVlRSWlQyeEtlWGRuU2l0SFJHeFBSMFJ0ZFVkRWJFOUhSSEJsUjBSdmRVZEViMDlIUkc1VFkzTkpRMlpvWnpaRWFHYzFWR2huTlVSb1p6WllhR2MyVEdobk5UQnVURU5CYmpSWlQyazBXVTlWTkZsUGJEUlpUMmcwV1U5cE5GbFBXVFJaVDJGS2VYZG5TaXRIUkcxbFIwUnJUMGRFYTJWSFJHeFBSMFJ0YVdOelNVTm1hR2MxZG1obk5VUm9aelZZYUdjMVJHaG5OVzl1VEVOQmJqUlpUMmswV1U5Vk5GbFBZVXA1ZDB0SlEwRm5TVU5CWjBsRFFXNDBXVTlwTkZsUFZUUlpUMncwV1U5ak5GbFBaRXAzYjJkSlEwRm5TMVJ6UzBOcFFXZEpRMEozWTIwNU1GcFhUakJhVjFGbll6TlNhR1JIYkdwSlExSnFZakl4ZDFsWE5UVlViVVowV2xWYWRtTnRNV2hrU0UxblVGTkNhR051U21obFUyZExTVU5CWjBsRFFXZEpRMEZ1WlROMGFtSXlNWGRaVnpVMVZVaEtiRnB0YkRSbVdEQm5aVE4wYW1JeU1YZFpWelUxVkcxR2RGcFZWbk5hVnpGc1ltNVNPV1pZZERkWk1qbDBZMGRHZFdWVk5XaGlWMVpVWkZkYWJXRllhRGxtVTJOelEybEJaMGxEUVdkSlEwRm5Tak4wTjFreU9YUmpSMFoxWlZaQ2VWcFhXbkJsU0RFNVNVaDBOMWt5T1hSalIwWjFaVlUxYUdKWFZrWmlSMVowV2xjMU1HWllNVGRsTWs1MllsaENhR0p1YkU5WlZ6RnNVbGQ0YkdKWFZuVmtTREU1WlROMGFtSXlNWGRaVnpVMVZHMUdkRnBXVGpGYWJWcHdaVWd4T1VwNWQwdEpRMEZuU1VOQlowbERRVzVsTTNScVlqSXhkMWxYTlRWVlNFcHNXbTFzTkdaWU1HZGxNM1JxWWpJeGQxbFhOVFZVYlVaMFdsVldjMXBYTVd4aWJsSTVabGgwTjFreU9YUmpSMFoxWlZVMWFHSlhWa1ppUjFaMFdsYzFNR1pZTVRkbE1rNTJZbGhDYUdKdWJFOVpWekZzVWxkNGJHSlhWblZrU0RFNVpUTjBhbUl5TVhkWlZ6VTFWRzFHZEZwV1RqRmFiVnB3WlVneE9VcDVkMHRKUTBGblNVTkJaMGxEUVc1bE0zUnFZakl4ZDFsWE5UVlZTRXBzV20xc05HWllNR2RsTTNScVlqSXhkMWxYTlRWVWJVWjBXbFZXYzFwWE1XeGlibEk1WmxoME4xa3lPWFJqUjBaMVpWVTFhR0pYVmtaaVIxWjBXbGMxTUdaWU1UZGxNazUyWWxoQ2FHSnViRTlaVnpGc1VsZDRiR0pYVm5Wa1NERTVaVE4wYW1JeU1YZFpWelUxVkcxR2RGcFdUakZhYlZwd1pVZ3hPVXA1ZDB0SlEwRm5TVU5yTjBObmIwdEpRMEZuU1VNNGNVdG5iMmRKUTBGblNVTnZaMUZIVmpSWlZ6RjNZa2RWWjBvclIwUnRUMGRFYlhsRWFHYzFWR2huTlhKb1p6VlVhR2MyV0dobk5reG9aelpFYUdjMU0yaG5OVVJvWnpWeWFHYzFkbWhuTlVSb1p6WklhR2MxVEdobk5WUm9aelV6YUdjMlNHaG5OVVJvWnpWSWFHYzJNMmhuTlRCdVEybEJaMGxEUVdkTGFUaExTVU5CWjBsSVFqRlpiWGh3V1hsQ2JXUlhOV3BrUjJ4MlltbENhbUl5TVhkWlZ6VTFTME5yUzBsRFFXZEpTSE5MU1VOQlowbERRV2RKUTBGcldtMDVlV0pYUmpCSlJEQm5Zek5TYUdSSGJHcFBhbkI1V1ZjMWEySXlNVVppUjFaMFdsYzFNRXRJVGpCWldGSndXWHB2TmtwSFRuWmlXRUpvWW01c1QxbFhNV3hTYlRsNVlsZEdNR041YXpkRFoyOW5TVU5CWjBsRFFXZEpTRXBzWkVoV2VXSnBRV3RrUjJod1kza3dLMW95Vm5WYVdFcG9aRWM1ZVV4VU5YZFpXRXA2V2xObmExcHRPWGxpVjBZd1MxUnpTMGxEUVdkSlNEQkxRMmxCWjBsRFFuZGtWMHB6WVZkTloyTXpVbWhrUjJ4cVNVZGFNV0p0VGpCaFZ6bDFTVWRPZG1KWVFtaGlibXhSWTIxV2JXRllaMjlMVVc5blNVTkJaMlYzYjJkSlEwRm5TVU5CWjBsSVNteGtTRlo1WW1sQ2VtUkhSakJoVjAwMlQyNUthR0p0VW5aaVZWWnpXbGN4YkdKdVVXOWpNMUpvWkVkc2FrOXFiMnRaTWpsMFkwZEdkV1ZXUW5sYVYxcHdaVWRXZWt0VWMwdEpRMEZuU1Vnd1MwTnBRV2RKUTBKM1pGZEtjMkZYVFdkak0xSm9aRWRzYWtsSFdqRmliVTR3WVZjNWRVbEhUblppV0VKb1ltNXNUMWxYTVd4U1YzaHNZbGRXZFdSRFozQkRhVUZuU1VOQ04wTnBRV2RKUTBGblNVTkJaMk50VmpCa1dFcDFTVWhPTUZsWVVuQlplbTgyWTIxR2RWcEhPWFJTVjNoc1lsZFdkV1JEYUhwa1IwWXdZVmROTms5cFVtcGlNakYzV1ZjMU5WSlhlR3hpVjFaMVpFaE5jRTkzYjJkSlEwRm5abEZ2UzBsRFFXZEpTRUl4V1cxNGNGbDVRbnBrUjBZd1lWZE5aMXB1Vm5WWk0xSndZakkwWjFreU9YUmpSMFoxWlZVMWFHSlhWbFJrVjFwdFlWaG5iMHRSYjJkSlEwRm5aWGR2WjBsRFFXZEpRMEZuU1VoS2JHUklWbmxpYVVKNlpFZEdNR0ZYVFRaUGJrcG9ZbTFTZG1KVlZuTmFWekZzWW01UmIyTXpVbWhrUjJ4cVQycHZhMWt5T1hSalIwWjFaVlUxYUdKWFZsUmtWMXB0WVZob2JHTjVhemREYVVGblNVTkNPVU51TUV0SmFuUjZUMnBSTVU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhIWVZkNGJFRkhOV2hpVjFaNlkwZEdhbHBZVFdsUE1rVTJUVlJ3TjJONmIzbE5WRzlwV0VWYWFHRXlWbmxZUmtKNVlqTmFjRnBIVm5sWVIzUm9XREJrUmtscWRGQlBhazEzVDJsS2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVW01R2VscFhOR2xQYWtrMlpUTk5OazE2WXpaSlowSjNZVWhDUldJeVRqRmlWMVoxWkVjNWVWaEdTbXhhYlhoc1dUTlNjR0l5TldOU2JrWjZXbGMwUVZwdVJucGFWelJwVHpOTk5rMXFSVFpKYkhoSFdWZDBiR05zZUZGamJUa3lZVmRTYkdOc2VISlpWamxJVWxOSk4yTjZiM3BPYW05cFFVaENiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoSFkxaE9iR0puUW5WWlZ6RnNTV3AwZWs5cVZUWkpiWFJvV0RCa1JrbHFkRGxtV0UwMlRrUk5Oa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJWcHdZa2RWUVdGWE5XcGlTRlpyV2xoTmFVOHlSVFpOUkhBM1psaE5OazVFVVRaSlowSjNZVWhDUldJeVRqRmlWMVoxWkVjNWVWaEdTbXhhYlhoc1dUTlNjR0l5TldOVlIyaDNXRVZhY0dKSFZVRmFibFoxV1ROU2NHSXlOWHBKYW5Sb1QycEJObVV6TVhwUGFsRXdUMmxKUVdOSGFIZFNSemxxWkZjeGJHSnVVblpqYkhoVFdsZGFjMXBYVGpCaFZ6bDFXRVpDYjJOR2VFZGhWM2hzUVVkT2RtSnVUakJaVnpVd1kzbEpOMWxVYjNkUGJuUTVZM3B2TUUxcWIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVW0xc2MxcFJRbXBpUjBaNll6Sldla2xxZEdoUGFrVTJaVE5OTmsxcWF6WkpiSGhIV1ZkMGJHTnNlRkZqYlRreVlWZFNiR05zZUhKWlZqbElVbFo0UkdJeU1YZFpWelUxU1dwMFVFOXFUVEZQYVVwM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05WUjJoM1dFVk9jMWxZVG5wWWVVazJUVlJGTm1VelRUWk9SRWsyU1dkQ2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVlVkb2QxaEZUbk5aV0U1NldIZENiV05ZVG14aWFVazNWSHB2ZWsxRWIybGpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoRlduaGpNbFoxU1dwdmVVOXVkSHBQYWswelQybEpRV05IYUhkU1J6bHFaRmN4YkdKdVVuWmpiSGhUV2xkYWMxcFhUakJoVnpsMVdFVmFlR015Vm5WQlIxcDRZekpXZFVscWRIcFBha2sxVDJsS1kxSnRSbkphV0VwalZVaEtkbVJ0Ykd0YVdFcGpZVEpHWmxJd1ZtTlJNamwwWTBkR2RXVlRTVGRqZW05NlRtcHZhVUZJUW05alJWSjJXVE5XZEZwWE5UQmlNMHBqVlcxV2JXSkhWbXBrUjJ4MllteDRSMk5ZVG14aVowSjFXVmN4YkVscWRIcFBhbU0yU1d0T2RtSllRbWhpYm10cFR6TXhlazlxVVRGUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UkdKSFJucGpNVGhCV2tjNWFsRnRlSFpaTW5OcFR6QTBOMk42YnpCT1ZHOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFFeWVHaGpNMDVtUVVkR2FXTXpVbmxaVjA0d1NXcDBhVTlxUVRkamVtOHdUV3B2YVVGSVFtOWpSVkoyV1ROV2RGcFhOVEJpTTBwalZXMVdiV0pIVm1wa1IyeDJZbXg0VVdGSVFtTlJNbmhvWXpOT1prRkhXbkJpYlVaelNXcDBhVTlxUVRkamVtOHdUWHB2YVVGSVFtOWpSVkoyV1ROV2RGcFhOVEJpTTBwalZXMVdiV0pIVm1wa1IyeDJZbXg0VVdGSVFtTlJNbmhvWXpOT1prRklRbWhqYlZaMVpFTkpOMVI2YjNwTlJHOXBZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJWcDRZekpXZFVscWIzbFBiblI2VDJwTk0wOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEZXbmhqTWxaMVFVZGFlR015Vm5WSmFuUjZUMnBKZWs5cFNtTlNiVVp5V2xoS1kxVklTblprYld4cldsaEtZMUV5T1hSalIwWjFaVk5KTjJONmIzcE9hbTlwUVVoQ2IyTkZVblpaTTFaMFdsYzFNR0l6U21OVmJWWnRZa2RXYW1SSGJIWmliSGhIWTFoT2JHSm5RblZaVnpGc1NXcDBlazlxWXpaSmEwNTJZbGhDYUdKdWEybFBNekY2VDJwUk0wOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oRVlrZEdlbU14T0VGaFZ6RjNZa2RXZEZwWE5UQmplVWszV1ZSdmQwOXVkRGxqZW04d1RtcHZhVUZJUW05alJWSjJXVE5XZEZwWE5UQmlNMHBqVlcxV2JXSkhWbXBrUjJ4MllteDRVV0ZJUW1OUk1uaG9Zek5PWmtGSFRuWmliazR3V1ZjMU1HTjVTVGRaVkc5M1QyNTBPV042YnpCT2VtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFFeWVHaGpNMDVtUVVoQ2VXSXpRbXhqYmxKd1dsaE5hVTh5UlRaT1JIQTNZM3B2TUU1NmIybFlSVnBvWVRKV2VWaEdRbmxpTTFwd1drZFdlVmhIZEdoWU1HUkdXRVZPZG1KWVFtaGlibXMyVDJsU2FtSXlNWGRaVnpVMVZVaEtiRnB0YkRSYVdFMXBUekE0TmsxNll6Wkpia0p2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVlVoS2RtTkhWbmxrU0d0cFQycGpObVV6VFRaT1JGRTJTV2RDZDJGSVFrVmlNazR4WWxkV2RXUkhPWGxZUmtwc1dtMTRiRmt6VW5CaU1qVmpWVWRvZDFoR1FubGlNMEpzWTI1U05VRkhXbmhqTWxaMVNXcDBVRTlxVFhkUGFVcDNZVWhDUldJeVRqRmlWMVoxWkVjNWVWaEdTbXhhYlhoc1dUTlNjR0l5TldOU2JrWjZXbGMwYVU5cVNUWmxNMDAyVFhwak5rbG5RbmRoU0VKRllqSk9NV0pYVm5Wa1J6bDVXRVpLYkZwdGVHeFpNMUp3WWpJMVkxSnVSbnBhVnpSQldtNUdlbHBYTkdsUE0wMDJUa1JqTmtsc2VFZFpWM1JzWTJ4NFVXTnRPVEpoVjFKc1kyeDRjbGxXT1VoU1ZuaEVZakl4ZDFsWE5UVlBhbTlyV1RJNWRHTkhSblZsVmtKNVdsZGFjR1ZIVm5wSmFuUjZUMnBOTWs5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoRlduaGpNbFoxUVVjMWFHSlhWV2xQTTAwMlRWUlZOa2x0VG5aaVdFSm9ZbTVzVVdOdFZtMWhXR2hzWTNsSk4yWllUVFpPUkdNMlNXZENkMkZJUWtWaU1rNHhZbGRXZFdSSE9YbFlSa3BzV20xNGJGa3pVbkJpTWpWalZVZG9kMWhHUW5saU0wSnNZMjVTTlVGSFVuWlpNRXB6WWpKT2NrbHFkRTlQTTAwMlRrUlJOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJrSjVZak5DYkdOdVVqVkJTRkkxWTBkV2VrbHFkR2hQYWtFMlpUTXhlazlxVVRKUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0VVdOdE9YZGFXRW93WlZGQ2ExcFhXbWhrVjNnd1NXcDBlazlxUlRKTmVtOXBXVmhLZVZsWWEyODBXVTl2TkZsUFpUUlpUMmhNUTBSb1p6WnFhR2MxTjJobk5rVnpTVTlIUkhGUFIwUnVkVWRFYjFOM1p6UlpUMmcwV1U5b1RFTkVhR2MyU0dobk5rVnpTVTlIUkc5bFIwUnZVM2RuTkZsUFdqUlpUMmhNUTBSb1p6WklhR2MyUldjMFdVOWFORmxQWkRSWlQyYzBXVTlsTkZsUFpEUlpUMmMwV1U5Uk5GbFBjVFJaVDFrMFdVOVJURU5FYUdjMWFtaG5OWE56U1U5SFJHOWxSMFJ1ZFVkRWIxTjNaelJaVDFvMFdVOWtORmxQWkRSWlQyVTBXVTlWTkZsUFp6UlpUMUUwV1U5cE5GbFBXVFJaVDFZMFdVOVpTMU5KTjJONmJ6Qk9WRzlwUVVoQ2IyTkZVblpaTTFaMFdsYzFNR0l6U21OVmJWWnRZa2RXYW1SSGJIWmliSGhSWVVoQ1kxVklTblpqUjFaNVpFaHJRV016VW1oa1IyeHFTV3AwYVU5cVJUZGplbTh3VDFSdmFVRklRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFVXRklRbU5WU0VwMlkwZFdlV1JJYTBGa2JXeDZZVmRLY0dKSGJEQmxVMGszVkhwdmVrOVViMmxqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oWFlWaE9jRmx0YkhOaFdGSTFTV3B2ZUU5dWRIcFBhbFY0VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRmRoV0U1d1dXMXNjMkZZVWpWQlNGcHdZekpzYVdGWGVIQmtTR3RwVHpOTk5rOVViMmxqU0VwMlpFZFdhbVJIVm10SmFuUTVZM3B2TUU1NmIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVlVoS2RtTkhWbmxrU0d0QllrYzVhbGxZVW5CaU1qUnBUekE0TmsxNlRUWkpia0p2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VFMWlNazVvWkVkc2RtSnBTVFpOYW5BM1kzcHZNRTVVYjJsQlNFSnZZMFZTZGxrelZuUmFWelV3WWpOS1kxVnRWbTFpUjFacVpFZHNkbUpzZUUxaU1rNW9aRWRzZG1KblFuTmhWelZzVkc1V2RGbHRWbmxKYW5Sd1QycG5OMk42YnpCT2VtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaE5ZakpPYUdSSGJIWmlaMEpxWWpKNE1XSlhOVTlrVnpGcFdsaEphVTh5YXpaTlJIUTVabGhOTms1VVJUWkpiSGhIV1ZkMGJHTnNlRkZqYlRreVlWZFNiR05zZUhKWlZqbElVbFo0UkdJeU1YZFpWelUxVDJwdmExa3lPWFJqUjBaMVpWVTFhR0pYVmxSa1YxcHRZVmhvYkdONVNUZFVlbTk2VG5wdmFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRkZqYlRsM1dsaEtNR1ZUU1RaT2VuQTNZM3B2TUU1RWIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVlVoS2RtTkhWbmxrU0d0QldtNUdlbHBYTkdsUE1EZzJUWHBCTmtsdVFtOWpSVkoyV1ROV2RGcFhOVEJpTTBwalZXMVdiV0pIVm1wa1IyeDJZbXg0UjJOWVRteGlhVWsyVFdwd04yTjZiM3BPZW05cFFVaENiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoSFkxaE9iR0puUW0xaldFNXNZbWxKTjJONmJ6Rk5WRzlwV0VWYWFHRXlWbmxZUmtKNVlqTmFjRnBIVm5sWVIzUm9XREJrUmxoRlRuWmlXRUpvWW01ck5rOXBVbXBpTWpGM1dWYzFOVlJ0Um5SYVZrNHhXbTFhY0dWSFZucEphblI2VDJwTk1rOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEZXbmhqTWxaMVFVYzFhR0pYVldsUE0wMDJUVlJyTmtsdFRuWmlXRUpvWW01c1QxbFhNV3hWTTFadFdtMXNORnBZVFdsUE16RjZUMnBSTTA5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhSWTIwNWQxcFlTakJsVVVKcllqSk9RMkpIT1dwaGVVazNWR3AwZWs5cVVUQlBhVWxCWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFVXTnRPWGRhV0Vvd1pWRkNNR1ZZUW14amVVazNXVlJ2ZDA5dWREbGplbTh3VG1wdmFVRklRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFVXRklRbU5WU0VwMlkwZFdlV1JJYTBGYVIxWnRXVmhXYzJSRFNUZGplbTk1VGxSck5rbHRSbmxqYlVZMVMwOUhSRzlsUjBSclQwZEVhMlZIUkhKbFIwUnVVM2RuTkZsUFZUUlpUMncwV1U5b05GbFBaVFJaVDFVMFdVOVVORmxQV1RSWlQzRTBXVTlaTkZsUFVVeERSR2huTlRkb1p6WkVhR2MxTTJobk5YWm9aelZuYzBsUFIwUnRaVWRFYm1WSFJHMHJSMFJ1ZFVkRWJYVkhSR3hQUjBSd1pVZEViMlZIUkcxRGQyYzBXVTlSTkZsUFZqUlpUMmswV1U5a1RFTkVhR2MxY21obk5XcG9aelZpYUdjMWFtaG5OWHBvWnpWTWFHYzFaM05KVDBkRWJDdEhSRzlQUjBSclQwZEViMlZIUkd3clIwUnRRM2RuTkZsUFZUUlpUMWswV1U5VU5GbFBXVXhEUkdobk5UZG9aelZ5YUdjMlVHaG5Oa2hvWnpWbmMwbFBSMFJ0ZFVkRWEwOUhSR3RsUjBSdFEzZG5ORmxQV2pSWlQxRTBXVTlXTkZsUGJ6UlpUMWswV1U5bk5GbFBXVXhEUVdjMFdVOVVORmxQVVVsUFIwUnRaVWRFYm1WSFJHMHJSMFJ1ZFVkRWEwOUhSRzVQUjBSdFQwZEVhME5yYVU4elRUWk9SRlUyU1dkQ2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVlVkb2QxaEdRbmxpTTBKc1kyNVNOVUZJVGpCWldGSndXWGxKTjFscWIzaFBNMDAyVGtSck5rbG5RbmRoU0VKRllqSk9NV0pYVm5Wa1J6bDVXRVpLYkZwdGVHeFpNMUp3WWpJMVkxVkhhSGRZUmtKNVlqTkNiR051VWpWQlNGcHdZekpzYVdGWGVIQmtTR3RwVHpBNE5rMTZhelpKYmtKdlkwVlNkbGt6Vm5SYVZ6VXdZak5LWTFWdFZtMWlSMVpxWkVkc2RtSnNlRkZoU0VKalZtMXNlbUZYU25CaVIyd3daVk5KTmsxVWNEZGplbTh4VFZSdmFVRklRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFVXRklRbU5XYld4NllWZEtjR0pIYkRCbFVVSXlZVmhPY0ZsdGJITmhXRkkxU1dwMGVrOXFhelpKYmtKNVlqTlNiRmt6VW14YVEwazNabGhOTms1RVl6WkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlZSMmgzV0VaQ2VXSXpRbXhqYmxJMVFVZDRkbGt5UmpCaFZ6bDFTV3AwVUU5cVRYcFBhVXAzWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlVSemxxV1ZoU2NHSXlOR2xQYWtrMlpUTk5OazVFVlRaSlowSjNZVWhDUldJeVRqRmlWMVoxWkVjNWVWaEdTbXhhYlhoc1dUTlNjR0l5TldOVVJ6bHFXVmhTY0dJeU5FRmlSMngxV2xVMU1XSlhTbXhqYVVrM1lWUnZlRTFxZEhwUGFsRXpUMmxKUVdOSGFIZFNSemxxWkZjeGJHSnVVblpqYkhoVFdsZGFjMXBYVGpCaFZ6bDFXRVY0ZGxreVJqQmhWemwxUVVkT2RtSklWblJpYXpVeFlsZEtiR05wU1RkaFZHOTNUek14T1dONmJ6Qk9lbTlwV0VWYWFHRXlWbmxZUmtKNVlqTmFjRnBIVm5sWVIzUm9XREJrUmxoRlRuWmlXRUpvWW01ck5rOXBVbXBpTWpGM1dWYzFOVkpYZUd4aVYxWjFaRWhOYVU4d09EWk5lbU0yU1c1Q2IyTkZVblpaTTFaMFdsYzFNR0l6U21OVmJWWnRZa2RXYW1SSGJIWmliSGhSWVVoQ1kxVklTblpqUjFaNVpFaHJhVTlxWXpabE0wMDJUa1JSTmtsblFuZGhTRUpGWWpKT01XSlhWblZrUnpsNVdFWktiRnB0ZUd4Wk0xSndZakkxWTFWSGFIZFlSa0o1WWpOQ2JHTnVValZCUjFwNFl6SldkVWxxZEZCUGFrMTNUMmxLZDJGSVFrVmlNazR4WWxkV2RXUkhPWGxZUmtwc1dtMTRiRmt6VW5CaU1qVmpVbTVHZWxwWE5HbFBha2syWlROTk5rMTZZelpKWjBKM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05TYmtaNldsYzBRVnB1Um5wYVZ6UnBUek5OTms1RVl6WkpiSGhIV1ZkMGJHTnNlRkZqYlRreVlWZFNiR05zZUhKWlZqbElVbFo0UkdJeU1YZFpWelUxVDJwdmExa3lPWFJqUjBaMVpWVldjMXBYTVd4aWJsSjZTV3AwZWs5cVRUSlBhVWxCWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSVnA0WXpKV2RVRkhOV2hpVjFWcFR6Tk5OazFVVlRaSmJVNTJZbGhDYUdKdWJFWmlSMVowV2xjMU1HTjVTVGRtV0UwMlRrUmpOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJrSjVZak5DYkdOdVVqVkJSMUoyV1RCS2MySXlUbkpKYW5SUFR6Tk5OazVFVVRaSlowSjNZVWhDUldJeVRqRmlWMVoxWkVjNWVWaEdTbXhhYlhoc1dUTlNjR0l5TldOVlIyaDNXRVpDZVdJelFteGpibEkxUVVoU05XTkhWbnBKYW5Sb1QycEJObVV6TVhwUGFsRXlUMmxKUVdOSGFIZFNSemxxWkZjeGJHSnVVblpqYkhoVFdsZGFjMXBYVGpCaFZ6bDFXRVpDYjJOR2VGRmpiVGwzV2xoS01HVlJRbXRhVjFwb1pGZDRNRWxxZEhwUGFrMTVUVlJ2YVZsWVNubFpXR3R2TkZsUGNUUlpUMVUwV1U5aVRFTkVhR2MxVEdobk5WUm9aelV3YzBsUFIwUndaVWRFYTA5SFJHOURkMmMwV1U5c05GbFBXVFJaVDJKTVEwUm9aelZ5YUdjMWFtaG5ObFJvWnpaSmMwbFBSMFJ2ZFVkRWJFOUhSRzExUjBSc1EzZG5ORmxQWnpSWlQxRTBXVTlVTkZsUFdUUlpUMlJNUTBSb1p6Wk1hR2MyUkdobk5VUm9aelY2YUdjMlJYTkpUMGRFYTA5SFJHMTFSMFJ0SzBkRWEwOUhSRzlUZDJjMFdVOWlORmxQVlRSWlQyazBXVTluTkZsUFpFeERSR2huTlhab1p6VXphR2MyVEdobk5UTm9aelpCYzBsUFIwUnZkVWRFYkU5SFJIQlRkMmMwV1U5b05GbFBVVFJaVDJNMFdVOXBORmxQVlRSWlQyeE1RMFJvWnpWVWFHYzFjbWhuTlZSb1p6WllhR2MyVEdobk5rUm9aelV3YzBsUFIwUnZUMGRFYkU5SFJHdFBSMFJ3WlVkRWIzVkhSRzVUZDJjMFdVOXBORmxQVlRSWlQydzBXVTlvTkZsUGFUUlpUMWswV1U5aFRFTkVhR2MxYm1obk5VUm9aelZJYUdjMVZHaG5OVzl6U1U5SFJHMHJSMFJyVDBkRWJHVkhSR3RQUjBSdGFYZG5ORmxQYVRSWlQxVTBXVTloVEVORWFHYzJUR2huTlZSb1p6WllhR2MxZW1obk5UQndTV3AwZWs5cVVURlBhVWxCWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFVXTnRPWGRhV0Vvd1pWRkNlbVJIUmpCaFYwMXBUekpKTmsxVWRIcFBhbEUxVDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRkZqYlRsM1dsaEtNR1ZSUWpKaFdFNXdXVzFzYzJGWVVqVkphblJRVDJwTk5VOXBTbmRoU0VKRllqSk9NV0pYVm5Wa1J6bDVXRVpLYkZwdGVHeFpNMUp3WWpJMVkxVkhhSGRZUmxwd1l6SnNhV0ZYZUhCa1NHdHBUMnBGTm1VelRUWk9WRVUyU1dkQ2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVlVkb2QxaEdXbkJqTW14cFlWZDRjR1JJYTBGa2JXeDZZVmRLY0dKSGJEQmxVMGszWTNwdk5VOXBTbmRqYlRrd1dsZE9NRnBYVVdsUE16RjZUMnBSTTA5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhSWTIwNWQxcFlTakJsVVVKellqSk9hR1JIYkhaaWFVazNWSHB2ZWsxNmIybGpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoRmVIWlpNa1l3WVZjNWRVbHFiM2xQYm5SNlQycFJNVTlwU1VGalIyaDNVa2M1YW1SWE1XeGlibEoyWTJ4NFUxcFhXbk5hVjA0d1lWYzVkVmhGZUhaWk1rWXdZVmM1ZFVGSGVIQmliVlpQWkZjeGFWcFlTV2xQTW1zMlRWUmpOMk42YnpCT2VtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaE5ZakpPYUdSSGJIWmlaMEpxWWpKNE1XSlhOVTlrVnpGcFdsaEphVTh5YXpaTlJIUTVabGhOTms1VVFUWkpiSGhIV1ZkMGJHTnNlRkZqYlRreVlWZFNiR05zZUhKWlZqbElVbFo0UkdJeU1YZFpWelUxVDJwdmExa3lPWFJqUjBaMVpWVTFhR0pYVmtkaU0wcDBXVmhTZWtscWRGQlBhazB6VDJsS2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVlVkb2QxaEdRbmxpTTBKc1kyNVNOVWxxYnpOUGJuUjZUMnBSTUU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhSWTIwNWQxcFlTakJsVVVKdFkxaE9iR0pwU1RkVWVtOTZUVVJ2YVdOSGFIZFNSemxxWkZjeGJHSnVVblpqYkhoVFdsZGFjMXBYVGpCaFZ6bDFXRVZhZUdNeVZuVkphbTk1VDI1MGVrOXFUVE5QYVVsQlkwZG9kMUpIT1dwa1Z6RnNZbTVTZG1Oc2VGTmFWMXB6V2xkT01HRlhPWFZZUlZwNFl6SldkVUZIV25oak1sWjFTV3AwZWs5cVZYZFBhVXBqVW0xR2NscFlTbU5WU0VwMlpHMXNhMXBZU21OaE1rWm1VakJXWTFFeU9YUmpSMFoxWlZSdk5rcEhUblppV0VKb1ltNXNUMWxYTVd4U2JUbDVZbGRHTUdONVNUZGplbTk2VG1wdmFVRklRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFIyTllUbXhpWjBKMVdWY3hiRWxxZEhwUGFrVTBUMmxLYW1JeU1YZFpWelUxVkcxR2RGcFZXblpqYlRGb1pFaE5hVTh6TVhwUGFsRXpUMmxKUVdOSGFIZFNSemxxWkZjeGJHSnVVblpqYkhoVFdsZGFjMXBYVGpCaFZ6bDFXRVpDYjJOR2VGRmpiVGwzV2xoS01HVlJRbXRpTWs1RFlrYzVhbUY1U1RkVWFuUjZUMnBSTUU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhSWTIwNWQxcFlTakJsVVVJd1pWaENiR041U1RkWlZHOTNUMjUwT1dONmJ6Qk9hbTlwUVVoQ2IyTkZVblpaTTFaMFdsYzFNR0l6U21OVmJWWnRZa2RXYW1SSGJIWmliSGhSWVVoQ1kxVklTblpqUjFaNVpFaHJRVnBIVm0xWldGWnpaRU5KTjJONmIzcE9hbU0yU1cxR2VXTnRSalZMU0hRM1dUSTVkR05IUm5WbFZrSjVXbGRhY0dWSU1UbEpTSFEzV1RJNWRHTkhSblZsVlRWb1lsZFdSbUpIVm5SYVZ6VXdabGd4TjJVeVRuWmlXRUpvWW01c1QxbFhNV3hWTTFadFdtMXNOR1pZTUhOSlNIUTNXVEk1ZEdOSFJuVmxWa0o1V2xkYWNHVklNVGxKU0hRM1dUSTVkR05IUm5WbFZUVm9ZbGRXUm1KSFZuUmFWelV3WmxneE4yVXlUblppV0VKb1ltNXNUMWxYTVd4U1YzaHNZbGRXZFdSSU1UbGxNM1JxWWpJeGQxbFhOVFZVYlVaMFdsWk9NVnB0V25CbFNERTVURU5DTjJVeVRuWmlXRUpvWW01c1VXTnRWbTFoV0dnNVpsTkNOMlV5VG5aaVdFSm9ZbTVzVDFsWE1XeFNWM2hzWWxkV2RXUklNVGxsTTNScVlqSXhkMWxYTlRWVWJVWjBXbFZXYzFwWE1XeGlibEk1WmxoME4xa3lPWFJqUjBaMVpWVTFhR0pYVmtaaVIxWjBXbGMxTUdaWU1UZGxNazUyWWxoQ2FHSnViRTlaVnpGc1ZUTldiVnB0YkRSbVdEQnpTVWgwTjFreU9YUmpSMFoxWlZaQ2VWcFhXbkJsU0RFNVNVaDBOMWt5T1hSalIwWjFaVlUxYUdKWFZrWmlSMVowV2xjMU1HWllNVGRsTWs1MllsaENhR0p1YkU5WlZ6RnNVbGQ0YkdKWFZuVmtTREU1WlROMGFtSXlNWGRaVnpVMVZHMUdkRnBWVm5OYVZ6RnNZbTVTT1daWWREZFpNamwwWTBkR2RXVlZOV2hpVjFaVVpGZGFiV0ZZYURsbVUydHBUek5OTms1RVZUWkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlZSMmgzV0VaQ2VXSXpRbXhqYmxJMVFVaE9NRmxZVW5CWmVVazNXV3B2ZUU4elRUWk9SR3MyU1dkQ2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVlVkb2QxaEdRbmxpTTBKc1kyNVNOVUZJV25Cak1teHBZVmQ0Y0dSSWEybFBNRGcyVFhwck5rbHVRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFVXRklRbU5XYld4NllWZEtjR0pIYkRCbFUwazJUVlJ3TjJONmJ6Rk5WRzlwUVVoQ2IyTkZVblpaTTFaMFdsYzFNR0l6U21OVmJWWnRZa2RXYW1SSGJIWmliSGhSWVVoQ1kxWnRiSHBoVjBwd1lrZHNNR1ZSUWpKaFdFNXdXVzFzYzJGWVVqVkphblI2VDJwck5rbHVRbmxpTTFKc1dUTlNiRnBEU1RkbVdFMDJUa1JqTmtsblFuZGhTRUpGWWpKT01XSlhWblZrUnpsNVdFWktiRnB0ZUd4Wk0xSndZakkxWTFWSGFIZFlSa0o1WWpOQ2JHTnVValZCUjNoMldUSkdNR0ZYT1hWSmFuUlFUMnBOZWs5cFNuZGhTRUpGWWpKT01XSlhWblZrUnpsNVdFWktiRnB0ZUd4Wk0xSndZakkxWTFSSE9XcFpXRkp3WWpJMGFVOXFTVFpsTTAwMlRrUlZOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVJIT1dwWldGSndZakkwUVdKSGJIVmFWVFV4WWxkS2JHTnBTVGRoVkc5NVRYcDBlazlxVVROUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJYaDJXVEpHTUdGWE9YVkJSMDUyWWtoV2RHSnJOVEZpVjBwc1kybEpOMkZVYjNkUE16RTVabGhOTms1RVVUWkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlZSMmgzV0VWT2MxbFlUbnBZZDBKMFdsaFNiMkl5VW5wSmFuUm9UMnBSTm1VelRUWk9SRUUyU1d4NFIxbFhkR3hqYkhoUlkyMDVNbUZYVW14amJIaHlXVlk1U0ZKV2VFUmlNakYzV1ZjMU5VOXFjR3BpTWpGM1dWYzFOVXREYTJsUE1EZzJUWHBWTmtsdVFtOWpSVkoyV1ROV2RGcFhOVEJpTTBwalZXMVdiV0pIVm1wa1IyeDJZbXg0VVdGSVFtTlVWMVl3WVVjNWEwbHFielZQYm5SNlQycFJNVTlwU1VGalIyaDNVa2M1YW1SWE1XeGlibEoyWTJ4NFUxcFhXbk5hVjA0d1lWYzVkVmhHUW05alJuaE9XbGhTYjJJeVVVRmFSemxxVVcxNGRsa3ljMmxQTURnMlRYcE5Oa2x1UW05alJWSjJXVE5XZEZwWE5UQmlNMHBqVlcxV2JXSkhWbXBrUjJ4MllteDRSV0l5VGtOaVJ6bHFZWGxKTms1NmNEZGplbTh3VFdwdmFVRklRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFJXSXlUa05pUnpscVlYZENlbVJYTVhSWldFbzFTV3AwZWs5cVFUWkphVWszWTNwdk1FNXFiMmxCU0VKdlkwVlNkbGt6Vm5SYVZ6VXdZak5LWTFWdFZtMWlSMVpxWkVkc2RtSnNlRVZpTWs1RFlrYzVhbUYzUW10YVdFNXFZMjFzZDJSSGJIWmlhVWszVkhwdk1FNVViMmxqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEZVblpaTUVwellqSk9jbGhGVW14ak1rNTVZVmhDTUdGWE9YVkphbTk1VDI1MGVrOXFWVFZQYVVsQlkwZG9kMUpIT1dwa1Z6RnNZbTVTZG1Oc2VGTmFWMXB6V2xkT01HRlhPWFZZUlZKMldUQktjMkl5VG5KWVJWSnNZekpPZVdGWVFqQmhWemwxUVVkS2RscEliRlZhVnpGM1lrZEdNRnBUU1RkamVtOTNUMmxKYVU4elRUWk9WRVUyU1dkQ2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVWtjNWFsRnRlSFpaTW5SalVrZFdlbGt6U25CalNGSndZakkwUVdSSFJtNWplVWszV1ZSdmQwOXVkRGxtV0UwMlRYcHJOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMUpIT1dwUmJYaDJXVEp6UVdSSFJtNWplVWszV1ZSdmVFOXVkSEJQYWtFM1ZIcHZNRTVxYjJsalIyaDNVa2M1YW1SWE1XeGlibEoyWTJ4NFUxcFhXbk5hVjA0d1lWYzVkVmhGVW5aWk1FcHpZakpPY2xoR1VtaGFNMDVqVWpKV2RWcFlTbkJaZVVrMlRXcHdOMk42YnpOUGFVbEJTMmRDZFZsWE1XeEphblI2VDJwak5rbHRWalJaVnpGM1lrZFZhVTh6VFRaTlZGRTJTV2RCY1VGSFVteGpNazU1WVZoQ01HRlhPWFZKYW5SUVQycFJNVTlwU25kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMUpIT1dwUmJYaDJXVEowWTFKSFZucFpNMHB3WTBoU2NHSXlOR2xQYWtrMlpUTk5OazVVYXpaSlowSjNZVWhDUldJeVRqRmlWMVoxWkVjNWVWaEdTbXhhYlhoc1dUTlNjR0l5TldOU1J6bHFVVzE0ZGxreWRHTlNSMVo2V1ROS2NHTklVbkJpTWpSQldXMDVhMlZXVW14aVdFSnpXVmhTYkVscWRIcFBhbGsxVDJsSmJqUlpUMWswV1U5aVNVOUhSR3hQUjBSdGRVZEViRTlIUkhCbFIwUnZkVWRFYjA5SFJHNWxSMFJyVDBkRWJYVkhSRzByUjBSclQwZEViMlZIUkd0MVIwUnNUMGRFYm1WSFJHOWxSMFJyVDBkRWEyVkhSSEpsUjBSdVUyTnBUek5OTms1VVJUWkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlNSemxxVVcxNGRsa3lkR05TUjFaNldUTktjR05JVW5CaU1qUkJaRWRHYm1ONVNUZFpWRzkzVDI1ME9XWllNVGxqZW04d1RXcHZhVUZJUW05alJWSjJXVE5XZEZwWE5UQmlNMHBqVlcxV2JXSkhWbXBrUjJ4MllteDRSV0l5VGtOaVJ6bHFZWGRDYW1JeU5UQmFXR2d3U1dwMFVFOXFUVFJQYVVwM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05XU0d4M1dsaE9ZMUV5T1hWa1IxWTBaRU5KTmsxcWNEZGplbTh3VDFSdmFVRklRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFZXVllRbXhqTVhoRVlqSTFNRnBZYURCQlJ6Vm9ZbGRXZW1OSFJtcGFVMGszWTNwdmVVMUViMmxTYlVaeVdsaEtZMVZJU25aa2JXeHJXbGhLWTJFeVJtWlNNRlZwVHpOTk5rNVVXVFpKWjBKM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05XU0d4M1dsaE9ZMUV5T1hWa1IxWTBaRUZDZFZsWE1XeGpNMEpvV1RKV1FtSkhiR2hqTWxaNlNXcDBhRTlxUVRabE16RTVZM3B2TUUxNmIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VFVmlNazVEWWtjNWFtRjNRbk5pTWs1b1pFZHNkbUpwU1RkVWVtOTZUWHB2YVdOSGFIZFNSemxxWkZjeGJHSnVVblpqYkhoVFdsZGFjMXBYVGpCaFZ6bDFXRVY0ZGxreVJqQmhWemwxU1dwdmVVOXVkSHBQYWxFeFQybEpRV05IYUhkU1J6bHFaRmN4YkdKdVVuWmpiSGhUV2xkYWMxcFhUakJoVnpsMVdFVjRkbGt5UmpCaFZ6bDFRVWQ0Y0dKdFZrOWtWekZwV2xoSmFVOHlhelpOZWtVM1kzcHZNRTU2YjJsQlNFSnZZMFZTZGxrelZuUmFWelV3WWpOS1kxVnRWbTFpUjFacVpFZHNkbUpzZUUxaU1rNW9aRWRzZG1KblFtcGlNbmd4WWxjMVQyUlhNV2xhV0VscFR6SnJOazFFZERsamVtOHhUVVJ2YVVGSVFtOWpSVkoyV1ROV2RGcFhOVEJpTTBwalZXMVdiV0pIVm1wa1IyeDJZbXg0UldJeVRrTmlSemxxWVhkQ2NHTXhVbXhpV0VKeldWaFNiRlV6VW1oamJsRnBUekpKTmsxRWRIcFBhbEUwVDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VWU2Rsa3dTbk5pTWs1eVFVZHNlbFpIVm5SalIzaG9aRWRXUm1KdFVXbFBNa2syVFVSME9XTjZiekJOYW05cFFVaENiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoUllVaENZMVJYVmpCaFJ6bHJRVWRhZUdNeVZuVkphblJRVDJwTmQwOXBTbmRoU0VKRllqSk9NV0pYVm5Wa1J6bDVXRVpLYkZwdGVHeFpNMUp3WWpJMVkxSnVSbnBhVnpScFQycEpObVV6VFRaTmVtTTJTV2RDZDJGSVFrVmlNazR4WWxkV2RXUkhPWGxZUmtwc1dtMTRiRmt6VW5CaU1qVmpVbTVHZWxwWE5FRmFia1o2V2xjMGFVOHpUVFpPUkVFMlNXeDRSMWxYZEd4amJIaFJZMjA1TW1GWFVteGpiSGh5V1ZZNVNGSldlRVJpTWpGM1dWYzFOVTlxY0dwaU1qRjNXVmMxTlV0RGEybFBNMDAyVFhwWk5rbG5RbmRoU0VKRllqSk9NV0pYVm5Wa1J6bDVXRVpLYkZwdGVHeFpNMUp3WWpJMVkxSnVSbnBhVnpSQlltMUdkRnBUU1RkamVtOHpUMmxLYW1JeU1YZFpWelUxU1dwME9XTjZiekJPVkc5cFFVaENiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoUllVaENZMVJYVmpCaFJ6bHJRVWRHYVdNelVubFpWMDR3U1dwMGFVOXFRVGRqZW04d1RXcHZhVUZJUW05alJWSjJXVE5XZEZwWE5UQmlNMHBqVlcxV2JXSkhWbXBrUjJ4MllteDRVV0ZJUW1OVVYxWXdZVWM1YTBGSFduQmliVVp6U1dwMGFVOXFRVGRqZW04d1RYcHZhVUZJUW05alJWSjJXVE5XZEZwWE5UQmlNMHBqVlcxV2JXSkhWbXBrUjJ4MllteDRVV0ZJUW1OVVYxWXdZVWM1YTBGSVRqQlpXRkp3V1hsSk4xbHFiM2RQTTAwMlRrUmpOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJURnNaRWRvZGxwQlFqSmhXRTV3V1cxc2MyRllValZKYW5SUVQycE5OVTlwU25kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJscHdZekpzYVdGWGVIQmtTR3RwVDJwRk5tVXpUVFpPVkVVMlNXZENkMkZJUWtWaU1rNHhZbGRXZFdSSE9YbFlSa3BzV20xNGJGa3pVbkJpTWpWalZVZG9kMWhHV25Cak1teHBZVmQ0Y0dSSWEwRmtiV3g2WVZkS2NHSkhiREJsVTBrM1kzcHZNazlwU25ka1YwcHpZVmROYVU4ek1YcFBhbEV5VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRTVhV0ZKdllqSlJRVmxZU201a1Z6RnNZbTVTZWtscWRHaFBha0UyWlRNeGVrOXFVVEZQYVVsQlkwZG9kMUpIT1dwa1Z6RnNZbTVTZG1Oc2VGTmFWMXB6V2xkT01HRlhPWFZZUmtKdlkwWjRUbHBZVW05aU1sRkJZa2M1YWxsWVVuQmlNalJwVHpBNE5rMTZUVFpKYmtKdlkwVlNkbGt6Vm5SYVZ6VXdZak5LWTFWdFZtMWlSMVpxWkVkc2RtSnNlRTFpTWs1b1pFZHNkbUpwU1RaTmFuQTNZM3B2TUU1VWIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VFMWlNazVvWkVkc2RtSm5Rbk5oVnpWc1ZHNVdkRmx0Vm5sSmFuUndUMnBOTUU4elRUWk9SR00yU1dkQ2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVkVjNWFsbFlVbkJpTWpSQldUSTVjMlJYTVhWVWJsWjBXVzFXZVVscWRIQlBha0UzWmxoTk5rNUVZelpKWjBKM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05WUjJoM1dFVXhiR1JIYUhaYVFVSjVXbGhTTVdOdE5WVmxXRUpzU1dwMFVFOXFUVE5QYVVwM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05XU0d4M1dsaE9ZMVJYYkRSYVYxSm1TV3B2ZDA5dWREbG1XRTAyVGtSWk5rbHNlRWRaVjNSc1kyeDRVV050T1RKaFYxSnNZMng0Y2xsV09VaFNWbmhFWWpJeGQxbFhOVFZQYW5CcVlqSXhkMWxYTlRWVlNFcHNXbTFzTkV0RGEybFBNRGcyVFhwVk5rbHVRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFVXRklRbU5VVjFZd1lVYzVhMGxxYnpWUGJuUjZUMnBSTVU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhPV2xoU2IySXlVVUZhUnpscVVXMTRkbGt5YzJsUE1EUTNZM3B2TUUxcWIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVkZkV01HRkhPV3RCUjFwNFl6SldkVWxxZEZCUGFrMTNUMmxLZDJGSVFrVmlNazR4WWxkV2RXUkhPWGxZUmtwc1dtMTRiRmt6VW5CaU1qVmpVbTVHZWxwWE5HbFBha2syWlROTk5rMTZZelpKWjBKM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05TYmtaNldsYzBRVnB1Um5wYVZ6UnBUek5OTms1RVdUWkpiSGhIV1ZkMGJHTnNlRkZqYlRreVlWZFNiR05zZUhKWlZqbElVbFo0UkdJeU1YZFpWelUxVDJwd2FtSXlNWGRaVnpVMVZVaEtiRnB0YkRSTFEydHBUek5OTmsxNldUWkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlNia1o2V2xjMFFXSnRSblJhVTBrM1kzcHZlRTE2YjJsWk1qbDBZMGRHZFdWV1FubGFWMXB3WlVOSk4yWllUVFpPUkZVMlNXZENkMkZJUWtWaU1rNHhZbGRXZFdSSE9YbFlSa3BzV20xNGJGa3pVbkJpTWpWalZVZG9kMWhGTVd4a1IyaDJXa0ZDYUZsdVRqQmpiVVpxWkVOSk4xbHFiM2RQTTAwMlRrUkpOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJURnNaRWRvZGxwQlFtMWhWelZvWWtOSk4xbHFiM2RQTTAwMlRrUk5Oa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJURnNaRWRvZGxwQlFucGtSMFl3WVZkTmFVOHlTVFpOVkhSNlQycFJNMDlwU1VGalIyaDNVa2M1YW1SWE1XeGlibEoyWTJ4NFUxcFhXbk5hVjA0d1lWYzVkVmhHUW05alJuaE9XbGhTYjJJeVVVRmtiV3g2WVZkS2NHSkhiREJsVTBrM1ZIcHZlazlVYjJsalIyaDNVa2M1YW1SWE1XeGlibEoyWTJ4NFUxcFhXbk5hVjA0d1lWYzVkVmhHUW05alJuaFhZVmhPY0ZsdGJITmhXRkkxU1dwdmVFOXVkSHBQYWxWNFQybEpRV05IYUhkU1J6bHFaRmN4YkdKdVVuWmpiSGhUV2xkYWMxcFhUakJoVnpsMVdFWkNiMk5HZUZkaFdFNXdXVzFzYzJGWVVqVkJTRnB3WXpKc2FXRlhlSEJrU0d0cFR6Tk5OazVxYjJsalNGWnBZa2RzYWtscWREbGplbTh3VG1wdmFVRklRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFVXRklRbU5VVjFZd1lVYzVhMEZIUm5sYU0xWjBXbGMxTUdONVNUZFpWRzkzVDI1ME9XTjZiekJPVkc5cFFVaENiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoUllVaENZMVJYVmpCaFJ6bHJRVWQ0ZGxreVJqQmhWemwxU1dwMFVFOXFUWHBQYVVwM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05VUnpscVdWaFNjR0l5TkdsUGFrazJaVE5OTms1RVZUWkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlVSemxxV1ZoU2NHSXlORUZpUjJ4MVdsVTFNV0pYU214amFVazNZVlJ2TUUxVWRIcFBhbEV6VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VWNGRsa3lSakJoVnpsMVFVZE9kbUpJVm5SaWF6VXhZbGRLYkdOcFNUZGhWRzkzVHpNeGVrOXFVVE5QYVVsQlkwZG9kMUpIT1dwa1Z6RnNZbTVTZG1Oc2VGTmFWMXB6V2xkT01HRlhPWFZZUmtKdlkwWjRUbHBZVW05aU1sRkJZMjFXTUdSWVNuVldTR3gzV2xOSk4xUjZiM3BPZW05cFkwZG9kMUpIT1dwa1Z6RnNZbTVTZG1Oc2VGTmFWMXB6V2xkT01HRlhPWFZZUmxJMVkwZFdlbGhGTVhCbFIxWnJXSGxKTmsxRWNEZG1XREY2VDJwVmVFOXBTbU5TYlVaeVdsaEtZMVZJU25aa2JXeHJXbGhLWTJFeVJtWlNNRlpqVVRJNWRHTkhSblZsVkc4MldUSTVkR05IUm5WbFZUVm9ZbGRXUm1KSFZuUmFWelV3UzBOcmFVOHdPRFpOZWxVMlNXNUNiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoUllVaENZMVJYVmpCaFJ6bHJTV3B2TlU5dWRIcFBhbEV4VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRTVhV0ZKdllqSlJRVnBIT1dwUmJYaDJXVEp6YVU4d05EZGplbTh3VFdwdmFVRklRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFVXRklRbU5VVjFZd1lVYzVhMEZIV25oak1sWjFTV3AwVUU5cVRYZFBhVXAzWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlNia1o2V2xjMGFVOXFTVFpsTTAwMlRYcGpOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMUp1Um5wYVZ6UkJXbTVHZWxwWE5HbFBNMDAyVGxSRk5rbHNlRWRaVjNSc1kyeDRVV050T1RKaFYxSnNZMng0Y2xsV09VaFNWbmhFWWpJeGQxbFhOVFZQYW5CcVlqSXhkMWxYTlRWVWJVWjBXbFZXYzFwWE1XeGlibEZ2UzFOSk4yTjZiM3BPYW05cFFVaENiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoSFkxaE9iR0puUW5WWlZ6RnNTV3AwZWs5cVJUUlBhVXBxWWpJeGQxbFhOVFZVYlVaMFdsVldjMXBYTVd4aWJsRnBUek14ZWs5cVVURlBhVWxCWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFRscFlVbTlpTWxGQldWZEtlbVJJU21oWk0xRnBUekpKTmsxRWRIcFBhbEY1VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRTVhV0ZKdllqSlJRVnB0YkhWWlYzZHBUekpKTmsxRWRIcFBhbEY2VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRTVhV0ZKdllqSlJRV016VW1oa1IyeHFTV3AwYVU5cVJUZGplbTh3VG5wdmFVRklRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFVXRklRbU5VVjFZd1lVYzVhMEZJV25Cak1teHBZVmQ0Y0dSSWEybFBNRGcyVFhwck5rbHVRbTlqUlZKMldUTldkRnBYTlRCaU0wcGpWVzFXYldKSFZtcGtSMngyWW14NFVXRklRbU5XYld4NllWZEtjR0pIYkRCbFUwazJUVlJ3TjJONmJ6Rk5WRzlwUVVoQ2IyTkZVblpaTTFaMFdsYzFNR0l6U21OVmJWWnRZa2RXYW1SSGJIWmliSGhSWVVoQ1kxWnRiSHBoVjBwd1lrZHNNR1ZSUWpKaFdFNXdXVzFzYzJGWVVqVkphblI2VDJwWk5rbHVRakZaYlhod1dYbEpOMlpZVFRaT1JGazJTV2RDZDJGSVFrVmlNazR4WWxkV2RXUkhPWGxZUmtwc1dtMTRiRmt6VW5CaU1qVmpWVWRvZDFoRk1XeGtSMmgyV2tGQ2FHTnRaREZpVjFaMVpFaE5hVTh5UlRaTlJIQTNabGhOTms1RVZUWkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlZSMmgzV0VVeGJHUkhhSFphUVVKellqSk9hR1JIYkhaaWFVazNWSHB2ZWsxNmIybGpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoRmVIWlpNa1l3WVZjNWRVbHFiM2xQYm5SNlQycFJNVTlwU1VGalIyaDNVa2M1YW1SWE1XeGlibEoyWTJ4NFUxcFhXbk5hVjA0d1lWYzVkVmhGZUhaWk1rWXdZVmM1ZFVGSGVIQmliVlpQWkZjeGFWcFlTV2xQTW1zMlRrUlpOMk42YnpCT2VtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaE5ZakpPYUdSSGJIWmlaMEpxWWpKNE1XSlhOVTlrVnpGcFdsaEphVTh5YXpaTlJIUTVZM3B2TUU1NmIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVkZkV01HRkhPV3RCU0Vwc1pFaFdlV0pzVWpWalIxVnBUekE0TmsxNll6Wkpia0p2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGVmxXRUpzWXpGNFRtRllhR3hhUmpocFQycEJObVV6TVRsamVtOHhUVVJ2YVZoRldtaGhNbFo1V0VaQ2VXSXpXbkJhUjFaNVdFZDBhRmd3WkVaWVJVNTJZbGhDYUdKdWF6WlBiVTUyWWxoQ2FHSnViRTlaVnpGc1ZUTldiVnB0YkRSTFEydHBUekE0TmsxNlZUWkpia0p2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVkZkV01HRkhPV3RKYW04MVQyNTBlazlxVVRGUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0VGxwWVVtOWlNbEZCV2tjNWFsRnRlSFpaTW5OcFR6QTBOMk42YnpCTmFtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFSWFZqQmhSemxyUVVkYWVHTXlWblZKYW5SUVQycE5kMDlwU25kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMUp1Um5wYVZ6UnBUMnBKTm1VelRUWk5lbU0yU1dkQ2QyRklRa1ZpTWs0eFlsZFdkV1JIT1hsWVJrcHNXbTE0YkZrelVuQmlNalZqVW01R2VscFhORUZhYmtaNldsYzBhVTh6VFRaT1ZFRTJTV3g0UjFsWGRHeGpiSGhSWTIwNU1tRlhVbXhqYkhoeVdWWTVTRkpXZUVSaU1qRjNXVmMxTlU5cWNHcGlNakYzV1ZjMU5WUnRSblJhVms0eFdtMWFjR1ZEWjNCSmFuUjZUMnBOTWs5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoRlduaGpNbFoxUVVjMWFHSlhWV2xQTTAwMlRWUmpOa2x0VG5aaVdFSm9ZbTVzVDFsWE1XeFZNMVp0V20xc05FbHFkRGxqZW04d1RsUnZhVUZJUW05alJWSjJXVE5XZEZwWE5UQmlNMHBqVlcxV2JXSkhWbXBrUjJ4MllteDRVV0ZJUW1OVVYxWXdZVWM1YTBGSFJtbGpNMUo1V1ZkT01FbHFkR2xQYWtFM1kzcHZNRTFxYjJsQlNFSnZZMFZTZGxrelZuUmFWelV3WWpOS1kxVnRWbTFpUjFacVpFZHNkbUpzZUZGaFNFSmpWRmRXTUdGSE9XdEJSMXB3WW0xR2MwbHFkR2xQYWtFM1kzcHZNRTE2YjJsQlNFSnZZMFZTZGxrelZuUmFWelV3WWpOS1kxVnRWbTFpUjFacVpFZHNkbUpzZUZGaFNFSmpWRmRXTUdGSE9XdEJTRTR3V1ZoU2NGbDVTVGRaYW05NFR6Tk5OazVFWXpaSlowSjNZVWhDUldJeVRqRmlWMVoxWkVjNWVWaEdTbXhhYlhoc1dUTlNjR0l5TldOVlIyaDNXRVV4YkdSSGFIWmFRVUl5WVZoT2NGbHRiSE5oV0ZJMVNXcDBVRTlxVFRWUGFVcDNZVWhDUldJeVRqRmlWMVoxWkVjNWVWaEdTbXhhYlhoc1dUTlNjR0l5TldOVlIyaDNXRVphY0dNeWJHbGhWM2h3WkVocmFVOXFSVFpsTTAwMlRsUkZOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJscHdZekpzYVdGWGVIQmtTR3RCWkcxc2VtRlhTbkJpUjJ3d1pWTkpOMk42YnpKUGFVcDNaRmRLYzJGWFRXbFBNekY2VDJwUk1rOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oT1dsaFNiMkl5VVVGWldFcHVaRmN4YkdKdVVucEphblJvVDJwQk5tVXpNWHBQYWxFeFQybEpRV05IYUhkU1J6bHFaRmN4YkdKdVVuWmpiSGhUV2xkYWMxcFhUakJoVnpsMVdFWkNiMk5HZUU1YVdGSnZZakpSUVdKSE9XcFpXRkp3WWpJMGFVOHdPRFpOZWswMlNXNUNiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoTllqSk9hR1JIYkhaaWFVazJUV3B3TjJONmJ6Qk9WRzlwUVVoQ2IyTkZVblpaTTFaMFdsYzFNR0l6U21OVmJWWnRZa2RXYW1SSGJIWmliSGhOWWpKT2FHUkhiSFppWjBKellWYzFiRlJ1Vm5SWmJWWjVTV3AwY0U5cVZYaFBNMDAyVGtSak5rbG5RbmRoU0VKRllqSk9NV0pYVm5Wa1J6bDVXRVpLYkZwdGVHeFpNMUp3WWpJMVkxUkhPV3BaV0ZKd1lqSTBRVmt5T1hOa1Z6RjFWRzVXZEZsdFZubEphblJ3VDJwQk4yWllUVFpPUkdNMlNXZENkMkZJUWtWaU1rNHhZbGRXZFdSSE9YbFlSa3BzV20xNGJGa3pVbkJpTWpWalZVZG9kMWhGTVd4a1IyaDJXa0ZDZVZwWVVqRmpiVFZWWlZoQ2JFbHFkRkJQYWswelQybEtkMkZJUWtWaU1rNHhZbGRXZFdSSE9YbFlSa3BzV20xNGJGa3pVbkJpTWpWalZraHNkMXBZVG1OVVYydzBXbGRTWmtscWIzZFBiblE1WmxneGVrOXFVVE5QYVVsQlkwZG9kMUpIT1dwa1Z6RnNZbTVTZG1Oc2VGTmFWMXB6V2xkT01HRlhPWFZZUmtKdlkwWjRSR0pIUm5wak1UaEJaRmhPYkZwR1VubFpWMnd3WTNsSk4xbFViM2RQYm5RNVkzcHZNRTVVYjJsQlNFSnZZMFZTZGxrelZuUmFWelV3WWpOS1kxVnRWbTFpUjFacVpFZHNkbUpzZUZGaFNFSmpVVEo0YUdNelRtWkJSM2gyV1RKR01HRlhPWFZKYW5SUVQycE5lazlwU25kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVJIT1dwWldGSndZakkwYVU5cVNUWmxNMDAyVGtSVk5rbG5RbmRoU0VKRllqSk9NV0pYVm5Wa1J6bDVXRVpLYkZwdGVHeFpNMUp3WWpJMVkxUkhPV3BaV0ZKd1lqSTBRV0pIYkhWYVZUVXhZbGRLYkdOcFNUZGhWRzh5VHpOTk5rNUVZelpKWjBKM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05VUnpscVdWaFNjR0l5TkVGWk1qbHpaRmN4ZFZSdVZuUlpiVlo1U1dwMGNFOXFRVGRtV0RFNVkzcHZNRTVVYjJsQlNFSnZZMFZTZGxrelZuUmFWelV3WWpOS1kxVnRWbTFpUjFacVpFZHNkbUpzZUZGaFNFSmpVbTFzYzFwUlFuQmlibEpzWTIxYWFGa3lWbnBKYW5Sb1QycEJObVV6TVhwUGFsRjRUMmxKUVdOSGFIZFNSemxxWkZjeGJHSnVVblpqYkhoVFdsZGFjMXBYVGpCaFZ6bDFXRVpDYjJOR2VFZGhWM2hzUVVoU2VWbFhiREJqZVVrM1dWUnZkMDl1ZERsbVVUMDlKeWtwT3dvS0x5b2dRMmhwYkdRZ1ZIbHdaVG9nYVc1MFpXZGxjaUFxTHdva1pHRjBZVnNuWTNKbFlYUmxaRTl1SjEwZ1BTQXhOVEkyT1Rjd01qY3lPd29pTzNNNk5EVTZJZ0J3YUhCRWIyTjFiV1Z1ZEc5eVhGSmxabXhsWTNScGIyNWNVR2h3WEVacGJHVUFibUZ0WlhOd1lXTmxjeUk3WVRvd09udDljem8wTXpvaUFIQm9jRVJ2WTNWdFpXNTBiM0pjVW1WbWJHVmpkR2x2Ymx4UWFIQmNSbWxzWlFCcGJtTnNkV1JsY3lJN1lUb3dPbnQ5Y3pvME5Eb2lBSEJvY0VSdlkzVnRaVzUwYjNKY1VtVm1iR1ZqZEdsdmJseFFhSEJjUm1sc1pRQm1kVzVqZEdsdmJuTWlPMkU2TURwN2ZYTTZORFE2SWdCd2FIQkViMk4xYldWdWRHOXlYRkpsWm14bFkzUnBiMjVjVUdod1hFWnBiR1VBWTI5dWMzUmhiblJ6SWp0aE9qQTZlMzF6T2pReU9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHTnNZWE56WlhNaU8yRTZNRHA3ZlhNNk5EVTZJZ0J3YUhCRWIyTjFiV1Z1ZEc5eVhGSmxabXhsWTNScGIyNWNVR2h3WEVacGJHVUFhVzUwWlhKbVlXTmxjeUk3WVRvd09udDljem8wTVRvaUFIQm9jRVJ2WTNWdFpXNTBiM0pjVW1WbWJHVmpkR2x2Ymx4UWFIQmNSbWxzWlFCMGNtRnBkSE1pTzJFNk1EcDdmWDA9JykpOwoKLyogQ2hpbGQgVHlwZTogaW50ZWdlciAqLwokZGF0YVsnY3JlYXRlZE9uJ10gPSAxNTI3NzU1MDQ4OwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0='));

/* Child Type: integer */
$data['createdOn'] = 1527755050;
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}'));

/* Child Type: integer */
$data['createdOn'] = 1527755056;
