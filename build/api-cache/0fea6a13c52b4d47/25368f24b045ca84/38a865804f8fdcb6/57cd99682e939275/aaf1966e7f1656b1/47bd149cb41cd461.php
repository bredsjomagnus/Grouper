<?php 
/* Cachekey: cache/stash_default/documentation\api\php\b1ba9a52937781bae96969edd7b6ce33/ */
/* Type: array */
/* Expiration: 2018-05-26T14:56:59+00:00 */



$loaded = true;
$expiration = 1527346619;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979193;
