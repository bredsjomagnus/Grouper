<?php 
/* Cachekey: cache/stash_default/documentation\api\php\5057750d87436962cb3066f7573f8d45/ */
/* Type: array */
/* Expiration: 2018-06-04T19:07:45+00:00 */



$loaded = true;
$expiration = 1528139265;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755141;
