<?php 
/* Cachekey: cache/stash_default/documentation\api\php\cc11df54417b5aaf2c50dd3e72194346/ */
/* Type: array */
/* Expiration: 2018-05-27T03:28:27+00:00 */



$loaded = true;
$expiration = 1527391707;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979197;
