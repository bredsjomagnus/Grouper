<?php 
/* Cachekey: cache/stash_default/documentation\api\php\9c8c4f128ac54eac261e7b4e28004e23/ */
/* Type: array */
/* Expiration: 2018-06-05T02:58:39+00:00 */



$loaded = true;
$expiration = 1528167519;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755157;
