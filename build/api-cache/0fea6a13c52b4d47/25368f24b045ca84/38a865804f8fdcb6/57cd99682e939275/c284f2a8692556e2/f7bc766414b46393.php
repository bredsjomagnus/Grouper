<?php 
/* Cachekey: cache/stash_default/documentation\api\php\8d693310bc4947ca12e7bef419809da8/ */
/* Type: array */
/* Expiration: 2018-05-27T05:13:27+00:00 */



$loaded = true;
$expiration = 1527398007;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979584;
