<?php 
/* Cachekey: cache/stash_default/documentation\api\php\b77b0ef03ccd82ce6c640c564ffa7279/ */
/* Type: array */
/* Expiration: 2018-06-04T17:11:13+00:00 */



$loaded = true;
$expiration = 1528132273;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"529e27003e3655fdab7b6bb53ca1bdc4";s:39:" phpDocumentor\Reflection\Php\File name";s:20:"75aee447e27fd690.php";s:39:" phpDocumentor\Reflection\Php\File path";s:121:"build/api-cache/0fea6a13c52b4d47/25368f24b045ca84/38a865804f8fdcb6/57cd99682e939275/41fbf2bbd99bd08f/75aee447e27fd690.php";s:41:" phpDocumentor\Reflection\Php\File source";s:37560:"<?php 
/* Cachekey: cache/stash_default/documentation\api\php\d696479659c20bd807894f17dfb8fcfb/ */
/* Type: array */
/* Expiration: 2018-06-04T20:17:38+00:00 */



$loaded = true;
$expiration = 1528143458;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6Ijc1YzI5MzRhZDczODY5MzBkNDlkMzExMDVlNWNhMjVjIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6IjI2Mzg3ZGMyZDVlNjExM2UucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTIxOiJidWlsZC9hcGktY2FjaGUvMGZlYTZhMTNjNTJiNGQ0Ny8yNTM2OGYyNGIwNDVjYTg0LzM4YTg2NTgwNGY4ZmRjYjYvNTdjZDk5NjgyZTkzOTI3NS9iM2U2NDgzZjI1N2FhODUyLzI2Mzg3ZGMyZDVlNjExM2UucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoyNzAwMDoiPD9waHAgCi8qIENhY2hla2V5OiBjYWNoZS9zdGFzaF9kZWZhdWx0L2RvY3VtZW50YXRpb25cYXBpXHBocFxlMDQ1MjE4MDhmNGU3MzEyNjc1Mjg0MmMxZDg4ZGY2Yi8gKi8KLyogVHlwZTogYXJyYXkgKi8KLyogRXhwaXJhdGlvbjogMjAxOC0wNi0wNFQxOTozMDowMCswMDowMCAqLwoKCgokbG9hZGVkID0gdHJ1ZTsKJGV4cGlyYXRpb24gPSAxNTI4MTQwNjAwOwoKJGRhdGEgPSBhcnJheSgpOwoKLyogQ2hpbGQgVHlwZTogb2JqZWN0ICovCiRkYXRhWydyZXR1cm4nXSA9IHVuc2VyaWFsaXplKGJhc2U2NF9kZWNvZGUoJ1R6b3pNem9pY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxJam94TWpwN2N6bzBNem9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJrYjJOQ2JHOWpheUk3VGp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBR2hoYzJnaU8zTTZNekk2SW1KaU1HRXlaRFV5WWpjeE5tSTBORFkxTWpZd1lqRmpNRFF4TURJM09HTmlJanR6T2pNNU9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHNWhiV1VpTzNNNk1qQTZJakJoWXpJell6VTRObVUyWXpkbE0ySXVjR2h3SWp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBSEJoZEdnaU8zTTZNVEl4T2lKaWRXbHNaQzloY0drdFkyRmphR1V2TUdabFlUWmhNVE5qTlRKaU5HUTBOeTh5TlRNMk9HWXlOR0l3TkRWallUZzBMek00WVRnMk5UZ3dOR1k0Wm1SallqWXZOVGRqWkRrNU5qZ3laVGt6T1RJM05TODFOMkUyTkRWbU1tWmlabU5tTXpOa0x6QmhZekl6WXpVNE5tVTJZemRsTTJJdWNHaHdJanR6T2pReE9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFITnZkWEpqWlNJN2N6b3hPVEE0TURvaVBEOXdhSEFnQ2k4cUlFTmhZMmhsYTJWNU9pQmpZV05vWlM5emRHRnphRjlrWldaaGRXeDBMMlJ2WTNWdFpXNTBZWFJwYjI1Y1lYQnBYSEJvY0Z4all6azNNR1F5WVRFME5HSmhNamxtWTJZMFlUTXdaREpsWmprd05tUTFNeThnS2k4S0x5b2dWSGx3WlRvZ1lYSnlZWGtnS2k4S0x5b2dSWGh3YVhKaGRHbHZiam9nTWpBeE9DMHdOaTB3TlZRd01EbzBNam95TUNzd01Eb3dNQ0FxTHdvS0Nnb2tiRzloWkdWa0lEMGdkSEoxWlRzS0pHVjRjR2x5WVhScGIyNGdQU0F4TlRJNE1UVTVNelF3T3dvS0pHUmhkR0VnUFNCaGNuSmhlU2dwT3dvS0x5b2dRMmhwYkdRZ1ZIbHdaVG9nYjJKcVpXTjBJQ292Q2lSa1lYUmhXeWR5WlhSMWNtNG5YU0E5SUhWdWMyVnlhV0ZzYVhwbEtHSmhjMlUyTkY5a1pXTnZaR1VvSjFSNmIzcE5lbTlwWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFIyRlhlR3hKYW05NFRXcHdOMk42YnpCTmVtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUpyWWpKT1EySkhPV3BoZVVrM1ZHcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJSMmhvWXpKbmFVOHpUVFpOZWtrMlNXMU9iVnB0Um0xUFZGcG9Xa1JSTWs1cVJUQk5lbWN6V2tST2EwNVVTbWhQUkVacldWZFNhRTVIVG14SmFuUjZUMnBOTlU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhIWVZkNGJFRkhOV2hpVjFWcFR6Tk5OazFxUVRaSmJWSnBXV3BaZUUxVVZUVk5WR3hyV21wb2FrMXRXWFZqUjJoM1NXcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJTRUpvWkVkbmFVOHpUVFpOVkVsNFQybEthV1JYYkhOYVF6bG9ZMGRyZEZreVJtcGhSMVYyVFVkYWJGbFVXbWhOVkU1cVRsUkthVTVIVVRCT2VUaDVUbFJOTWs5SFdYbE9SMGwzVGtSV2FsbFVaekJNZWswMFdWUm5NazVVWjNkT1IxazBXbTFTYWxscVdYWk9WR1JxV2tSck5VNXFaM2xhVkd0NlQxUkpNMDVUT0hsYWFra3lUa1JSTlZreVVYZE5WRUV5VDFkYWJVd3lVbWxaYWxsNFRWUlZOVTFVYkd0YWFtaHFUVzFaZFdOSGFIZEphblI2VDJwUmVFOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oSFlWZDRiRUZJVG5aa1dFcHFXbE5KTjJONmIzaE5la1V3VFVSdmFWQkVPWGRoU0VGblEyazRjVWxGVG1oWk1taHNZVEpXTlU5cFFtcFpWMDV2V2xNNWVtUkhSbnBoUmpscldsZGFhR1JYZURCTU1sSjJXVE5XZEZwWE5UQlpXRkp3WWpJMVkxbFlRbkJZU0VKdlkwWjRhazFFYkd4T1ZGWnRXV3BOTUUxVVZUVk5Na3BvV2xSamVsbFViR3hOTWtwdFdXcHJNMDVIVFRGWmFUaG5TMms0UzB4NWIyZFdTR3gzV2xSdloxbFlTbmxaV0d0blMyazRTMHg1YjJkU1dHaDNZVmhLYUdSSGJIWmlhbTluVFdwQmVFOURNSGRPVXpCNVRteFJlVTFVYjNsTmFtOTRUa056ZDAxRWIzZE5RMEZ4VEhkdlMwTm5iMnRpUnpsb1drZFdhMGxFTUdka1NFb3hXbFJ6UzBwSFZqUmpSMng1V1ZoU2NHSXlOR2RRVTBGNFRsUkpNMDE2V1RWT2VrMHdUM2R2UzBwSFVtaGtSMFZuVUZOQ2FHTnVTbWhsVTJkd1QzZHZTMHg1YjJkUk1taHdZa2RSWjFaSWJIZGFWRzluWWpKS2NWcFhUakJKUTI5MlEybFNhMWxZVW1oWGVXUjVXbGhTTVdOdE5HNVlVMEU1U1VoV2RXTXlWbmxoVjBaellWaHdiRXRIU21oak1sVXlUa1k1YTFwWFRuWmFSMVZ2U2pGU05tSXpjRTVsYlRsd1dUQmtiMlF4U2toUFYzQnJWbnBHYzFsdE5WTmtiVTV6WlVaT1lWWXhjSHBYYkdSUFRVZEdXRTlZVmxsU2EwcDJXVEJhTkZJeVJsaGxSM2hLWVcwNU5GUlhjSGRPTWs0MllucENUbVZ0T1hCUlZXaERZakpPUmxWdVdscE5NVm93VjJ4ak1VMUhTWHBUYlU1V1lsWmFkRmxyWkZkaGJWSklZa2hhYVdKSWFGSlpWV2hEV1RGS2RHSklUbUZWVlVweVdXcEtUMUV5U2toUFYzQm9aVlZyTTFaSGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlNNbWh2V1hwS2JtRlZPSHBVVkZwT1pXdHJNbE5YTVZKTmF6bFlWRlJLVG1KVlduTlhiWEJ1VGtVMVJWZFljRTlXTVZZelZGZHdjMkZHYkZoVldHeE9aVzFrTlZSdWNFOWhWVEZWVmxSQ1NtRnVValpVTW5CT1RsVTVjRk5WUm1wU01tZ3pWV3RqTldGdFVsaE5WM2hwWW14S01sa3llRFJWTVhCWVYyNU9ZVll3TkhkWlZtTTFaRlpvUjFGdE9XcFNibWhJV1Zaa05HSkZSa2hPVjJocFZqRldjRlI2VGs1T2F6RnhVVlJhU21KV1ZYZFVWbVJQWVZac2RGSlVVbUZXTURWdlYxaHdUbVZHYkhGWk0xWnFVakpvTTFOWGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlRSVXB2V2tWa2JtRlZPSHBVVkZwT1ZrVnNORlF5YkV0aFYxSllZa2hPWVZGNmJHOVpNR1J5WkVacmVWSnRjR2hTTVZZeVZGVmtZV0pHYkZWWGJXaE9Wa1UxY1ZSc1VrdGhWVFZJVlZSQ1QyVlVhRFZVYkZKT1RXczVTRmRZYkU5U01Hd3pWR3RTVjJGc2JGVmFla0pOWldzd01GZFdVbTVOYXpWVldqTmtUMUl4YXpCWGJURlRZV3hzY1ZkWVdrOVdSMUp4VjJ0U2NrNVZOWEZhTTJ4aFZrZDBObFF4VWtwTk1EVlVUMWQwVGsxc1JYcFhWekZTVGxVMVZWWnRlRTlXTVd3MlZHdFNSazVWZDNsV1ZFSk9WakExY0ZkWE1VWk9SbkJZVkcxb1dtVnJNVFJYVjNCcVpGZE9TR0ZJWkVwaGJsSTJWREp3VW1WRk9YQlRWVVpxVWpKb00xVnJZelZoYlZKWVRWZDRhV0pzU2pKWk1uZzBWVEZ3V0ZkdVRtRldNRFIzV1Zaak5XUldhRWRSYlRscVVtNW9TRmxXWkRSaVJVWkpWRzVhYTFkRmNIRlhiRTVLVGpKT05tSjZVazloYldOM1ZESnNTazlHUVhwUmJUbHFVVEJHVEZSSWJIWmFNVVY1VW0xd2FGSXhXbmxYYkdoeVRtdHNTRlJ0YUZwTmJXaHpWRVJPVDAxR2JGbFViVGxaVFd4S2MxZHRNVWROVjBwSlZWaGFZVko2YkhGYVJtTjRZa2RLZFZWdGFHdFNNbmd5V1cxNE5HRkhUa2hpUjA1cVVqSm9NMWRGWkZKa01EbFlVMVJHVG1Wck5XOVVNR1JhVGxad2RGWlVWbEJTUjJod1ZEQmtTazVGT1ZWVVdHUk9WakZhYjFSVlVtRmhSbkJ4V1ROb1RXVlZSbmhVU0dSMlpHdDBjRkZzVm14WFJVcHpWREpzUTJGSFRuVlRiV2hzVlRCR2VGUklaSFprYTNSd1VXdGFiRk5GU25kWk1qRkhUVWRHV0U5WVZsQmhWVVkxVkZWU1JrNUZlRlZSVkVaTlZrVnJlbFpyVWtKTmF6bHhVVlJXVUdGclZYaFRNM0JDWkRBNWNWRllaRXBSTWpreVVUSmtkbE13VG5CVmJrNXBUV3RhY2xkc1pGSmFNVUpVVVdwQ2FtSnNXbk5VTTJSMllURndXV0ZJWkdoWFJYQnZXa1ZrYzJSdFNuQlJWR3hLVWtWVmVGUlhjR3BOUlRGRlVsaHdUMVpHVlROUk1tUjJZVEZ3U0ZKcVFscFZNRVUxVTFWa1IyVlhUblJTYWxaTVVUSnpNMUV5Wkhaa2EzUndVV3RTYUZJeWVIcFhhMDVEVmxkV1dWRnRlRkJoVlVveVYxY3hkMkpHYTNwVlYyUk1ZVlJvVEZOclpGTmhSMUpJVW0xS1MwMHdjSE5hUldoWFpWZEtjRnBIVWtwU1JFSnVXa1pqTVdWc2NGbFRia0phVmpOb2QxcFhNVlppTVd4MFVtNXdZVlpHYTNkWFJFcFRZa1pyZVU5WGRHRlZNbVIxVm10b2QyUnRWbkpOVkZwcFRXMTRjVlZxU205Tk1WWnlXWHBXYUdKV1NsbFVWbVEwWVZkS2MxTnFTbHBOYm1jd1ZsUkdkMWRHWkhWVWJVWlhUVVJTTTFkV1dtcE9WMUpYWVVWa1VtSlViSEZWYlRWdlUwWnNWMXBFVW1sU1YzaDRXV3BPYjFSdFJuVlJWRTVhVFROQ01sUlZWWGhPYlVsNVlrVktWRkpWY0RKWFZFSlhWVEpTYzJFemNGZGliRXBvVm01d1ZtUXhiSEZVYTNSYVRWWmFNRlp0TUhoaFZrbDRWMjVHWVZKWFVucGFSekZMWXpKV1IxSnRhRlJTVlhCeFZsY3dlR015VFhoalJrcFNZbGhTY0ZSWGN6RlNSbXh5V1hwV2FHSlZXVEZWTVZKclZsZEdkVlZxV2xWTmJrSlBWR3hWTldOR1RsWlNiWEJUVFcxbmVsWlhkR3BPVjBaMFZXeG9UbFl6YUhCWmJYaExUV3hyZVdWRVVsWk5XRUpaVmpJMVQxbFdXWGRPU0dSYVZtMU5NVnBHV205U01VWjBUMWR3VTJKdGFFbFhWbHByVGtkS1JsSnJhR2hTTW1oeFZGY3hhMk5HVWpaVWF6VlBZWHBGTWxVeFVtRlRiVVp5WWtSU1ZWWldTbFJaYkZVd1pWWmtXV0pGTldoaVNFSjNWa2Q0YTFWdFZuTmlTRVpYWWxob1QxWnFSbk5PYkdSeVdrVndUbEpVVmxaWGJuQlRWRzFHZEZWdE9WaFhTRUoyV1ZWV2MyTlhVa2xqUmtKb1lYcEJlRlpFU25OVGJFWllWR3RvYUZOSFVsUlZibkJ6WTFad1Ixa3phR2xTTUhBeFZsYzFZV0Z0U2tsaFJsSllZa2RTYUZsNlJuZFhSbEp4VVcxb1YyVnRkM2hXTUZaaFVUSkplVlJyWkd4U1YxSnZWbXBPYjJNeFJsWlpla1pvVWpCd1dWWnNaSE5WUlRCM1RVUktWVll6UWtOVWJYUnpaRVpLZEUxVk9XbFdia0o0VmtaYWExWXlTa1pOU0d4VVlsUkdUMXBYZEdGalJsSlhWV3h3YTFZd05VbFpWV2hyVTIxR2RWVnFXbFZOYmtKUFZHeFZOV05HVGxaU2JYQlRUVzFuZWxaWGRHcE9WMFowVld4b1RsWXphSEJaYlhoTFRXeHJlV1ZFVWxaTldFSlpWakkxVDFsV1dYZE9TR1JhVm0xTk1WcEdXbTlTTVVaMFQxZHdVMkp0YUVsWFZscHJUa2RLUmxKcmJGSmlWMmh5VldwS2EyTkdValpVYXpWUFlYcEdWbFV4YUc5VlIwWldZMGhDWVZKdFVucFpla1ozVWtVNVdHRkhjRk5OYmxGM1ZqRlNTMUl5Um5SU2EyaFhWMFp3VDFWcVJuZGpNV1JYVlcxR2FGSlVSbFpXUnpGM1ZERmFSbU5JUWxWaE1sSlRWRlZWTVU1Vk9VbGlSVGxYVWxSQ05WWkVRbXRYYlZaV1RsVm9WRmRIVWxCVmExcGhZMVprVjFWdE5VNVNXR2N5VmtaU1UxZHNXa2haTTJ4VllrWktkVnBFUVRGVFJtUlZWVzFHYVZacmNIaFdNV1IzVjIxU2NrNVdWbUZTTTBKb1ZXdGtlazFXVW5SalJ6VnNWbTVDVmxsVVRuZFZSbHBHWVROd1ZXSkZNREZaVjNoM1VsZEtTR1ZIUm1oaVZURXpWa1pXYTFWck1WZGpSbWhUVmtaS1VGcFhNVTVrTVZKRlUydGthVlpVVmpCV01qRjNWR3haZUZkdVRsVldSWEJNV1d4VmVFNXNTblJpUlRWWFVtMTNlRmRVUW10aU1sRjNZa2hHYTFOSVFsRlpWM2hIVGtaUmVXSkZjRkpXTURWSldWVm9hMVV4U2paaVNFWmhVbTFPTkZsclpFdGtWbFoxVjIxd2FWTkhhRlZXTW5ocldWZE5lR05HYUZWaGEwcHZWbTV3YzAxV1pFWlhhMDVwVFdzMVNGcFZWbXRoUmxsNllVaE9VbFpYYUZCYVJ6RlRWMVpPZEdOSFJsWk5SM042VjFST2QyUnJNVlpOVkZwV1ZrVktVVmxXVm5KT1JsWkZWR3RPYVUxck5VVlZWbFl3VkZkV1dFOVhOVlpXUlhCSVdWY3hSMU5HV25WVGJVWllVak5OZVZVeFZtdFVNa1pIWVROc2FGSXphRTVVVkVFd1pERmtWMkZGT1dsTlYyUTFWbGN4TkZsWFNsWlhXR2hhWVRKb1UxcEhlSGRUUlRsWVkwZDBWMlZyV25wWFZ6QXhWVEpHU0ZWcmFHbFRSbkJ3V1d0b2IySXhhM2RhU0U1YVRXczFTVmxWYUd0WFZrcEdVMjVPVlZaNlJraFpWbHAzVTBaa1dXSkhSbGROVlhCNVZrZDRVMk5yTVhKT1NHeFlZbGhvVVZWcVFsWk5SbVJaWTBWS2EwMVlRa2xXUmxKUFZVWkplRlpxV2xoaE1sSlBWRmQwTkU1V1JsbFNhekZyVFdwcmVWVjZTbk5STVZwWVZteHNVbUpZYUZGWlZsWkxZakZyZVU1VmRHaFNNVnBWVlZab1IxUlhVWGxQVkVwVVRXMTRSRlZ0TVZkVFZrWjFVVzF3YVZaV2JETlhWbHBxVGxkU1ZrOVlRbEpYUjNoUFZXdFdWazFHVWtkVmEwcE9WbGhvVmxVeFVrOVdNVXBHVW1wYVZVMXVRbGRVVmxVMVkxWk9WVlZyZUd4aE1GbDZWa1JLZDFGdFVYZGlSVkpwVFRGd1JWZHFTVFZVUmtWNVlrWk9hazFyYkRWVmJURXdXVlpaZUZKdE5WWlNhelZFVkZWa1QyUldXblJsUmtKclRXcHNlVll5ZUc5aU1sRjVVbXhzVkdKWGFISlZha28wVFd4c2RHSkZTbEJXVjNoR1ZXeFNSMVJ0Um5SVWFscFZUVlpLVDFwWGMzaGpWbkEyV2tWU1lVMXFiSGxXTW5SclVqQXhSMkpHVWxKV1IzaExWV3BDWVU1V2EzbE5WV1JQVmxoU1JWbFljR3RTUm05NVQxUktWRTF0ZUVSVmEyUkhVMGRLU1ZSdFJsSk5SWEJYVjJ4YWIxRXlTa1pQV0VKU1lteHdZVmxzYUVOak1XUlZWR3hLWVUxSVVuZFVNRll3VXpGSmVGTnRPV0ZTVjFKSVYxZDBkbVZzVG5SbFIzUlVVbXh2TVZkWE1YTmhNWEJHWWtWV1RsSXlVbkpXYm5CWFRteGtjMkZGZEdwU2JYaFpXbFZvUTJKSFNsZFdibHBZVm5wR1NGcFhlSGRXVm1SVlVXeHNUbUpGY0hwV01WSktUbGRGZUdOR1VtRk5hbFpZVlRCb1EwMXNjRmhqTTJoUFlsVnNOVmxyWkhkVk1ERjBXak53VjFZelVuRlViR1JIWkVaV2MyRkZOVmROTW1oM1YxY3hORk13TVhOaE0yeHNVa1pLVjFSV2FFTlhWbGw1VGxVNVdsWnNiRE5VYTJoclYyeGFkRlJVUm1GU2JIQjJWV3BHUjJSRk9WaGpSazVwWWxkb1NsWXhXbUZoTURWSVUydGFhVk5GV25CVVZFcHZWREZzV0U1VlNrNU5WM1EyV1RCb1lWUnNTbFZTVkVwYVlXdHdlbFZYZUU5U2JFNTFWMnh3VGxKc2NGVlhhMlEwWTIxV2MxZHVWbFppVlZwWVdsZDRWMDB4WkZoalJUbFVUVmQwTkZadE5WTldNa3BWVW01Q1ZtRnJXbWhaTVZwM1VteHdTVlJ0ZEdsV1dFSTJWMnhXWVZJeVJrZFVhMXBVWWxoQ1YxbHNVa2RsYkd3MlVtNWtWbUpGV2pCYVJXUnpWRzFHTmxaclZsaFdNMUp4Vkd4a1IyUkdTbkZXYkZKWFVqRktWMWRXWXpGVk1EVnpWVmhzYWxKVVZsQldiRkp6WkRGVmVGWnJaR2hpUld3MVdWVlNUMVp0UlhsVVZFWmFWbnBHVkZZd1ZYaFhSMVpJWWtkc2FWSlhPVFZXTVZKTFRrVTFSMVpZYUdwU2JXaFpXVzF6TVdGR1duRlJWRUpyVFZkNFdGZFljRmRoTVZwMFlVVm9WbFo2UVRGWlYzaExaRmRHUm1GR2NGZGlWa1YzVjFkMFYxSXhUa2hTYTJob1VqTkNUMWxzWkZOa01WcEpZMFU1VldGNlZubFVWbEpoVmtaYVIyTkZkRnBXTTFKNVZGWmFhMVl4Vm5KWGF6bFhZbXRLVjFaV1kzaE5SbEp6VTFob2FFMHlhRlpaYlRWRFVqRlNXR016YUd0U2F6VldWVzF6TldGSFNrWldhbFpYVW0xT05GZFdaRXRTYXpGV1ZteFdWMUpZUW1oV1JtUXdZekExUjFwSVNsWmlSWEJQVkZWa05HVkdjRVpoU0dSV1VqQmFlVlJWVWtkV1ZURjBaVVYwVmxadFVsQlZNR1JIVTFad1IxUnNUbXhpV0dnMFZqSjBZV0Z0VmtoVGEyaFVZbXhhVjFsdGVIZGpWbXh5WVVjNVYxSnRVbnBYYTJSSFlXc3hXVkZzYkZkU00wSkVXVlZhWVU1dFNrVlNiR2hUVm01Q1JWZFhjRXRVTVVsNVZtdGFZVkl5YUZoVVZFcHZaV3hXVjFadGNFNVdNRnBKVlRKNGIxWXhXWGxsUmtaVlZrVkdNMVJYZUZOV01WWnpWMnM1YUUxdWFEWldWbU4zVGxkR1ZrMVlSbGRpYXpWWVZXNXdWMWRHY0VaWGJrNXJVbXh3TVZsclZYaGhWMFYzWTBSS1dGWkZTbEJWTW5Nd1pWWlNjVmR0YkU1Tk1FcFNWbTEwYWs1WFRrZFNiRnBvVWxVMWNGUlhjekZTTVZwWVRsZEdXR0Y2UWpSV01uQkRWMGRLU0ZSWWFGVldWMUpMV2xkNFQyUkdVbk5YYld4WFlraEJkMVl4WkRCaE1WbDVVbTVTVm1FeWFIQlZNRnAzWTBac2NtRkhPVlppUjNoWFdWVldUMWRyTVZaalJFSmFZVEpvVUZkV1dsZFdiRTV4Vkd4b1YySlhhRlZYVjNCRFl6Sk9XRlZyYkdwU2EwcHZXV3RrTUUweFdrVlRiazVVVFVSR2Vsa3dXbTlVTVZsNlZXNUNWVlpGU25wVVYzaHJaRVUxV1ZwSGFGTk5TRUYzVjFkMGIxWXlSbFpOU0doVVYwZFNZVmx0TVhwTlZteHpWMjVPV0ZJeFNrbGFWV1IzWVVaYVNHUjZTbGhXUld3MFZrY3hVMk14VG5WVmJFNXBZVE5DYjFacVFsZGpNREZ6VjJ4YWFGSllVbkpaYkZwTFRVWnNjbHBFUWxwV2JWSkhXV3RTUzFkc1drWmlNMlJZWWxob1QxcFZaRXBsYkdSelYyeE9UbUpYWkRWV01XTjNaVVpaZUZWWWJGWmlSMmhQVm1wS05HRkdXWGRXYms1T1ZtMTBNMWRyWXpWaE1ERklaVWhvWVZKWGFETldWV1JIWXpGS2NWVnNWazVpV0doTVZsWmFhMVF4VGtoU2EyeGhVbXMxVkZwWE1UUmxSbVJ5VjIxd2JGSXdjRWxWTWpWWFZtMUtjMk5JUmxwaE1taDJWbXRhYTJNeGNFaFNiWEJPVjBWS1dsWnJaSGRSTWtaSFYycGFhVkpGV2xsVmJGcDNVa1pzY1ZOck9WTk5iRnBIVjJ0a2IxWXdNSGxoU0hCV1ZteGFkbFpFU2xOa1JsWnpZa1pTYVZkRlNtOVdiRkpEWTJzd2VHRXpjR3BUUm5CeldWaHdWMUpzVmxkVmJVWlVZbFZhTVZkVVRtRlhhekZJVlc1YVlWSkZTbEJaYlRGUFUxWmFjMk5HWkd4aE1YQTJWakZvZDFReFJYbFNhMlJvVFRKNFdGWnFTbE5XUm14elZtMUdiRlp0VW5wWlZWWXdWMnN4VjFkcmNGWk5hbFpvV1ZSS1MxZEhWa2xUYkdocFVqSm9UVll4VWt0U2JWWllWV3RvV0dKR1NrOVdibkJ1Wld4V1ZWTnRkR3ROYTFvd1ZUSjBiMVV5U25WUmJrWmhWbXhhVEZaWGVITldiR3cyVm0xMFYySnJTbGhXUjNoVFVqSkdWMWRZWkdwVFJUVmhWRmN4TkZKR2JISmFSbVJVVm14YU1GcFZaSE5oVmxweVlucEtWazFXV21oVWExcEtaVWRLUjJGSGRGTk5NbWg0VjFkMGIySXhWbk5oTTJ4T1VrWmFUMWxzVm1GWFZscFlUVlJTYUdKVmNFcFpWVnBMVjJ4YVdGUlVSbUZTYkhBelZtMXpNVlpXU25SaVJtUk9VMFZLTmxZeFVrdGhNbEYzVGtoa1ZXSnJTbE5XYWtwVFV6RldWVkZyZEU1TlYzUTFWRlZTVjFSc1NuVlJiR3hYVWpOQ1JGZFdXbHBsUmtwMFRsWndiR0Y2VmxWWFZsWnJWVEZPU0ZOcmFHcFNXRUpUVkZaV2QwMUdaRmhqUlRsVVRXeEtTRmxyV25OV2JVcDFVV3QwVm1FeFNrUlpiWGhyVmpKR1JtUkhlRmRpV0doaFYxWlNTazVXU2toU2JGcFRZbFJXVlZac1ZURlJNV1J4VVc1T1UxSnJXbGxYYTFZd1lrWmtSazFVV2xaTlZscFFXVzF6ZDJRd01WWldiRTVZVWxWd1RGWldVa0psUjA1WFZHeHNhVkpVVm05WlZFb3pUVlphUjFsNlJsVldhMXBaVkRGak1WWkdXbFpPVlU1WVlXdEtlbFZyV2tkWFJuQkdZMFpLVG1GNlZURldhMk14WXpGR2RGTllaRTlXUm5CVFZqQmtORlJXV2xWUmEyUnFWbXMxV2xsclZURmhSMFY1WkhwR1YxSnRVak5WZWtwWFYxWndSbVZHVWxkV1ZGWkVWakp3UTJNeFNrZFNiR2hoVWxoQ1UxUlZWbUZOVmxZMlZHNWthR0pIT1ROYVJWWlhWMnN3ZVZWc1FsZFdSVzkzV1cxNFQxZFhTa1pPVjJob1RXNWplRlpyV210a01VNTBWbXhvVldKdVFsTlVWekUwVVRGa2NWRnVUbE5TYTFwWlYydFdkMVZyTVVaWGJsWldUV3BXZWxwWGMzZGtNa3BHVlcxR2JHRjZWbEJXVjNSclZESlJlRlJzV2xWaGVsWnZXVlJLTTAxV1drZGFTR1JVWWxaYVYxUldhRmRXVmtwV1YycEtXR0ZyU25wVmExcEhWMFp3Um1OR1NrNVNWbkF4VmxSR1YxUXlSblJVYmtwUFZrWmFVMVp1Y0hOVlJuQllaRWhLYkdKRk1UUldSM1JMWWtaYVZWSlVTbHBXUlhBelZUSXhWMVpyTVZsU2JGSnBZbGhrTmxaWWNFTmpNVXBIVW14b1lWSllRbE5VVlZaaFpGWlZlRlpyT1ZKaVZYQjVXa1ZTWVZkck1YUlZhekZXWVRKU1QxcEVSbE5rVjBwSlUyMUdUbEl6WTNoV2ExcHJaREZPZEZac1drNVhSVnBWVmpCa05HTldiRFpSYXpscVVtdGFXVmRyVm5kVmF6RkdWMjVXVmsxV1dsQlZWM2gyWkRKT1JWWnRjR3hoZWxaTVZsWlNTMkZ0Vm5OVmJHUldZbGhDYzFac2FGTldWbFpYVldzNVZVMVZjRWhXYlRWSFZrWmtTR1ZGT1ZwaVdGRXdWVmN4U21WV2NFWmpSa3BPVWxad01WWlljRWRWTWxaelZGaHNXR0pGY0hCVVZ6RTBWVlpTVlZGWVpFNWlSa3A1VmxkNFlWUXlSWGxsU0ZaV1ZucFdjbGxWV2s5U2JFNXlWMnh3YUdFelFsRldSbHByVXpGa1IxZHVWbGRpV0ZKVVdsY3hNMDFXV1hkV2JVWlVUV3R3U0Zrd2FGTmlSa2w2WVVkR1ZWWkZXa3hhUkVaelkxWk9WVkpzY0U1V2JIQktWMVpXYjJFeFpGZFRiR1JxVTBkU1lWbFVTbE5XTVZaWFdrVjBhMUpyY0RGV1Z6RkhWMFpLVlZaWWNGZE5WbkJ5VmtSS1MxTkdVbkZXYkZKWFVqRkthRlp0ZEdwT1ZUVkhWVmhzVDFaRlNuTlpXSEJ6WlVaVmVHRkhPVlpTTUZwWFdUQmtkMVp0U2xWU2EyaGFUVzVvTTFZeFdrOWtSbEp6VjJ4U1UxZEZSalZXTW5ScVpVZE5lVkpZYUdwU2JYaFZXV3hWTVdJeFVsaE9WazVwVm14Wk1sVnROV0ZoUmxwVllVUk9WVTFHU21oV1J6RlhZMnhLVlZOc1VsZGxiRnBGVjFkd1MxUXhTbk5XYmxaWVlraENUMVJXV25aa01WbDVaVWR3VGxaVVJrbFZNV2gzVmtkS1ZrNVdaRnBpUm5Cb1drVmFjMk5zY0VkYVIyaHBWbXR3U2xkWGRHOVpWMFpZVTJ0c2FGSlhhR0ZVVm1SdlZVWnNjbHBGZEdwU2F6VldWakp6TVdGSFNuSlNXSEJZVmtVMU0xcEhNVmRqYXpWVlYyMXNUbUpZYUVSV1ZFSlhVekpTYzJFelpGZGlSVFZ5V1d0a01FNXNXblJPVms1YVZteHZNbFpzYUd0WGJVWnlUbFY0V0ZaRldsaGFSVnBoWkVVeFdHSkdUazVXYmtJMFZqSjBWMkV5VFhsVmJsSlVZbXMxYzFWc1pGTmpWbGwzVmxSR2FrMVhlREJYYTFaUFlWWlpkMDVXY0ZkU2VrVXdXVlprUjFadFJqWlViSEJPVFRCSmVWZHNXbFpsUmxwWVUxaHNhVkp0ZUZSV2JUVkRaR3hrVjFWcmRGZE5iRnBZV1ZWV2ExVnRTblJsU0VKVlZrVmFNMXBFUm10amJIQkhXa2Q0VjJKWGFFcFhhMVp2VXpGa1ZrMVZiRlppVjJoVlZtcE9RbVF4Y0ZoamVsWnFWbXhLVmxVeWVFTmhSbHBZWlVWT1dGWkZTbkpaYWtwU1pVWk9jbUZHUWxkTk1FcDVWbTAxZDFJeVRYaGlTRkpQVm1zMWNsbHNWVEZsYkhCV1YyczVXbFpzYkRSWk1HaDNWMGRLU0ZWc1FsVldWMUpJVmpCVk5WZFdXbk5pUms1WFltdEZkMVl4YUhkVE1WbDVWV3hhVTJFeWFGQldha3B2WTBaYWNWSnNaR3BTYkVreVZrZHpNVlF5UmpaV2JGcGFZV3R3ZWxsVlZYaGtWbFowVFZaYWJHRXhiM2xYVmxwV1RrZFdjazFXVm1sU00wSnpXV3hTYjAweFdrZGhTR1JyWWxWYVYxVnRkSE5WYlVwVllraEdWbUpHY0V4VVYzaHJWbFpTYzFwSGRGTmlhMHBhVmtkNFUxRXlSbFpOU0dScVVqTkNXRlp1Y0VkWFJteHpXa1YwVkZKc2NEQlpNR1F3VlRBeGRWb3piRmhXZWtVd1ZHdGFWMWRHU25KaVJrcHBWbFJXVlZkWGVHdE9SMVp6V2toT1UyRXdOWEZWYWtKM1RVWmFTRTVWT1doTlZtdzBWVEkxVDFkck1IbGxSWFJWWVd0YWVsWnNaRXBsYkhCSFVXMXNhV0pGVlhoV01WSlBaREpTY2sxVldrOVdWbHB3VkZjeE5GRXhWWGRXYTNScllrZDBNMVp0ZUU5aE1rcElaRVJhVjJKVVZsUlhWbHBoVG14YVdWcEdjR2hoZWxaTlZqRlNSMVl5VWtkWGJsSk9Wako0VkZSV1duZGxSbVJ5Vm0xMGFrMXNTakJWTWpWUFlrWktjbGR0T1ZaTlJscE1XVmQ0VjJSRk1WbFViWEJPVjBWS1ZGWldZM2RsUjBWNFYycGFWMkpyV21oVmJHUlRaV3h3U0UxVmRHdFdiRXBaV1d0YVExUnRSWGhXV0d4WFVteGFWRnBFUVRCbFZtUnpZa1pXVjFKdVFsRldWM1JoVW1zeGMxUnNhR0ZTVlRWeVZGZDBZVk5zVmxoa1JtUm9WbFJHZVZScmFHOVhiVXBJVld4b1lWSnRVbFJWTUZVMVYxZEtSMkpHVG1oTk1FbzJWbXBKZDJWRk5VaFRhMlJvVFROQ1YxbHRkRXRqUmxKWVkwWmthR0pHY0ZkWGEyTTFZVEF4V0dGRlpGZE5hbFpFV1ZaYVNtVkdXbkpUYkdoWFVsZHplRmRyV210VWJWWnpWbTVTYUZJeWVIQlphMVoyVFd4VmVGcElaRTVTTUZwSFZERm9SMVZzV2tkalNFNVZWMGhDU0ZSdGVGSmxWMDVIVTIxNFYxWkhlRE5XVkVaWFVqSkdjMU5ZYkdoU1JUVlhXVlJLVGsxV2JGaE5WazVZVWxSR1dWcFZaSE5oVjBwR1lqTnNXRlpGYnpCVWExcFdaVWRPUjJGR2FHbGhlbFp2Vm0xd1FrMUhVWGhpUm1SYVpXeGFjbFp0TVc5VFJsWllUVVJXYUdKRmNERlpWVlp2VjJ4YWRGVlVRbHBoTVZwSVZUQmFVMlJXVW5OalJtaFRWa1pWZVZacVNqUmlNVkowVW14YVVGTkhlRlJXYTFwM1ZERmFjbUZGU2s1TlYzUTJXVEJvWVdKSFJqWlNWRXBhWVd0d2VsWXhXa3RXTWs1SVQxWndWMUpZUWxsWGJGcGhZakZKZUZKdVZtbFNNbmhQVkZab1EwMHhXWGxrUjNSWFRXeGFXRmxWVm05aE1VNUdZMFp3VlZaWGFGUlpWVnByVW14a2NsUnRiRTVoTW5jeFZrZDRhMDVHV2xoVGJrNVlZV3RLV1ZadWNFZFhSbkJYVm01T2FsWXhTa2hWVjNoRFlVZEdObEZxVWxkU1JYQjZWWHBLVW1WV1NuSmlSa3BvVFZad2QxWkdaSHBOUjFaSFlraE9ZVkp0VW5KV2FrWkxVMVpSZUdGSVRsaFdhM0I1V1RCb1QxZEhTbFZTVkVKYVlURndlVnBYZUZka1ZrWjBZa1UxYUdKR2NIaFdiWGhYWVRKSmVWVllhR2hTVm5CV1dXMXpNVmxXV1hkV1ZFWlBZa2RTU2xsclZuZFVNa1kyVW14YVZtSkdTbWhaYTFWM1pEQXhSVk5zVm1oTlZYQk1Wa2N4TUdNeVNuTlNibFpoVWpKb1ZWVnNWbmRTTVdSWVkwVjBWVTFFUmxsVk1uaHZWakpLYzFkdVNsWmlia0o2Vkd4YWExSnNaSEprUjJ4VFltdEpkMWRzVm10T1JtUnlUVWhvVkdKdFVtRlpWM1J5WlVaa1ZWSnNaRlJTTUZwS1YydGFjMVV4V2xWV2FscFhUVlp3ZGxaRVNsZGpNa1pGVkd4S2FWWkZXbmhXYWtKV1RWZE5lR0pJVW1sU1dFSlFWRlphU2sxc2JIRlVibVJWWWtWd1NWUXhhRU5YYXpGSVZXNWFZVkpGV2t4Vk1GVTFWMGRPU0dSR1pHeGhNWEEyVmpGamQwMVdWWGxWYmxKVlltczFjMVZ0Y3pGaFJscHhVbTVrYkdKSFVucFhhMVUxVkd4SmQxZHNiRlZOVjJoWVZqRmFTMVl5VGtWVmJIQnNZVE5DV1ZkcldsZGpNazVZVTFod2FWSnJTbkJaYlhoS1RXeGFSVk51WkZWaGVrSXpWREZvUTFaR1dsWlhia1pXWVd0d2RsUlVSbGRqYkd3MlZtMW9hVlpyY0ZwV1JscHJUa2RHV0ZOdVRsUmhhM0JoVkZjMWJrMUdXbFZTYm1SWVVtMVNNVlpITVVkV01ERkZWV3BPV0Zac2NIRlViR1JUVmpKR1JsZHNhR2xpVjJoNFZrWmtORmxWTVZkU2JGcGhVakJhYzFWcVFYaE9WbHAwVGxaa1ZHSlZXakZXVjNCaFZsVXhkVkZyT1dGV00wMHhXVEJhVDJSR1VuTlViV3hYVm01Qk1WWnFTalJpTVUxNFlUTm9WMkV5ZUZWWmJYaDNZMnhzYzFwRVVtcGlSMUo2V1ZWV01GZHJNWEpXYWxaaFVsZFNhRlpyVlhoWFZrWjBZMFprVjFZeFNqSlhhMk40VXpKU1IxZHVTbEJXTTFKWVdsZDBZV1F4V1hsbFJ6bFVZbFZhVjFRd2FIZFdWbHBIWTBVNVlWWXphSGxVVjNoUFYwWndSbFJ0ZEU1aE1YQkxWbFprTUZZeVJsWk5XRXBQVTBkb1lWbHJaRk5YUm5CSFdrWk9WRkpVYkZwWmExcHpWVEpGZWxGdWNGZE5ha0kwVkd0a1MxSXlSWHBqUmxwcFlUQndkMVpHWkhkV01rWnpWbTVTVDFaWFVuTlphMmhEVjFaU2NsWnJaR2hXTUhCWFZqSndRMWRIU2taT1ZYUlZZV3R3VUZSdE1VcGxiVVpHVGxaa1UyVnRlRE5XYlhoWFlUSkplVlZ1VWxSaWJFcFlXVmh3YzJOc1duVmpSV1JxVW0xU2VsbFZWbmRoUmxwVllVUmFWVlp0YUROV1ZXUkhZekZLV1dGR1ZrNWlXR2hNVmxaYWExUXhUa2hTYTJ4aFVtczFWRnBYTVRSbFJtUnlWMjF3YkZJd2NFbFZNalZYVm0xS2MyTklSbHBoTW1oMlZtdGFhMk14Y0VoU2JYQk9WMFZLV2xaclpIZFJNa1pIVjJwYWFWSkZXbGxWYkZwM1VrWnNjVk5yT1ZOTmJGcEhWbGN4YzFVd01VZGlla3BZVjBoQ1IxUnJXa2RXTWs1R1lVWkNWMDB3U2xSWFYzaHZZakF4YzFwR1ZsUmlia0p2Vm14U2IwMHhVbkpWYlhSb1lsWmFNRlF3YUd0V1YwcEhVMnBLV2xac1draFZNVnBIWkVVNVdHTkdUbGRoTWprMVZtcEdVMVF4V1hsVmEyUnFVbTFvVUZaclZrdGpSbEpWVVc1a2FHSkdjRmxVVmxwcllWWlpkMk5GYkZkaVZFWXpXVlJHU21WWFZrVlRiSEJwVjBkamQxWnNXbXRTTVU1WFVtNVNWV0pGY0U5WmJURnZaR3hrV1dORk9WVk5XRUo1VlcxMGIxVXlTbGhsU0VaVlZrVmFURlJzV210V01YQkdUMVUxVTFZemFEUlhhMVpyWXpGV1NGSnVTbE5XUlRWaFZGUk9RMDFzVWxaV1dHaHFWakJzTlZsclZrdFdSa3BXWTBSS1dGWkZTbGhXVkVwVFl6SkZlbU5HWkdsaVJYQnZWbTAxZDFadFVYaGlTRVpWWVROU1lWUldXbUZOUmxwMFRVaG9hRlpyYkRSV01qVkhXVlpLV0ZWdWNHRlNla1pNV1hwS1YxSXhTblJoUmxKVFZsaENlRlpzV2xOVE1EVklVbXRvVlZkSVFsWlpiRnAzVVRGV2NWSnVaR3ROVjNnd1ZGWldhMkZyTVVobFNHaGhVbGRTZWxaVlpFZGpiRXBWVkd4d1RrMHdTWGxXUmxaV1pVVTFkRk5ZYkdsU1ZYQlZWV3hXZDAxc1pGVlJiR1JXVFd4S2VsbFVUbmRXTWtwelUyMW9WMkp1UWxkYVJFWnpZMVpTY21SR2NFNVdiRzkzVm0wd2QyVkhSbGRUV0doWVltdGFhRlZzWkZObGJIQklUVlYwYWsxc1draFZiVEZ2VmtaS1ZtTklSbGRXYkVwTVZHdGtSMU5HVWxsalJsWnBWbTVDUkZaVVFsZFRNa2w0WVROc1RsWnRVbkpXYWtaTFVsWlZlRlZ0ZEZkV01Wb3dWREZTWVZaV1dsZFRha3BhVm0xU1VGVXdaRWRUVm5CSFZHeE9iR0pZYURSV01uUmhZVzFXU0ZOcmFGUmliRnBYV1cxNGQyTldiSEpoUnpsWFVtMVNlbGRyWkVkaGF6RlpVV3hzVjFJelFrUlpWVnBoVG0xS1JWSnNhRk5XYkhCdlYyeFdhMVJ0VmxkWGJsWlhZVE5DYjFsc1VuSk5WbHBGVTFSR1RsSXhXbmxVTVdoSFZsWmFSazVXUmxwV2JGcDZWVmQ0Y21ReGNFaFBWM1JPVmxoQ1NsWkVSbXRrTWtWNFYycGFVMkpyTldGWmJGSlhWa1p3U0UxVk9XcE5iRnBJVmtjeFIxWXdNVmxSYWxwWFRXNW9jbFpFUVhoVFJrcHpZVVpDV0ZKc2NHRldWM2hoWkRBMVIySkVXbFJpUjFKeVZteFdZVk5XV1hsT1Z6bG9ZWHBHZWxZeWNFZFdSbGw2VVZoa1lWWXpUVEZaTVZwUFZsWlNjMUZ0YUZkWFJVcDRWbXhqZDJWR1NYbFViazVxVW0xNFZWbHNWVEZXTVZWM1ZtNWtUbUpJUWtsVVZtaFBZVVV4V1ZGc2NGWk5ha1pRVm0xNFNtVlhSa1ZUYkhCcFZrVmFXVlpyVWt0Vk1XUkdUVlpvYVZJd1dsbFZiR1EwWkRGYVNXTkZPVlZoZWxaNVZGWlNZVmRHV2tkalJYUllZV3RLVEZSVVJuTldiVVpHVkd4T1YwMUhkekZXYTJSM1VqSkdWMWRZYUZoaGExcG9WV3hrVGsxV2NGZFhiVGxUVFZVMU1GcFZaRWRoVm1SSVlVaHdWMDFXU2xCV1ZFcFBVMFpPV1dKRk9WZE5SRlpWVjFjeE1GbFZOWE5hU0U1YVpXdEtVMVpxUW5kTlJsWjBUbFpPV2xac1ZqTlpXSEJQVjJzd2VsRnFTbUZXVmxZMFZteGtTbVZYU2tkWGJFNU9ZbGRrTlZZeFkzZGxSbGw0VlZoc1ZtSkhhRTlXYWtvMFlVWlpkMVp1VG1wU2JFa3lWa1pvYjJKSFJqWmlTR2hYVm14S1VGWlZaRWRXYlVwR1UyeHdUbEl4U2pKWGExSkhVekZPUms5V2FHcFNNMUpZV2xkMFlXVnNaRmhOUkVaV1RXeEtNRlpITlU5aVJrcHlUbGRvVjJGcldqTmFWM2hyWXpGd1JrOVZOVk5OUm5CYVZrUkdiMVl4WkZkVGJrcFVZbXh3WVZSVlduWk5SbFp5V2tWMFZGSnJjREZaTUdSM1ZHeGFTR0ZGVGxoV2JIQnhXbFZrVW1WV1RuSmhSbVJwWWtWd2IxWnROWGRXYlZGNFlUTndhVkpZUWxCVVZtUTBWbXhzY1ZSdGRGWlNNSEF4VmxaU1YxZHJNSHBSYWtwVlZsWlZlRmt4WkVwbFYwcEdVMnhTVTFaWVFYbFdNVkpEVmpGVmVWVnVUbWhOTTBKWVdXMTRTMkZHV25WalJscHJUVmQ0ZUZaSGREQlhhekZYVjJwQ1YySlVRalJaVmxwS1pVWmtkVkp0UmxOV01VbzJWMnRqZUZNeVRYbFdhMlJUWWxkb1ZWVnNWbmRqVmxwWFZXdDBUMUl3V2tsV1JtaDNWbGRLVjJORlRsWmhhMFY0VkZkNGMyUkZOVlpQVlRWVFlsaG9XbFpIZUZOUk1rWjBWbXhhYUdWck5WbFdiWGhMVFd4d1JWRlVWbXRXTVVwR1dXdGtkMkpIU2xWaFJFNVhVbnBXTTFwSE1VZFdiRXB5WWtaS2FWWkhlSGhXVjNoaFV6QXhjMXBHVmxWaVIxSnlWVzAxUTFkV1VuTlZhMDVvVmxSQ00xa3daSGRXTVZvMlVteG9XbUpIVWt4Vk1GcGhaRWRPU0dSR1RrNWliV1ExVmpGamVFNUZOVWRXYkdoVFlUSjRVMWxzVlRGVk1WSllUbGM1YVUxWGR6SldSM00xV1ZkRmQxZHJjRlpXZWxaNldWWlZkMlF4VG5WVWJIQk9ZV3hhVlZkVVFtRmtNV1JYVld4b2FWSnJTazlaVkVaV1pWWmFSMWRzVG10TlJGSTFWa2R3WVdGWFZuSlRhemxoVm5wQk1Wa3dXbXRTYkZwMFVtMW9VMDFHV1RGV2JUQXhZekZrVjFOdVNsUmhiRnBoV1Zkek1XRkdhM2RYYm1SVVVteHdNVmxyV25OVk1EQjRVMnBXVjAxR1NrUlVWVnB6VmpKR1JscEdTbWxXUjNoM1ZrWmtkMVl5VFhoWGEyaFBWbTFTY2xWdE1UUk5SbHAwVGxoT1ZsSXdXakJVTVdoTFYwZEtWVkZVUm1GV2JWSk1WakJhUzJOV1JuUmpSM2hYVmpOT05sWnRkRzlrTWxKMFZtNUtUMVpHY0hCVVZ6RTBZMVpXY1ZOdE9VNU5WbHA1VjFod1YyRkhTbGRUYkd4VlZtMVJNRmxXWkV0ak1VNXhVMnh3VG1KdFkzZFdiRkpIWkRGa1IxcElWbFZpVlZwWVZGVlNVMDB4WkZkWGJYQlBWakZLV0ZsVlZtdFZiVXBWWWtoR1ZtSlVWblpXVjNoeVpWVXhSVlp0ZEU1WFJVcGhWbFJLZDFFeVNrZFdXR1JvWld0d1ZsbHROVU5OTVZKeFUyczVUMkpWYnpKVlYzTTFWVEZLTm1KSVpGWldiRnAyVlZSS1NtVldVbkpYYkZwcFlraENhRlpHVWtkWlZURkhXa2hPV21WcldrOVZha0p6VG14VmVVMVZPVmRpVlhCWVZqSTFVMWR0UlhsVmJHaGFWbnBHVkZVd1pFdFRWbVIwWWtkc1ZGSXlhRlJXTVZwWFlqRkZlR0V6YUZkaE1uaFZXVzE0ZDJOV1ZuRlNiVVpQVm01Q1IxbFZhRXRWYkZwMVVXcEdWbUpVVmpOWFZscGhUbXhXZFZGc1ZteGhNRlYzVmtjeGVtVkZOWE5TYkZaWVlUTkNjRmxVUW5kTmJHUlZVV3hrVmsxc1NucFpWRTUzVmpKS2MxTnRhRmRpYmtKWFdrUkdjMk5XVW5Ka1JuQk9WbXh2ZDFadE1IZGxSMFpYVTFob1dHSnJXbWhWYkdSVFpXeHdTRTFWZEdwTmJGcEhWMnRrZDFkR1NsVldibkJZVm5wR2VsVXljekZqYXpGWlVtMXdVMUl4U25oWGJHTjNUbFUxYzFWdVZtcFRSbkJ2Vm14V1lWTnNWbGhOUkZab1lrVndXRlV5Y0V0WFJscEdUbFpvWVZKV2NETldNRlV4VmxaR2RHSkZOVTVUUlVwNFZtMTRhbVZHV1hsVGJHaFVZVEpvV0Zsc2FFTmpiRlp4VTJwU1RtSkhlREJhVlZKVFZUQXhjazVXY0ZkU2VrVXdXVlphZG1ReFRuVlZiSEJPVmpKb1VWZFhkR3RUTWs1SFZHeFdZVkl6UW5OWmJGSnZUVEZhUjJGSVpHdGlWVnBZV1ZWV1lWZEhTbGhoUnpsVlZqTm9hRlJzV210U2JHUnlWRzE0VjAxSGR6Sldha2t4VVRGc1YxTllhRmhoYkZwWlZXeGtVbVF4YTNsbFJ6VnJUV3hLU1ZWdGVITlZNa1YzWTBSS1dGWXpRa3RVVm1STFVqRldkVlpzWkdsaVJYQm9WMWQ0WVZsVk5WZFZXR3hxVTBad2IxUldhRU5OUmxGNFlVaE9hRlpzYkROV01XaHJWMnN3ZVdWRmRGVmhhM0JRVkcweFNtVnRUa1pQVjJocFZrZDRNMVpXV2xkaU1VVjVVMWhzVldFeGNGZFpiWGgzV1ZaU1ZWSnRSazVTYlZKNlYxaHdSMVJzU1hkaVJGcFdUV3BHVUZadE1VdFdNV1IxVld4d2FFMXNTbGxYVm1ONFZURk9TRk5yYkZoaVYzaHdWVEJrYjFOV1pGVlNiVGxWVFd0d1NWVXlNREZWYlVwelYyMUdWMkp1UWtoWmVrWlBWMGRPUlZGdGVHaGxiWGcwVmpGb2QxbFdUblJUYkdScVVrVndZVlJYY0VOT1JteFdXa1pPVkZac1NsbFphMXBEVkcxV2NsZFVTbGRTUlhBelZsZHpkMlF3T1ZsUmJGSlhWbFp3ZUZaWGNFdGlNREI0Vm01S1dtVnNXbTlaYkZwTFYxWlNWMXBFVW1oV01IQjZWVEp3UzFkck1YVmFla0pYVmtWYU0xWXdXbXRrVmxKMFVteGtUbEpHU1hwV01WcGhZV3MxV0ZWc1pHaFNWMUpUV1d4U2MyTldWblJPVnpsV1lrZDBOVlJWVWxkaE1ERlpVV3h3VmsxdVFrUlphMXBYVm14T2RWTnNjR2hoTTBKUlZsWlNTMU14VGtaUFZtaHFVakpvYzFac1pIcGxiRnB5V2toa1RsSXhXbmxVTVdoSFZteGFSbE5zUmxwV2JGcDZWVmQ0Y21ReGNFaFBWM1JPVmxoQ1NsWkVSbXRrTWtWNFYycGFVMkpyTldGWmJGSlhWa1p3U0UxVk9XcE5iRnBJVmtjeFIxWXdNVmxSYWxwWFRXNW9jbFpFUVhoVFJrcHpZVVpDV0ZKc2NHRldWekV3VXpKU2MyRXpaRmhoYkVwWFZtcEJNVTFHVVhoaFIzUmFWbTFTUjFscVRtdFpWbHB5VjJ0U1ZWWlhVbGhXTVZwSFpFZFdTR05IZUZkV00wNDJWbXBHWVZVeVVuUlZXR1JRVjBaYWNsVnJaRFJqVm5CWVRVUlNhMDFXU2pCWk1HaGhZVVphVmxkcmNGWldla0V4V1ZkNFMxWXhUbkZUYkdoWFVsUldXVmRyVm1Ga01XUkdUbFpXVW1KWGVFOVVWV2hEWTFaYWMxa3phRmROYTNCWlZUSjBiMVl5U2xsUmJrcFdZV3R2TUZSWGVITmtSMVpGVld4YVYwMUdjRXRXVm1ONFZERmFjMVJyV21wU1JYQmhWRlZrVTFkR2NGZGFSazVVVmpCV00xVnRNVWRWTURGWFkwUkNWMDFXY0haV2FrcE9aVlpXY2xWc1VsZFNNVXA0VjJ4amQwNVZOVWRWYkd4cVVsWndVRmxVU2pSTlJsWjBUbGhPYUdKVmNGZFdNVkpIVmtVeFJrNVVXbFZXUlVwNlZXdGFkMDVzVW5KT1ZrNVRWbXh2ZWxaVVJsZFVNVkowVW01S2FWSkdXbFpXYWs1RFV6RndWMVpZYUd4aVJUVlhWa2MxZDFSck1VaGxSVlpZWW01Q1VGWkhlRXRTYlVwSldrWlNWMVpVVmxCWFZtUXdZekExVjFWc2FHcFNXRUp6Vm14U1IwNXNWWGhXYXpsc1lYcENNMWxyVmxOWlYxWnlUbFU1Vm1FeGNGaGFSRVpQVm14U2NrNVhhR2hOYm1ONFZtdGFhMlF4VG5SV2JGcE9WMGhDVlZac1ZURk9iRkpWVVc1T1UxSnVRVEpXUjNNeFZURkpkMDVVVGxaTlZscFFWa2N4UjJOdFNrVldiRlpYVFRCS1RGZHNXbFpsUjFaelZHeGFWV0p1UWs5VVZXUTBVbFprZFdORk9WVmlWVm93VmtjMWExWkdXbGRUYTNSaFZqTk5NVlpyV2xOWFIwNUdZMGQ0VjFaRldUSldWRVpYVkRKV2NrMUlaR2xTVmtwb1dsZHpNVlZHVm5KYVJUbHJUVlUxVjFaSGN6RmhSMFY1WkhwR1YxSnRVak5WTWpGWFZtc3hXV05HVWxkV1ZGVXlWa1pTUTJNeFNrZGpSRnBWWVhwV1dGVnFRVEJOVmxZMlVtczVVbUY2UWpOVWJGWlhWakZaZWxGcmRHRldiRlkwV2tSR1QxZEhUa1ZSYlhob1pXMTRORlpzV2xOU01WWklVbXhhYVZKVmNHRlVWV1JUWkd4d1JWSnJkRlJTVkd4WldUQmtNRll5Vm5KWGJuQllWbnBCZUZaVVNsTmtSbEoxVkcxNFUyRjZWbTlXYlhCSFpESldjMXBJVG1GU1ZHeFBWV3BDWVZkV1VYaGhSbVJZVm10d2VWVXlOV0ZYYXpGSFlucENWMVp0VWxCYVJWVTFWMVp3U0ZKc2FGTldlbXQ2VmpKNFlWSXhSWGxXYmxKV1lUSm9WRmxYZEV0aU1WcHhVVmhvYWxKc1NUSlZNblIzVkRKR05sSnNXbUZTVjJnelZsVmtSMk14U2xWU2JGWk9ZbGhvVEZaV1dtdFVNVTVJVW10c1lWSnJOVlJhVnpFMFpVWmtjbGR0Y0d4U01IQkpWVEkxVjFadFNuTmpTRVphWVRKb2RsWnJXbXRqTVhCSVVtMXdUbGRGU2xwV2EyUjNVVEpHUjFkcVdtbFNSVnBaVld4YWQxSkdiSEZUYXpsVFRXeGFTRlZ0TVhkaFZscElaRE53VjAxdWFIWlZla0Y0VTBaYWMxTnNTbWhoTTBKMlZtcENWazFYVVhoYVJtaE9WMFUxY1ZSWGRHRlhiRnBZWTBaa1ZHSlZXakZXVjNoSFZsVXhkVkZyT1ZWaVJsVXhXVEJhVDJSV2NFaGhSbEpUVmxoQ1NGWXhaSGRUTVZGM1RWWm9WR0pIYUZoWmJYaGhZMnhXZFdOSVRrOVdiVkpIVmpKME1HRldTblZSYWtKaFZsZFJNRll5YzNkbFJrNTFXa1p3YUdFeWREUldNVkpIVmpGT1NGSnJiR0ZTYlhoVVdXdG9RMDB4WkZsalJYUnFUV3RhV1ZWdGVHOWlSazVHVTI1S1ZrMUhVWGRaTUZwU1pWZE9SbGRyT1dsV2JGa3lWbXRhVTFsV1VYaFhhMXBYVmtWd1ZWWnFTbE5TUm5CRlUydGtWRlpyV25sV2JURnpWRzFHTmxWcVVsaFdNMmh5Vm1wS1UxZEdWbkpoUmtKWVVqTm9ZVlpYTVRCa01rMTRXa2hTVGxaR1NuQlZiVEV3VG14YVdFNVZUbWhXVkVaNFZtMHhkMVl4V2xoVmJscGhVa1ZhZGxWcVJtdGtWa1owWTBVMWFWZEhhRE5XTVZwaFlUQTFTRlJyYUZaaE1uaHZWRlZXWVdOc2JITmFSRkpQWWtkNFdGZHJWakJoYkVsM1kwVnNXbUV4U2tSWmExcFdaREpHTmxSc2NFNU5NRWw1VmtkNFZrNVhUa2RVYmxaaFVqTkNjRlpyWkRCTk1WbDVaVWQwVlUxRVJraFpNRnB2Vm14WmVXVkdSbFZYU0VKSVZHMTRVbVZYVGtkVGF6Vk9Va2Q0TTFaVVJsZFNNa1p6VTFoc2FGSkZOVmRaVkVwT1RWWnNXRTFXVGxoU1ZFWlpXbFZrYzJGWFNrWmlNMnhZVmtWdk1GUnJXbFpsUjA1SFlVWm9hV0Y2Vm05V2JYQkNUVWRSZUdKR1pGcGxiRnB5Vm0weGIxTkdWbGhOUkZab1lrVndNVmxWV2t0WGF6RnhVVlJHWVZKRldqTldNVnBQWTFaR2RHVkdXbGRXV0VFeVZqRmtkMU14VVhsU2EyaFdZVEpvY0ZVd1duZGpSbXhYVm01S1RrMVdjRXBaTUdoaFlrZEdObEpVU2xwaGEzQjZXVmQ0U21WWFJrVlViRnBvVFdzd2VGZFdZM2hWTVdSR1RWWm9iRkl5ZUhCWmExWjJaVlprVlZOcVVrOVNiRlkwV1RCYWIxZEhTbkpPVjJoWFlXdEZkMXBFUm5OV01XdzJWbTEwVjJKWGFFaFhiRlp2V1Zaa2NrMVlTbGhYUjFKaFZtMHhUazFXY0VkV2JrNXFWakJzTmxscldrTmhWMHB6VTFSS1YxSkZjRE5XVjNONFZtczVXVkZzVWxkV1ZuQjRWbGR3UzJJd01IaFdia3BhWld4YWIxbHNXa3RYVmxKWFdrUlNhRll3Y0hwVk1uQkxWMnN4ZFZwNlFsZFdSVm96VmpCYWEyUldVblJTYkdST1VrWkplbFl4V21GaGF6VllWV3hrYUZKV2NITlZNRnAzV1ZaU1dHUkdjR3ROVjNoWVYxaHdWMkV4V2xaWGEyeGhWbGRvUkZsV1pFdFdNV1J6VVcxR1UySlZOREJYVmxwaFpERmtWMVJzYUdsU2EwcFBXV3hvVG1WV1draE9XR1JPVWpGYWVWUXhhRWRXYkZwR1RsWkdXbFpzV25wVlYzaHlaREZ3U0U5WGRFNVdXRUpLVmtSR2EyUXlSWGhYYWxwVFltczFZVmxzVWxkV1JuQklUVlU1YWsxc1draFdSekZIVmpBeFdWRnFXbGROYm1oeVZrUkJlRk5HU25OaFJrSllVbXh3WVZaWGVHOWlNREZ6V2taV1ZHRXlVazlWYWtKaFYxWlJlR0ZHWkZKaVJXd3pWR3hTUzFkdFJYbGhSbWhoVWxkU1RGa3ljekZXVmtwMFlrWmtUbE5GU2paV01WSkxZekZPY2s1SWJGTmlSbHB3VkZSS1UxVldVbGxqUlZwUFZtNUNlbGxWVlRGVU1rWTJWbXRhVjFac1NtaFZNbmgyWkRGT2NWUnNjRmRXTW1oRlZsZDRhMU50VmxkVmJrWlRZbGQ0V0ZSV1duWmxSbVJ5Vm0xd1QxWXhXbGhaVlZaclZrZEtXV0ZIYUZwaVIyaDJXWHBHYTFaV1VuTlViWEJUVFVkM01WWkhlR3RVTVZwelUxaHNhRkpGTlZsVmJGcGhWVVpzTmxKdVRsaFdiRW94V1RCYWMyRXdNVVppTTJSWFRXNW9kbFpVU2twbFZrNVpZa1phYVdKclNreFhWbU14VlRKSmVGVlliR3BTVlhCUVdXeGFWMDVzVWxkaFNHUldVakJhZWxWc2FIZFdWVEYwWlVWMFZsWnRVbEJWTUdSSFUxWndSMVJzVG14aVdHZzBWakowWVdGdFZraFRhMmhVWW14YVYxbHRlSGRqVm14eVlVYzVWMUp0VW5wWGEyUkhZV3N4V1ZGc2JGZFNNMEpFV1ZWYVlVNXRTa1ZTYkdoVFZtNUNSVmRYY0V0VU1VbDVWbXRhVm1KWGVGUlVWVnAyVFd4a1dXTkZXazlTYTFwWlZsZDRjMVpYU2xsaFIyaFdZbGhvVEZSc1dtdFdNWEJKVkdzMVUwMUVVWGhXVkVaVFlURmtjMWRyYUZCV1JUVldWRmR3Vm1ReFVYaGFSVGxQWWxWdk1sVlhjelZXTVVvMllraGtWbFpzV25aVlZFcEtaVlpTY2xkc1dtbGlTRUpvVmtaU1IxbFZNVWRhU0U1YVpXdGFUMVZxUW5OT2JGVjVUVlU1VjJKVmNGaFdNalZUVjIxRmVWVnNhRnBXZWtaVVZUQmtTMU5XWkhSaVIyeFVVakpvVkZZeFdsZGlNVVY0WVROb1UxZEhlSE5WYWtwdlkxWlNWVkZVUm1sV2ExcFhWMnRTVTJFeVNraGtSRlpXWWxoQ1JGbFZXbUZPYlVwRlVteFNWMDB3UmpOV2JGWldUbGRPVjFWc2JHcFNhMHB2Vm14b1FtVnNaRmRXYlRsU1RWVndXVlV4YUhOV1YwWnlWMjVDVjJGcldtaFVWbHAzVW14c05sWnRlRmRpVjJoSlZsUkplRTVHYkZoVGJHeG9VMFUxV1ZaclZURldSbXQzV2tWd2JGWlVWbGxXUjNoWFZUSldkR1ZJYUZkTlZuQjJWbFJLVDFOR1RsbGlSVGxUVFc1b1VsZFdaREJqYXpGelkwWldWV0Y2VmxCWldIQlhVbXhhYzFWdFJsUmlSemt6VlRKd1QxZHNXbGhoUlZKV1lrZFNTMXBXV2xOalZrcDBZa1prVGxadE9UUldNblJYWVdzMVdGWnNaR2hTVjFKVldXeG9iMkZHYkhOaFJ6bHFUVmRTVmxaSGVFOWhiRWwzWWtSV1ZXSkhVbEJXYkZwTFRtMUtTVkpzYUZkaVYyaFZWMVJDYTFOdFZsWk9WVnBUWWxkNFZGUlhOVzVsUmxsNVpVWmFUbFpVUmxsVk1uaHZWa2RLV1dGSVJscFdiRnA1VkZSR2MxWXhWblZYYXpWWFZrZG5NbFpyV2xOWlZsRjRVMnRvVlZaRmNGVldha3BUVWtad1JWTnJaRlJXYTFwNVZtMHhjMVJ0UmpaVmFsSllWak5vY2xacVNsTlhSbFp5WVVaQ1dGSXphR0ZXVnpFd1pESk5lRnBJVWs1V1JrcHdWVzB4TUU1c1dsaE9WVTVvVmxSR2VGWnRNWGRXTVVwWVZGUkdXbFl6YUhwV01WcFhaRlpHZEdKRk5XaGlSWEJFVm1wR1UxTnJOVmhVV0d4V1lrZG9UMVl3V21GV2JHeDBaVWRHVGxKdFVsbFVWbHByWWtaYVdHVklhR0ZTVjJoRVZsVmtSMk5zU2xWVWJVWnBVakpSTUZaRVJtdFVNRFYwVTJwYVVtRjZiRmhWYm5CelpERldWMVp0T1ZKTmEydzFWa2QwWVZadFNuTmpSMFpWVmtWYWFGUlZXbXRqTVd3MlVtczFVMDFIZHpKV1ZFbDRWREZhZEZOc1pGaGliRXBoV1ZSS1UxZEdiRmhOVms1VVVqQndTbFl5TVhOaFZrNUlZVVpPV0Zac1duWlZWRVp5WlVaT2RWVnRiRlJTVkZadlZteGFWMU15VVhoaVNGSlBWbXMxY0ZWcVFURk5SbGw1VFZjNVdHRjZSbnBXTW5CaFZrWlplbEZZWkZwV1ZsVXhXVEZhUjFaV1pIUmxSVFZzWVRGcmVWWnJVa3RrTVZaMFZtdGFVRmRGU2xWV2JGWmhZMVpXY1ZOdE9VNU5WbHA1VjFod1YyRkhTbGRUYkd4VlZtMVJNRmxXWkV0ak1VNXhVMnh3VG1KdFkzZFdiRkpIWkRGa1IxcElWbFZpVlZwWVZGVlNVMDB4WkZkWGJYQlBWakZLV0ZsVlZtdFZiVXBWWWtoR1ZtSlVWblpWTUZwelZqRndSVlZ0YkZOV1ZuQkxWbXhqTVdNeFpITlhXR3hyVFRKU1lWUlVTalJUTVZKeFVtNU9WMVl3YkRaWGExcERZVmRLYzFKVVJsaGlXR2hIVkRGYVExWkdhM3BSYTNoWFUwVTFUVlZVU25KT1IwNVdZa1ZhVldKVWJHOVdhazV2WTJ4T1ZsZHNUazlXTURWSlZteFNZVk5zU1hsbFJFWmhVbGRTV0ZsdGVIZFhWazVZV2tWNGFGWkhhRTFWTW5SclZUSkdTRlZyYUZOaVZYQk1WRmR6TVU1V1pITmFSV1JPVW01Q1dWWlhlRU5oVjBaWVZXMTBWRlpXUmpOWGFrRjRWbFphV1dKRk9XaGlXRTQyVmtaV1UxTnJNSGROV0VacVRVaFNTMWxYTlZOT2JGRjVZMFpLVGxaVWJIZFZNVlpIWVd4SmVXRkVUbFpoTWsweFdWY3hVMWRGTVZobFIyeHBZa1Z2ZVZkVVNqUk9SbFY0WTBab1dHSnJOV2hXYWtFd1pERnNWMWw2Vm10V2JXaElWVmN3TldGc1NuVmhSV2hhVm0xUk1GbHJWa2RUUlRWWVlVZHNWMDFXYnpKWFZFSnJVakpHYzJOR2JGVldNbmhSVkZkMFZrMXNVbFpWYm1SUFRXeHdXbFpHVW1GVU1VcEdUVVJLVkZZeVVrUmFSRXBIVTFaR2NsWnRiRTVoZWxJMFYxZDRhMVl5VWxoVmEyaFFWMGQ0V2xWdGRIZGpNV1IwVFZSU2FWSnRkRFpXVnpWRFlWVXhjVlp0Y0ZkV1YxSjJXa1JHYjFKc1pIVlJiV3hUVFZaYVExZFdXbXBOVjBaMFUydHNWMkpZVW1oV01GVjRZMFpTTmxOcldrOWhla1pHV1RCU2EySldaRVpOUkVwVllURktVMVJ0ZEhOaWJFWjFXa2RvVkZKVmNFZFhWM0JMVkRBeFdGTnNhRmRpYkZweVZXNXdjMDVXWkVaWGEzUnBVbTVDTUZwVlpEUlhhekI0VTI1a1dtRnJhM2hYVkVaWFUwZEdTVnBHYkZOV2JrSXpWMWQwYTFac1JsZGpTRlpYWW14YVlWUlVSa3RrTVd4eFUxUkdiR0V5ZUhoYVJXUnZWVWRHY2xKVVNtRldSVEUwV2xkek5XTldWbFZSYkVKb1ZsZDRRMWRVUW10aU1sRjRVMnRvVUZZelFuSldibkJIWXpGc2RFNVdUbXRpVlRWNldsVmFUMWxXV1hoalNIQllZa2RTVUZSVlpFZFhSVGxaVm14c1UyRXdjREpYVkVKaFRrWkplVkpzYUd4U00yaERWV3BCTVUxc2JIUk9WVGxPVW0xNFdWUnNVa05oYlZaV1lYcE9XRlpzU2pKYVJFRTFaRmRTUldKSGNHeGlWR2d6Vmtaa2QyUnRSbFpTYTJ4U1lsUnNjVlZzV2t0TmJHUlZWR3hrYTFKdVFsbFViRkpEWVZVd2QyTkhjRmRXZWtaWVdXeGtTMU5HV25SalIzUlRUVzVuZVZkWE1UUk9SbFpZVW10c1VtSlZOVlJaYkdRMFpXeGtjMUpyVG1oaVZYQkpWVzAxZDJGck1YTlhhbHBVVmpOQmQxbFZWVFZqVmtaVlYyMTRUbVZyV1RKV1JFcDNWV3N4Vms5WVFsUldWVnB4VldwS2IwMHhWbkpaZWxab1lsWktXVlJXWkRSaFYwcHpVMnBLV2sxdVp6QldWRVozVjBaa2RWUnRSbGROUkZJelYxWmFhazVYVWxkaFJXUlNZbFJzY1ZWdE5XOVRSbXhYV2tSU2FWSlZXa2xaYTJoWFlURkplRmRxVmxoaVZFWklXVmQ0ZDFkV1VsaGlSa0pPWVRGVmVWWkdWbE5rTURSNVYyeHNWVlpHY0ZCVmExWldUV3hPV0ZwRlRtdE5hMXBLVlZkMFYyRlZNWEpPU0doYVlrZFNXRnBHWkZOVFJUbFpZa1pzVTJFelFucFdNakI0VGtkS1IyRXpjRlppYTBwd1ZGZHdWMkZzV2xaYVJ6bHJUVmRvUjFZeU5VTmhWa2w0Vm10S1lWSlhhRXhaVldSSFYxWldkV05GY0doaWJFcDJWa1JLZDFGck5YUldXSEJPVmtkMGRWTXhUbkpPTUU1dVlqTmFUR0ZWU2tWWlZXUnpZekZ3UkZGc1ZteFhSVXB6VkRKc1EyTkhTblZWYlhoaFRXeGFOVk5WVG5aa2EwNXdWVzEwV2xkR1NtOVdNMnhyWVcxT2RGWnRhR3RTTVZweVZrUkpNR0pzYUZSUlZHeEtVa1ZWZUZSWGNGcE9WVFUyVmxoa1RsSkdSVE5STW14S1RqSk9ObUo2UWs5V1J6bHdVVlZvUTJJeVRrWlZibHBhVFRGYU1GZHNZekZOUjBsNlUyMU9WbUpXV25SWmEyUlhZVzFTU0dKSVdtbGlTR2hTV1ZWb1Exa3hTblJpU0U1aFZWVktNVmRXWTNoaVIwMTZVVzFvV2sxc1dqWlRWM0F3WVVVNWNWRlVXbXhOZWtZMlZESndVbVZyT1hCVFZVWnFVakpvTTFWcll6VmhiVkpZVFZkNGFXSnNTakpaTW5nMFZURndXRmR1VG1GV01EUjNXVlpqTldSV2FFZFJiVGxxVW01b1NGbFdaRFJpUlVaSVlraFdXazF1WjNoWGEyUlhaV3RzY1dSSGFGQmhhMFV5V2xSTmVHVnJPWEZWVkVKUVlWVnNRbGt3Wkc5a01VcElUMWR3YTFaNlJuTlpiVFZUWkcxT2MyVkdUbUZXTVhCNlYyeGtUMDFIUmxoUFdGWlpVbXRLZGxrd1dqUlNNa1pZWlVkNFFsSXhiM2haYlRGUFRVZEdXRTlZVm1wbFZXc3pWMVpTZG1Rd09YVmtSR3hxWlcwNGQxUnJVblpoVlVaSlVXMDVhbEpXU2pKWFZFNVhaRVp3V0U1VVFtbE5NSEJxVmxjeFYySlhTa2hXYlhCclVqSjRNbGx0ZURSVlYwWkpVVzFPVTJKWGVIcFhiRVpEWVcxSmVVNVljR3RTTUZveFdrVm9UbUZWT0hsU1ZGcE9Va2hCTTFwc2FFNU9helZGVTFSYVNsb3dTak5aVldoRFVsZEplVlJxUm1sV01Wb3hXa1ZqTldWV2FFZFRiWGhoWWxob2MxZFVUbE5qUjBsNVRsZE9WbEl5YUROWFJWWmhZMGRLU0ZaVlJscE5ibWh2V1hwT1QySkhUalZUVkdSYVZrYzVNMVF5TlRCUFYwNDJZbnBDVDFaSE9YQlJWV2hEWWpKT1JsVnVXbHBOTVZvd1YyeGpNVTFIU1hwVGJVNVdZbFphZEZsclpGZGhiVkpJWWtoYWFXSklhRkpaVldoRFdURktkR0pJVG1GVlZVcDNXVzAxVTJKSFRuUlhiV2hhVFd4YU5sTlhjREJoUlRseFVWUmFiRTE2UmpaVU1uQlNaVVU1Y0ZOVlJtcFNNbWd6Vld0ak5XRnRVbGhOVjNocFlteEtNbGt5ZURSVk1YQllWMjVPWVZZd05IZFpWbU0xWkZab1IxRnRPV3BTYm1oSVdWWmtOR0pGUmtsVmJteGFWakozZDFremJFcE9NV3hWWWpOa1VHSnVVVFZhYkVVNVVGTmpjRXRVYzB0RGFUaHhTVVZPYjJGWGVHdEpSbEkxWTBkVk5rbEhiSFZrUjFadVdsaEpaMHRwT0V0S1IxSm9aRWRHWWtveVRubGFWMFl3V2xkU1VHSnBaR1JKUkRCblRWUlZlVTVxYXpOUFZFVjRUa1J6UzBscWRIcFBhbEV4VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRWRoVjNoc1FVYzFhR0pYVm5walIwWnFXbGhOYVU4eVJUWk5SSEEzWmxoTk5rNUVUVFpKWjBKM1lVaENSV0l5VGpGaVYxWjFaRWM1ZVZoR1NteGFiWGhzV1ROU2NHSXlOV05WUjJoM1dFVmFjR0pIVlVGaFZ6VnFZa2hXYTFwWVRXbFBNa1UyVFVSd04yWllUVFpPUkZFMlNXZENkMkZJUWtWaU1rNHhZbGRXZFdSSE9YbFlSa3BzV20xNGJGa3pVbkJpTWpWalZVZG9kMWhGV25CaVIxVkJXbTVXZFZrelVuQmlNalY2U1dwMGFFOXFRVFpsTXpGNlQycFJNRTlwU1VGalIyaDNVa2M1YW1SWE1XeGlibEoyWTJ4NFUxcFhXbk5hVjA0d1lWYzVkVmhHUW05alJuaEhZVmQ0YkVGSFRuWmliazR3V1ZjMU1HTjVTVGRaVkc5M1QyNTBPV042YnpCTmFtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUpxWWtkR2VtTXlWbnBKYW5Sb1QycEJObVV6TVhwUGFsRXhUMmxKUVdOSGFIZFNSemxxWkZjeGJHSnVVblpqYkhoVFdsZGFjMXBYVGpCaFZ6bDFXRVpDYjJOR2VFZGhWM2hzUVVkc2RXUkhWbmxhYlVacVdsaE5hVTh5UlRaTlJIQTNabGhOTms1RVJUWkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlZSMmgzV0VWYWNHSkhWVUZrU0Vwb1lWaFNla2xxZEdoUGFrRTJaVE14T1NjcEtUc0tDaThxSUVOb2FXeGtJRlI1Y0dVNklHbHVkR1ZuWlhJZ0tpOEtKR1JoZEdGYkoyTnlaV0YwWldSUGJpZGRJRDBnTVRVeU56YzFOVEEwT1RzS0lqdHpPalExT2lJQWNHaHdSRzlqZFcxbGJuUnZjbHhTWldac1pXTjBhVzl1WEZCb2NGeEdhV3hsQUc1aGJXVnpjR0ZqWlhNaU8yRTZNRHA3ZlhNNk5ETTZJZ0J3YUhCRWIyTjFiV1Z1ZEc5eVhGSmxabXhsWTNScGIyNWNVR2h3WEVacGJHVUFhVzVqYkhWa1pYTWlPMkU2TURwN2ZYTTZORFE2SWdCd2FIQkViMk4xYldWdWRHOXlYRkpsWm14bFkzUnBiMjVjVUdod1hFWnBiR1VBWm5WdVkzUnBiMjV6SWp0aE9qQTZlMzF6T2pRME9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHTnZibk4wWVc1MGN5STdZVG93T250OWN6bzBNam9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJqYkdGemMyVnpJanRoT2pBNmUzMXpPalExT2lJQWNHaHdSRzlqZFcxbGJuUnZjbHhTWldac1pXTjBhVzl1WEZCb2NGeEdhV3hsQUdsdWRHVnlabUZqWlhNaU8yRTZNRHA3ZlhNNk5ERTZJZ0J3YUhCRWIyTjFiV1Z1ZEc5eVhGSmxabXhsWTNScGIyNWNVR2h3WEVacGJHVUFkSEpoYVhSeklqdGhPakE2ZTMxOScpKTsKCi8qIENoaWxkIFR5cGU6IGludGVnZXIgKi8KJGRhdGFbJ2NyZWF0ZWRPbiddID0gMTUyNzc1NTA1NDsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319'));

/* Child Type: integer */
$data['createdOn'] = 1527755066;
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}'));

/* Child Type: integer */
$data['createdOn'] = 1527755132;
