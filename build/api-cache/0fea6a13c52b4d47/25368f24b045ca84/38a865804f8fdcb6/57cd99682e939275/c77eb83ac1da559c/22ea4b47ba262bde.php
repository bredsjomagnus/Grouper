<?php 
/* Cachekey: cache/stash_default/documentation\api\php\afc6ea1fb1889b8ec1a9c0a9b6967e87/ */
/* Type: array */
/* Expiration: 2018-06-04T22:25:21+00:00 */



$loaded = true;
$expiration = 1528151121;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755149;
