<?php 
/* Cachekey: cache/stash_default/documentation\api\php\2b4dcec47a2781d79c707d5b37f61a43/ */
/* Type: array */
/* Expiration: 2018-06-05T06:10:48+00:00 */



$loaded = true;
$expiration = 1528179048;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755140;
