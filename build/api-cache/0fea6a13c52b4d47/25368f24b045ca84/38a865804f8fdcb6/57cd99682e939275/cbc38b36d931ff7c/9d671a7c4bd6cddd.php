<?php 
/* Cachekey: cache/stash_default/documentation\api\php\0e579b9dc783b7c15432f5bbd2d3c2ef/ */
/* Type: array */
/* Expiration: 2018-06-04T21:42:12+00:00 */



$loaded = true;
$expiration = 1528148532;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755156;
