<?php 
/* Cachekey: cache/stash_default/documentation\api\php\16309082a1c7a7fd6c83fea6f7abb24b/ */
/* Type: array */
/* Expiration: 2018-06-05T07:10:20+00:00 */



$loaded = true;
$expiration = 1528182620;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"558100477a2130db0154acf585dfc7b5";s:39:" phpDocumentor\Reflection\Php\File name";s:20:"200f21c066ed6c12.php";s:39:" phpDocumentor\Reflection\Php\File path";s:121:"build/api-cache/0fea6a13c52b4d47/25368f24b045ca84/38a865804f8fdcb6/57cd99682e939275/153f044319d549d4/200f21c066ed6c12.php";s:41:" phpDocumentor\Reflection\Php\File source";s:30152:"<?php 
/* Cachekey: cache/stash_default/documentation\api\php\9743ccbfa6bdcbb4fcd064852fd17725/ */
/* Type: array */
/* Expiration: 2018-06-04T15:54:49+00:00 */



$loaded = true;
$expiration = 1528127689;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjVjY2Y4MjkzZWE1N2U1ZmU2ZjU2NmE1YjM3ZmFmYThlIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6ImJkYjA4MTFlMzJlNWIyMjcucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTIxOiJidWlsZC9hcGktY2FjaGUvMGZlYTZhMTNjNTJiNGQ0Ny8yNTM2OGYyNGIwNDVjYTg0LzM4YTg2NTgwNGY4ZmRjYjYvNTdjZDk5NjgyZTkzOTI3NS85MzFhYTdiYzIwZDZmYzU3L2JkYjA4MTFlMzJlNWIyMjcucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoyMTQ0NDoiPD9waHAgCi8qIENhY2hla2V5OiBjYWNoZS9zdGFzaF9kZWZhdWx0L2RvY3VtZW50YXRpb25cYXBpXHBocFw1YjMzMmEwODljYzc4MmIzZjc3ZDM5Mjk5NmJjMDg3NC8gKi8KLyogVHlwZTogYXJyYXkgKi8KLyogRXhwaXJhdGlvbjogMjAxOC0wNi0wNFQxODowNTo0OSswMDowMCAqLwoKCgokbG9hZGVkID0gdHJ1ZTsKJGV4cGlyYXRpb24gPSAxNTI4MTM1NTQ5OwoKJGRhdGEgPSBhcnJheSgpOwoKLyogQ2hpbGQgVHlwZTogb2JqZWN0ICovCiRkYXRhWydyZXR1cm4nXSA9IHVuc2VyaWFsaXplKGJhc2U2NF9kZWNvZGUoJ1R6b3pNem9pY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxJam94TWpwN2N6bzBNem9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJrYjJOQ2JHOWpheUk3VGp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBR2hoYzJnaU8zTTZNekk2SWpSak1XTTFZMlJpWlRRME5qbGxZelJrTlRkbFpXVXpaalV5WkRnellUUmtJanR6T2pNNU9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHNWhiV1VpTzNNNk1qQTZJbUk0TjJNd01EVXpOVEV3TmpabE1HWXVjR2h3SWp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBSEJoZEdnaU8zTTZNVEl4T2lKaWRXbHNaQzloY0drdFkyRmphR1V2TUdabFlUWmhNVE5qTlRKaU5HUTBOeTh5TlRNMk9HWXlOR0l3TkRWallUZzBMek00WVRnMk5UZ3dOR1k0Wm1SallqWXZOVGRqWkRrNU5qZ3laVGt6T1RJM05TOHpOVGM1WW1Zd00yTmpOell6TlRRMkwySTROMk13TURVek5URXdOalpsTUdZdWNHaHdJanR6T2pReE9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFITnZkWEpqWlNJN2N6b3hORGt4TWpvaVBEOXdhSEFnQ2k4cUlFTmhZMmhsYTJWNU9pQmpZV05vWlM5emRHRnphRjlrWldaaGRXeDBMMlJ2WTNWdFpXNTBZWFJwYjI1Y1lYQnBYSEJvY0Z3M1lqRmxOemd5WVRNM09HSTNNekZpT1dZMU56TmxNREF3T1RBME1qRTRaaThnS2k4S0x5b2dWSGx3WlRvZ1lYSnlZWGtnS2k4S0x5b2dSWGh3YVhKaGRHbHZiam9nTWpBeE9DMHdOUzB5TjFRd05Ub3hOem8xTmlzd01Eb3dNQ0FxTHdvS0Nnb2tiRzloWkdWa0lEMGdkSEoxWlRzS0pHVjRjR2x5WVhScGIyNGdQU0F4TlRJM016azRNamMyT3dvS0pHUmhkR0VnUFNCaGNuSmhlU2dwT3dvS0x5b2dRMmhwYkdRZ1ZIbHdaVG9nYjJKcVpXTjBJQ292Q2lSa1lYUmhXeWR5WlhSMWNtNG5YU0E5SUhWdWMyVnlhV0ZzYVhwbEtHSmhjMlUyTkY5a1pXTnZaR1VvSjFSNmIzcE5lbTlwWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFIyRlhlR3hKYW05NFRXcHdOMk42YnpCTmVtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUpyWWpKT1EySkhPV3BoZVVrM1ZHcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJSMmhvWXpKbmFVOHpUVFpOZWtrMlNXMU5lVTlFVFRSTlJHc3pUVWRPYUZsVVJtbE9NbFV4VGtkUk5VNUVRbXhOUkVVelQxUnJNbGt5Vm14SmFuUjZUMnBOTlU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhIWVZkNGJFRkhOV2hpVjFWcFR6Tk5OazFxUVRaSmFrWm9UbFJuTUZwSFRtaFpWR1JxVGtSYWEwOVVVWFZqUjJoM1NXcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJTRUpvWkVkbmFVOHpUVFpOVkVsNFQybEthV1JYYkhOYVF6bG9ZMGRyZEZreVJtcGhSMVYyVFVkYWJGbFVXbWhOVkU1cVRsUkthVTVIVVRCT2VUaDVUbFJOTWs5SFdYbE9SMGwzVGtSV2FsbFVaekJNZWswMFdWUm5NazVVWjNkT1IxazBXbTFTYWxscVdYWk9WR1JxV2tSck5VNXFaM2xhVkd0NlQxUkpNMDVUT1d4WmJWa3dXVmRXYWxsNlp6QlBSRWt4V2tSSk1VeDZSbWhPVkdjd1drZE9hRmxVWkdwT1JGcHJUMVJSZFdOSGFIZEphblI2VDJwUmVFOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oSFlWZDRiRUZJVG5aa1dFcHFXbE5KTjJONmIzaE5SRUY0VFdwdmFWQkVPWGRoU0VGblEyazRjVWxGVG1oWk1taHNZVEpXTlU5cFFtcFpWMDV2V2xNNWVtUkhSbnBoUmpscldsZGFhR1JYZURCTU1sSjJXVE5XZEZwWE5UQlpXRkp3WWpJMVkxbFlRbkJZU0VKdlkwWjRiRmxVV20xTlZHTXpUbFJKTlZsNlpHbE9SRUUxV2tSS2ExbHFSWGxOYlZwclRVUkZlbGx0Vm1wT2FUaG5TMms0UzB4NWIyZFdTR3gzV2xSdloxbFlTbmxaV0d0blMyazRTMHg1YjJkU1dHaDNZVmhLYUdSSGJIWmlhbTluVFdwQmVFOURNSGRPVXpCNVRteFJlRTVVYnpCT1JHOTZUa056ZDAxRWIzZE5RMEZ4VEhkdlMwTm5iMnRpUnpsb1drZFdhMGxFTUdka1NFb3hXbFJ6UzBwSFZqUmpSMng1V1ZoU2NHSXlOR2RRVTBGNFRsUkpNMDE2VVRWT1JHTXdUM2R2UzBwSFVtaGtSMFZuVUZOQ2FHTnVTbWhsVTJkd1QzZHZTMHg1YjJkUk1taHdZa2RSWjFaSWJIZGFWRzluWWpKS2NWcFhUakJKUTI5MlEybFNhMWxZVW1oWGVXUjVXbGhTTVdOdE5HNVlVMEU1U1VoV2RXTXlWbmxoVjBaellWaHdiRXRIU21oak1sVXlUa1k1YTFwWFRuWmFSMVZ2U2pGU05tSXpjRTVsYlRsd1dUQmtiMlF4U2toUFYzQnJWbnBHYzFsdE5WTmtiVTV6WlVaT1lWWXhjSHBYYkdSUFRVZEdXRTlZVmxsU2EwcDJXVEJhTkZJeVJsaGxSM2hLWVcwNU5GUlhjSGRPTWs0MllucENUbVZ0T1hCUlZXaERZakpPUmxWdVdscE5NVm93VjJ4ak1VMUhTWHBUYlU1V1lsWmFkRmxyWkZkaGJWSklZa2hhYVdKSWFGSlpWV2hEV1RGS2RHSklUbUZWVlVweVdXcEtUMUV5U2toUFYzQm9aVlZyTTFaSGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlNNbWh2V1hwS2JtRlZPSHBVVkZwT1pXdHJNbE5YTVdGaFJuQkZZWHBTV21Wck1IZFhiRkpxVFRBeFZWTlVWazlTUm13MVZGaHdVbVZWTlZoU1dIQk9UV3hyZUZkWWNITmlSbkIwVmxoa1NtRnVValpVTW5CT1RsVTVjRk5WUm1wU01tZ3pWV3RqTldGdFVsaE5WM2hwWW14S01sa3llRFJWTVhCWVYyNU9ZVll3TkhkWlZtTTFaRlpvUjFGdE9XcFNibWhJV1Zaa05HSkZSa2hPVjJocFZqRldjRlI2VGs1T2F6RnhVVlJhU21GdGMzZFViVEZoWVZVNVZWcDZTbUZTUlZWM1ZHeFNUMkpXYkRaaE0xWnFVakpvTTFOWGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlRSVXB2V2tWa2JtRlZPSHBVVkZwT1ZrVnNORlF5YkV0aFYxSllZa2hPWVZGNmJHOVpNR1J5WkVacmVWSnRjR2hTTVZZeVZGVmtZV0pHYkZWWGJXaE9Wa1UxY1ZSc1VrdGhWVFZJVlZSQ1QyVlVhRFZVYkZKT1RXczVTRmRZYkU5U01Hd3pWR3RTVjJGc2JGVmFla0pOWldzd01GZFdVbTVOYXpWVldqTmtUMUl4YXpCWGJURlRZV3hzY1ZkWVdrOVdSMUp4VjJ0U2NrNVZOWEZhTTJ4aFZrZDBObFF4VWtwTk1EVlVUMWRvWVZZd1ZURlVibkJDVFZac2NWa3pjRTlXTURFMlZEQlNRbVZyZURaaGVrSlBZbFp3Y0ZReFVtNU5iSEJGVWxSQ1QxWkZOWFJYV0hCeVpGZE9TR0ZJWkVwaGJsSTJWREp3VW1WRk9YQlRWVVpxVWpKb00xVnJZelZoYlZKWVRWZDRhV0pzU2pKWk1uZzBWVEZ3V0ZkdVRtRldNRFIzV1Zaak5XUldhRWRSYlRscVVtNW9TRmxXWkRSaVJVWkpWRzVhYTFkRmNIRlhiRTVLVGpKT05tSjZTazVsYkVZelZESnNTazlHUVhwUmJUbHFVVEJHVEZSSWJIWmFNVVY1VW0xd2FGSXhXbmxYYkdoeVRtdHNTRlJ0YUZwTmJXaHpWRVJPVDAxR2JGbFViVGxaVFd4S2MxZHRNVWROVjBwSlZWaGFZVko2YkhGYVJtTjRZa2RLZFZWdGFHdFNNbmd5V1cxNE5HRkhUa2hpUjA1cVVqSm9NMWRGVW5OaVZuQllWMjF3VDAxcldtOVhiRkpDVGtVeFZWRnRNVkJTUlRCM1YxWlNUMkZWT1VoVGJURmFZbFpWZVZkV1VtdGhWVEZ4WVhwS1RXVlZSbmhVU0dSMlpHdDBjRkZzVm14WFJVcHpWREpzUTJGSFRuVlRiV2hzVlRCR2VGUklaSFprYTNSd1VXdGFiRk5GU25kWk1qRkhUVWRHV0U5WVZsQmhWVVkxVkZWU1JrNUZlRlZSVkVaTlZrVnJlVlpyVWtaTk1EbHhWbGhzVUdGc1JqVlRNM0JDWkRBNWNWRllaRXBSTWpreVVUSmtkbE13VG5CVmJrNXBUV3RhY2xkc1pGSmFNVUpVVVdwQ2FtSnNXbk5VTTJSMllURndXV0ZJWkdoWFJYQnZXa1ZrYzJSdFNuQlJWR3hLVWtWVmVGUlhjR3BsYXpWVldUTm9UMkZyYXpOUk1tUjJZVEZ3U0ZKcVFscFZNRVUxVTFWa1IyVlhUblJTYWxaTVVUSnpNMUV5Wkhaa2EzUndVV3RTYUZJeWVIcFhhMDVEVmxkV1dWRnRlRkJoVlVveVYxY3hkMkpHYTNwVlYyUk1ZVlJvVEZOclpGTmhSMUpJVW0xS1MwMHdjSE5hUldoWFpWZEtjRnBIVWtwU1JFSnVXa1pqTVdWc2NGbFRia0phVmpOb2QxcFhNVlppTVd4MFVtNXdZVlpHYTNkWFJFcFRZa1pyZVU5WGRHRlZNbVIxVm10b2QyUnRWbkpOVkZwcFRXMTRjVlZxU205Tk1WWnlXWHBXYUdKV1NsbFVWbVEwWVZkS2MxTnFTbHBOYm1jd1ZsUkdkMWRHWkhWVWJVWlhUVVJTTTFkV1dtcE9WMUpYWVVWa1VtSlViSEZWYlRWdlUwWnNWMXBFVW1sU1YzaDRXV3BPYjFSdFJuVlJWRTVhVFROQ01sUlZWWGhPYlVsNVlrVktWRkpWY0RKWFZFSlhWVEpTYzJFemNGZGliRXBvVm01d1ZtUXhiSEZVYTNSYVRWWmFNRlp0TUhoaFZrbDRWMjVHWVZKWFVucGFSekZMWXpKV1IxSnRhRlJTVlhCeFZsY3dlR015VFhoalJrcFNZbGhTY0ZSWGN6RlNSbXh5V1hwV2FHSlZXVEZWTVZKclZsZEdkVlZxV2xWTmJrSlBWR3hWTldOR1RsWlNiWEJUVFcxbmVsWlhkR3BPVjBaMFZXeG9UbFl6YUhCWmJYaExUV3hyZVdWRVVsWk5XRUpaVmpJMVQxbFdXWGRPU0dSYVZtMU5NVnBHV205U01VWjBUMWR3VTJKdGFFbFhWbHByVGtkS1JsSnJhR2hTTW1oeFZGY3hhMk5HVWpaVWF6VlBZWHBGTWxVeFVtRlRiVVowVkdwT1ZWWXpRa2haYTFwM1UwWktkR0ZGTldoaVJYQjJWa2N3ZUZKck5WWk5WbFpZVmtaYVlWWnJXa1psVm1SVlUyczFiRlp0ZUZaV1ZtaHpXVmRHYzJOSVJsaFhTRUpEVkZkMGMyTlhVa2xqUmtKb1lYcEJlRlpFU25OVGJFWllWR3RvYUZOSFVsUlZibkJ6WTFad1Ixa3phR2xTTUhBeFZsYzFZV0Z0U2tsaFJsSllZa2RTYUZsNlJuZFhSbEp4VVcxb1YyVnRkM2hXTUZaaFVUSkplVlJyWkd4U1YxSnZWbXBPYjJNeFJsWlpla1pvVWpCd1dWWnNaSE5WUlRCM1RVUktWVlpzU2xkVWJYUnpZekZHZEU5WGJFNWhiRnA2Vm10ak1WWXlVa2RpU0ZKWFltMTRUbGx0ZEV0a2JHdDNWR3R3VDAxck5ESlphazUzVlVaYVNFOVlRbEpXVjJoRVdXcEtUMUpzVm5WWGJIQk9UVlp2ZDFZeWVHcE5WVEZJVTFod1ZHSlZOVmRaYkZwaFpFWnNjbHBHWkdoaVZrcEpXV3RvWVdGWFNrbGhSa3BhVmxkb1JGZFVSa3RrUjBwSlZHMUdWbFpWYjNwV01WcHZWVEpKZDJKSVJtdFRTRUpSV1ZkNGNtUXhVWGxpUlhST1lraENXVlJzWkRCaFZUQjNZa1JLV0dKVVZqTlpWV1JMWkVkS1NWWnRiRTVOVld3elYxYzFjazVYU2xkaVJtaHJVak5vY1ZsV1VuTk9iR3Q1VFZVMWEySkZjREJWYlRWTFdWWmtSbUpFU2xkV1YyaE1Xa2N4VTJSSFNraGtSMFpZVWxkM2VWZHJWbTlUTVhCelYydGtWRmRHY0ZkVmFrcHZUV3hzZEUxV1pGVk5iRXBaVkZaa2MxbFdaRVppUkVaYVRVZFNkbHBFUW5OalYxSkpZMFpDYUdKRldUQldSRXB6VTJ4R1dGUnJhR2hUUjFKVVZXNXdjMk5XY0VkWk0yaHBVakJ3TVZaWE5XRmhiVXBKWVVaU1dHSkhVbWhaZWtaM1YwWlNjVkZ0YUZkbGJYZDRWakJXWVZFeVNYbFVhMlJzVWxkU2IxWnFUbTlqTVVaV1lVVTVhMkpXU2xwVk1qRjNXVlpWZDJGNlRscE5NMEl5VkZSQk5WWlhSalpYYTNCb1ltMU9NbGRVUW10aU1sRjNWRzAxYWxOR1dtRldibkJIWXpGc05sUnJUbWhTYlhRMVZteGthMVV5U2xaWGJteFlZa2RvVEZkVVJsZFRWazUxVjIxMGFWWXphSGxXTW5odlV6RnJlVlZyYkZSaVZuQllWVzEwY2sweFJYbGFTR1JvWWxWd1NWVnROWGRoYlZaV1UyeEtXbFpYVFRGYVJscDNWbXMxVlZKdGJGZE5TRUo2VjFSS2MxRXlTa2hXYTJ4V1lsaG9jRmxzV2t0T2JFNVdWMnBTVTAxWGVGbGFSV1EwWVcxS1NXRkdTbHBOYWtFeFZGY3hSMWRHVm5SbFIzQnBVMGRvVTFkV1ZtcE9WMUpYWTBaYVQxWkZXbkJXYWtKM1l6RnJlVnBJWkU5TlJUVjNWVlprYTFOc1JYZFRhazVhVFdwQk1WUlZXbmRYUmxKeFVXMUdWMDFWV25WWFdIQlBWVEpHU0ZWcmFHbFNNMEpMVlZSR1MyUkdiSEZVYTNSclVtMTRXbFpYTlhkVGJFcEZVVzAxV0ZadGFFeGFWbHB6VjFkRmVVOVZVbWhXVlZwMVZURldUMUZzYjNkaVJWSlNWakpTVEZwWGRFWmxSbEpXVkdzMWFHRXlkekZXUm1SM1UyMVdWazFZUmxSaWJYZDZWWHBDYzFKR1JsaGFSWEJTVFVWYWRWVXhWazlSYlVweVRWVldWMWRJUWt0YVZsVjRZMVpPV1dKRk5XaGhNbmN4Vmtaak1WUldSbGhQVnpWVVZsVTFRMWRxUW5OU1JrWllXa1Z3VWsxck5IcFdSM2hUVlcxR2NtSkVWbFZXTTBKTFdsWlZlR05XVGxsaVIzQnFUVVUxZDFWV1pHdFRiRVYzVW0wMVZGWlZOVU5YYWtKM1RteEdWVkpyT1ZaTlJFWjRWVEZvYzFSdFJuSmlSRlpWVmpOQ1RGcFdhR3RVUms1V1ZHdEtZVTFIZUVWVlZtUnJVMnhGZDFKdVZsVldWVFZEVkZaVmVGSkdVbGhhUlhCc1ZsUkdlRlV4Vms5VWJVWnlZa1ZTVlZZelFreGFWbWhyVkVaT1ZsUnJTbUZOUjNoRlZWWmthMU5zUlhkU2JsWlZWbFUxUTFSV1ZYaE9WbEpZV2tWd2JGWlVSbmhWTVZaUFZHMUdjbUpGVWxWV00wSk1XbFpvYTFSR1RsWlVhMHBoVFVkNFJWVldaR3RUYkVWM1VtNVdWVlpWTlVOVVZsVXhVa1pTV0ZwRmNHeFdWRVo0VlRGV1QxUnRSbkppUlZKVlZqTkNURnBXYUd0VVJrNVdWR3RLWVUxSGVFVlZWbVJyVTJ4RmQxSnVWbFZXVlRWRFZGWlZNVlpHVWxoYVJYQnNWbFJHZUZVeFZrOVViVVp5WWtWU1ZWWXpRa3hhVm1oclZFWk9WbFJyU21GTlIzaEZWVlprYTFOc1JYZFNibFpWVmxVMVExbHFRVEZXVmtaWVkwVjRWazFGV25oVk1XaHpWR3h2ZDJKRVZsVldNbEpMV2xaVmVHUldVa1pTYmxwaFRVZDRSVlZXWkd0VGJFVjNVbTAxVkZaVk5YRmFSRUp6VWtad05sSnJOV3hXVkVZelZURldUMVJ0Um5KaVJGWlNWak5DUzFwV1ZrZGpWazVaWWtkd2FrMUZOWGRWVm1SclUyeEZkMUp0TlZSV1ZUVkRWMnBDZDA1c1JsaGFSWGhUVW14V00xVXhhSE5qYkc5M1lrUldWVll6UWt0VlZFRjRZMVpPVmxSck5XaGhNMEV4V2tSQ01GTnNSWGRTYlRWVVZsVTFRMWRxUW5OU1JrWllUbFUxVWsxRldqSldSM2hUVm0xR2NtUkdVbEpXTTBKTFdsWlZlR0pzVGxsaVJUVmhUVWQzTVZaR1l6RlVWa1pZVDFjMVZGWlZOVU5YYWtKelVrWkdXRnBGY0ZKTmF6VTFWa1JHVTFGck1WWk5WVkpWVmpOQ1MxcFdWWGhqVms1WllrVTFhR0V6UVRGYVJFSXdVMnhGZDFKdE5WUldWVFZEVjJwQ2MxSkdSbGhPVlhoc1lsaFJlbFpIZUZOVWJVWnlZa1JXVlZZelFrdGFWbFY0WTFaT1dXSkhjR3BOUlRWM1ZWWmthMU5zUlhkU2JUVlVWbFUxUTFkcVFuZE9WMDQyVm1zMVUxSnNWak5WTVdoelZHMUdjbUpFVmxWV00wSkxXbFpWZUdSV1VrWlNibHBoVFVkNFJWVldaR3RUYkVWM1VtMDFWRlpWTlhGWk1uTTFWbFpHVlZKck9WWk5SRVo0VlRGb2MxUnRSbkppUkZaVlZqTkNURnBXYUd0VVJrNVdWR3RLWVUxSGVFVlZWbVJyVTJ4RmQxSnVWbFJOTTBKNVdrUkNjMUpXV2xsYVJYQnNWbFZhZUZVeGFITlViRzkzWWtSV1ZWWXlVa3RhVmxWNFpGWlNSbEp1V21GTlIzaEZWVlprYTFOc1JYZFNiVFZVVmxVMWNWa3ljelZXVmtaWVdrVTVWMUpVUm5oVk1WWlBWRzFHY21KRVZsSldNMEpMV2xaV1IyTldUbGxpUjNCcVRVVTFkMVZXWkd0VGJFVjNVbTAxVkZaVk5VTlhha0ozVGxkT05sWnJOVkpOUlZZMFZrZDBUMVJzYjNkaVJGWlZWak5DUzFWVVFYaGpWazVXVkdzMWFHRXpRVEZhUkVJd1UyeEZkMUp0TlZSV1ZUVkRWMnBDYzFKR1JsaE9WWGhzWWxoUmVsVXhWbE5XYXpGV1lrUldVbFl6UWt0YVZsVjRZbXhPV1dKRk5XRk5SM2N4Vmtaak1WUldSbGhQVnpWVVZsVTFRMWRxUW5OU1JrWllXa1Z3VWsxck5UVldSRVpUVVd4dmQyUkZWbGRYUjFKTFdsWmtNR0pzVGxsaVJUVm9ZVEo0UlZaR1pIZFRiRVYzVFZoR1ZHSnRkM3BWZWtKelVrWkdXRnBGY0ZKTlJWcDFWVEZXVDFGdFNuSmtSRnBvVFRKU1MxVlVTbXBsUmxKWllrVTFhbEpYZUVWV1JtUjNVMjFXVmxKdVJsUlhSM2hEV1ZkMGMwNVdhM3BVYTFKb1ZsVmFkVlV4Vms5UmJHOTNZa1ZTVWxZeVVreGFWbWhPVFZaU1ZsUnJTbWxOUkZaV1ZsWmtkMVJHVlhkU2JrWlVWMGQ0VDFkcVFuTk9WbEpZV2tWd2JGWlVSakZXUlZaSFpHeHZkMkpGVWxKV01sSkxWVlJDUjJKc1RsWlViWEJxWVhwc1ZsVldaR3RVUmtwSFZsaG9WRmRIZUhsWGFrSnpUbFpTV0dORmNGSk5SRVo0VlRGV1QxUnRSbkpqUkU1cFRXMVNTMVZVUWtkaWJFMTRWVzV3VkUxc2NGTlpha3B6VlVVd2QwMUVTbFZoTVVwWFZHMTBjMkpzUm5WYVIyaFVVbFZ3UjFkWGNFdFVNREZZVTJ4b1YySnNXbkpWYm5CelRsWmtSbGRyZEdsU2JrSXdXbFZrTkZkck1IaFRibVJhWVd0cmVGZFVSbGRUUjBaSldrWnNVMVp1UWpOWFYzUnJWbXhHV0ZOdVVsTmliRXBvVmpCVk1VMHhaRmRhUlRscFVqQTBNVlV4VW10WGJGcElUMVJTVlUxcVZYZGFWM00xWTFaT1dXRkdRbWhXV0VKeFZsY3dlRkl5VG5OalJteFVZbFUxVjFVd1ZuZE5iSEJJVFZoT2FFMVlRbHBWTWpGUFlURk9SbU5ITVZkaE1YQkxXVlpWTkdRd09VVlhhelZzWVRCVmVWVXhZekZSTWtsNVZHdGFWbUpzY0dGVVZFWmhUVVprYzFsNlJrNVNNR3cyVlRJeFQxWnRTbGRYYmxKYVlUSlNXRmxYTVZOVFIwcEpWMjFzYVZOSGFFbFhWRVp2VkRKS1NGTnVRbFJXUm5CUFdWYzFRazB4YTNwalNGcHNZWHBWTWxscVNuTlJiRTVHVTI1YVdrMUdXbFJhUjNoeVpXeGFkVlZ0UmxkbGJGWXpWMWR3VDFNeGEzaFdibEpYWWxSR2NGVnFSbUZqVm5CR1draE9hMkpWY0hwYVZWWnJZV3hrUms1WVRscGlWMUpFV1d4a1QxZFdVblJsUjJ4b1ZsZHplbGRVVG5ka2JWWldUVlpXYVUxdGVGcFZiRnAzWWpGc1ZWTnNaR3hXYldoSVZWYzFjMkZWTUhoalNHUllZVEpTV0ZwV1dtOVRWbFoxWWtac1RsWnJjRlZWTVdSM1RVZFdjazlZUmxWV1JYQlJXVlpXYzFGc2EzZGFSemxyVFZWd1NWUXhaSGRoTVZvMlVtNU9XbUpVVmxSYVJ6RlBZekpXUjFSdFJsZE5XRUkyVmpKNGExUXdNVWhTYkdoUVYwWmFXbFZzV25kT1JtdzJVMnhrYTFaVldrbFViR1J2WVZaWmVGWnVRbFZsYXpWUFZHMXpNVlpYU1hsaVIzUlVVbGhDZEZadGRHRlRiVVpXVDBod1RsWkhlSEZhVnpBMFpERlNXV05JV21oV1ZWcEtWVmN3TldGc1NsZFRha3BZVmtVMVdGcEZXbmRYUlRWVlVXMXNUazFJUW5GV2JHTjRWakpLV0ZOcmFGZGlXRUp5VldwS05FMXNiSFJsUkZKV1ZqQmFTbFZYTVU5Vk1rcFlaVWh3V0dKRldrUlpNR1JMWkVaU2RWUnRkRmROVlhCNlYxUk9jMU5yTkhoaVJsWnBUVEpTVVZsdE5WSk9WbXQ2WTBoYVRsSlVWa1paYWtwelVXeE9SbE51V2xwTlJscFVXa2Q0Y21Wc1duVlZiVVpYWld4V00xZFhjRTlUTVd0NFZtNVNWMkpVUm5CVmFrWmhZMVp3UmxwSVRtdGlWWEI2V2xWYVIyRkdUa1pUYlhCV1lsUkdlbGw2Um5kVmJFWjBUVmQwVjJWc1duaFhhMVpyWXpKU2RGTnVWbFZXTW5oUlZGZDBWazFzVWxaVmJtUlBUV3h3V2xaR1VtRlVNVXBIVWxSS1ZGWXlVa1JhUkVwSFUxWkdjbFp0YkU1aGVsSTBWMWQ0YTFZeVVsaFZhMmhRVjBkNFdsVnRkSGRqTVdSMFRWUlNhVkp0ZERaV1Z6VkRZVlV4Y1ZadGNGZFdWMUoyV2tSR2IxSnNaSFZSYld4VFRWWmFRMVl4VWtwT1YxSllWRmh3Vm1KWGFIQlpiWGhMVG14T1dHTkVRbWhTVkd4NFZWWlNZV0pGTVRaU2FscFZUVzVDVTFwV1ZUVmpSazVXVW0xd1UwMXRaM3BXVjNScVRsZEdkRlZzYUU1V00yaHdXVzE0UzAxc2EzbGxSRkpXVFZoQ1dWWXlOVTlaVmxsM1RraGtXbFp0VFRGYVJscHZVakZHZEU5WGNGTmliV2hKVjFaYWEwNUhTa1pTYTJoVlltczFZVll3VlRGT2JHUnpZVVUxYUZaVWFEVlZiRkpoVkd4YVNWRlVUbHBOTTBJeVdsZHplRTV0U1hsaVJteFRWbTVDZGxkV1VrdFdNbFpYWVVWa1VtSnRlSEJVVkVaM1pERmtjbHBHWkd4V2JXaEtWbGMxYzFkVk1WZFRiRkpZVWxad1JGbHFTa3BsVlRWWVpVWldhV0pHYjNkV01XTjRWakpXVm1KSVJtdFNhMHBSV1ZkemQyVkdVWGxpUlhSclRXdGFTbFZYZEZkaFZURnlUa2hvV21KSFVsaGFSbVJUVTBVNVdXSkdiRk5oTTBKNlZqSXdlRTVIU2tkaE0zQldZbXRLY0ZSWGNGZGhiRnBXV2tjNWEwMVhhRWRXUnpWUFYyeGtSazVVV2xoVFIzaExWRzF6ZUZaV1NsVlhiWGhPVFVSQmVWWkhkRk5UYXpWeVlrYzFVbUp0VW05Vk1GWkxVbXhzY1ZOck9VNVdNSEJaVm0wMVYyRXhTalppUkZaWVVsWndURmxyV25ka1IxWklaVVp3VGsxVmNETlhWM0JLVFZacmVGWnJhR2hUUjFKYVZXeFZNV1ZzWkZkaFJUbHNZa2RuZWxWWE1IaGhiR1JHVGxoT1dtSlhlRXRVYWtaVFRtMUplbU5GTlZOU2VteDNWMVJDYTJJeVVYaFRhMmhRVmpOQ2NsWnVjRWRqTVd4MFRsWk9hMkpWTlhwYVZWcFBXVlpaZUdOSWNGaGlSMUpRVkZWa1IxZEZPVmxXYkd4VFZtNUJNRmRZY0V0V01sSldZa2hHYVUweWVGRlpiVFZUVG14UmVXTkZOVTVOUkd4M1ZURldSMkZzU1hsaFJFNVdZVEpOTVZsWE1WTlhSVEZZWlVkc2FXSkZiM2xYVkVvMFRrWlZlR05HYUZoaWF6Vm9WbXBCTUdReGJGZFplbFpyVm0xb1IxWXlOVzloYXpGelYycEdVbFpYVW1oYVZXUk9aVlphZFZacmNHaGliRWt5VmtSS2QxUnRWbkpQV0VKVVlsVTFWRmxzVm1GbFZtUnpZVVYwV2sxV1drcFZNalZoWVRKS1dHVklTbGhpUjJoTVYxUktVMU5XVG5SWGJHUlRZVE5DY1Zac1ZtdGlNbEowVTI1U1YyRjZiSEpXYm5CSFkwWmtjMkZGY0doV1ZHZzJWa1pTWVZSdFZuTmhla3BVVmpKU1JGcEVTa2RUVmtaeVZtMXNUbUY2VWpSWFYzaHJWakpTV0ZWcmFGQlhSM2hhVlcxMGQyTXhaSFJOVkZKcFVtMTBObFpYTlVOaFZURnhWbTF3Vm1KVVZraGFWM2gzVjBVMVJsSnRiR2xXVm05M1ZqSjRUMU5yTkhsVWFscHBUVEpvVDFacll6VmpSbHBXV2tjNWEySlZjREJXYlhNMVlURmFObEp1UWxoaVIyaExXVlpWTkdWck1WbGpSa0pvWWtWV05GWkVTbk5UYkVaWVZHdG9hRk5IVWxSVmJuQnpZMVp3UjFremFHbFNNSEF4VmxjMVlXRnRTa2xoUmxKWVlrZFNhRmw2Um5kWFJsSnhVVzFvVjJWdGQzaFdNRlpoVVRKSmVWUnJaR3hTVmtwd1ZXcENZVTVzYkRaU1ZGSlNWbTVDU1ZReFpIZFZiVXBaWVVSS1dGWkZjRFpaVmxVMFpEQTFSVnBIY0d4aVZHZ3pWa2Q0VTJSdFJsWlNhMnhTWWxSc2NWVnNXa3ROYkdSVlZHeGthMUp1UWxsVWJGSkRZVlV3ZDJOSGNGZFdla1pZV1d4a1MxTkdXblJqUjNSVFRXNW5lVmRYTVRST1JsWllVbXRzVW1KVk5WTlVWelZ2WWpGc05sUnJPV0ZoTUZwSlZXMHhjMkZyTUhoVGFsWllWbTFTVUZSVlZuTmpWMUpJWWtaQ2FHRXdWWHBYVkU1M1pHc3hSazFZUm1sTmJYaERWVEJXUzJSc2EzZFdiRTVyWWtkME5sWnROVk5aVmxvMlZsaGtXbUZyTlV4WFZFWlhaRVphZEUxWGJGTk5WbkI0VjJ0V2EyTXlVblJUYms1c1VtdGFiMVV3Vmt0aGJGWlZVMnBTYUZJd01UWldSekZoVVd4SmVHTklaRnBpVkVaSVdYcENjMk5YVWtoaVJrSm9ZVEJWZWxkVVRuZGthekZHVFZSYWFVMXRlRU5WTUZaTFpHeHJkMVpzVG10aVIzUTJWbTAxVTFsV1dqWldXR1JhWVdzMVRGZFVSbGRrUmxwMFRWZHNVMDFXY0hoWGExWnJZekpTZEZOdVRteFNhMXB2VlRCV1MyRnNWbFZUYWxKb1VqQXhObFpITVdGUmJFNUdVMjA1V2sxcVJsaGFSbVJUVWtaT1ZWcEdWbXhpVkdzeVZrWldVMlJ0UmxoVWEyaG9VMGRTVkZWdWNITmpWbkJIV1ROb2FWSXdjREZXVnpWaFlXMUtTV0ZHVWxoaVIxSm9XWHBHZDFkR1VuRlJiV2hYWlcxM2VGWXdWbGRaVjFaSVZGaHNWMkpzV2t0WlZ6QTFUbFpSZVU1VVFteGhlbXg0VmtaU1QxVkhSbFppUlVwYVRVZFNkbHBFUmt0VFJUbFlZMGQwVjJWclducFhWekF4VlRKU2RGUnVUbXhTYXpWb1ZtcEdkMlZzWkhOYVJUbE9VakJhV1ZReGFGZFhWa3BYWTBSU1dtVnJjRmhhUmxaSFUwWmtkV0ZIY0U1aVJtOTRWVEZrZDAxSFZuSlBXRVpVVmtVMVVWbFdWbmRoYkZaMFRWVmthbUpJUWxwVk1qRlBWbXhPUm1ORVNtRlNla1o2V1ZSR2QxZFdUblJVYkZwVFRXMW5lVmRYTUhoV01WRjVWV3hvVGxZeWVHaFdNRlp6WTBaU05sUnJOVTloZWtVeVZqRlNZVk5zYjNkVGFrNWFWbGRvUkZWc1pFcGxWbEp4VW0xc1YwMVdiM2hYYTFacVRsZFdWMkZGWkZSaVdHaG9XV3hvYjJNeFpGVlViRTVxVWpCc05WUnNaRTlWTWtweVYycGFXR0pIVFhkVlZtUkxaRVpLZFZWdFJsWk5SM042VjFST2QyUnRWa1pOVmxacFRXMTRWMVZxU205TmJHeDBUVlprVlUxc1NsbFVWbVJ6V1Zaa1JtSklRbFZsYXpFMFdsZHpOV05XVmxWVWJFSm9WbGQ0UTFkVVFtdGlNbEY0VTJ0b1VGWXpRbkpXYm5CSFl6RnNkRTVXVG10aVZUVjZXbFZhVDFsV1dYaGpTSEJZWWtkU1VGUlZaRWRYUlRsWlZteHNVMkV3Y0RKWFZFSmhUa1pLU0ZOcmFGTmlia0p4VkZaU2IxRnNiRmRaTTJoclRXdHdTVlp0TlZOWlZsbzJWbGhrV2sweWVFdFVha1p6VmxkSmVscEdRbWxpYkVVeFYxUk9kMlJyTVVaT1dFWnBUVzE0UTFVd1ZrdGtiR3QzVm14T2EySkhkRFpXYlRWVFdWWmFObFpZWkZwaGF6Vk1WMVJHVjJSR1duUk5WMnhUVFZad2VGZHJWbXRqTWxKMFUyNU9iRkpyV205Vk1GWkxZV3hXVlZOcVVtaFNNREUyVmtjeFlWRnNTWGRPVkVwYVlsUldVRlJWV25OWFJUVlZVVzF3YkZaWGMzcFdNVnBUWkcxUmQwOVlWbXRTUjNoeFdsY3dOR1F4VW5WalNGcG9WbFZhU2xWWE1EVmhiRXBYVTJwS1dGWkZOVmhhUlZwM1YwVTFWVkZ0YkU1TlNFSnhWbXhqZUZZeVNsaFRhMmhYWWxoQ2NsVnFTalJOYkd4MFpVUlNWbFl3V2twVlZ6RlBWV3N4ZFdGSE9WcGxhelZRVjIxMFIxTldSblZpUjJ4T1RVVndlbGRVU1RGVk1rNUhZMFpzVlZZeWVGRlVWM1JXVFd4U1YxVnVaRTlOYXpReVdXNXdRMVJ0Vm5SUFdFSllVbFphYUZsVlpFWmxWbHAxWWtac1UyRXdiekZYVjNCUFdWZE9SMk5GYUZkaWJYaGFWVEJhUzA1V1pFVlNiRTVXVFZkb1NGVlhNRFZoVlRGeFZtNU9WMUo2VmxoYVJWcHpaRVphZFdKR1FtaGlWR3g1VmpJd2QwNVhWbGhUYkdoVFlXdEtjVnBXVm5KTk1WcEpZMGhhYkdGNlZUSlpha3B6WVd4SmVXRkVUbFpoTWsweFdWY3hVMWRGTVZobFIyeHBZa1Z2ZVZkVVNqUk9SbFY0WTBab1dHSnJOV2hXYWtFd1pERnNWMWw2Vm10V2JXaElWVmN3TldGc1NuVmhSa3BhVFdwQk1WcEVSbmRYVms1eFVXMTRWazFIYzNsV1J6VjNaREEwZVZScVdtbGxhMHBRVld0ak5XTkdSbFpoUlU1cFRXczFSMVpYTldGWGF6QjRWMnBDV0dKSFRYaFVWV1JLWld4T2RGUnNXbWxXYkhBd1YxZDBhMVl5Um5SVmEyaHBVMFp3Y0ZscmFHOVZiR3hXWVVWT1drMVdXa3BWTWpWaFlXeEplRmRxVm1GU1YyaDVWVlphZDJSV1NuVmpSMFpYWld4S2QxWkljRUpPUlRWeVRWUmFVbFpHY0V0WmJYUkxaR3hyZDFac1RtdGlSM1EyVm0wMVUxbFdXalpXV0dSYVlXczFURmRVUmxka1JscDBUVmRzVTAxV2NIaFhhMVpyWXpKU2RGTnVUbXhTVjFKeFZqQlZNV014YkhSaVJYQlBZWHBHZUZrd1VtdGhiVlowVDFSYVZXSnVRakpaVmxaSFUxWkdkRTlYY0ZOV2EyOTVWakZTVDFZeVVrZGpSbWhQVmtWS2NGUlVRbmRoYkZwWVRWWmthVll3Y0VsV2JURjNZVEZKZVdWRVNscGlXR2N3VldwS1QxZFdVblJsUjJ4aFRVVndNRmRVUm05VU1rcElVMjVDVkZaSFVuRmFWekEwWkRGU1dXTklXbWhXYldoSFZqSXhiMkZGTVhOWGFsWllVbFp3UkZwV1pFcGxiR1IxVVcxR1UwMVdiekZXTUZadlZUSldWMW96YUZaaVJUVmFWVzEwUzJSc2JIRlRWRVpwVW14S01WWnROVk5YYlVwWFYycFdWVTF1UWpKWlZFWjNaRVU1V1dKSGJGZE5SbXd6VjFST2MxTnJOSGxVYWxwcFRUTkNVRmxYTURWalJrWldZVVZPYVUxck5VZFdWelZoVjJzd2VGZHFRbGhpUjAxNFZGVmtTbVZzVG5SVWJGcHBWbXh3TUZkWGRHdFdNa1owVld0b2FWTkdjSEJaYTJodlUwWnJlR0ZGT1dsU01IQjFWVmMxVjFkc1dqWlNiazVVVmpOQmQxcFhjelZqVm13MlYydHdhVlp1UVhsWFZFbDNaVWRHU0ZWcmJGVldNbmhSVkZod1IwNXNVWGxqUmtwT1RVUnNkMVV4VmtkaGJFbDVZVVJPVm1FeVRURlpWekZUVjBVeFdHVkhiR2xpUlc5NVYxUktORTVHVlhoalJtaFlZbXMxYUZacVFUQmtNV3hYV1hwV2ExWnRhRWhWVnpBMVlXeEtkV0ZHU2xwTmFrRXhXa1JHZDFkV1RuRlJiWGhXVmxWd2VWZFhjRXRVTVVWNVUydG9VRll6UW05YVZsWnlUVEZhU0dORVFteGhlbXg0VmxaU1ExVkhSbFppUlVwYVRVZFNkbHBFUmt0VFJUbFlZMGQwVjJWclducFhWekF4VlRKU2RGUnVUbXhTYXpWb1ZtcEdkMlZzWkhOYVJUbE9VakJhV1ZReGFGZFhWa3B5VTI1YVdrMUdiekJXVm1SUFpFVTVXVnBIUmxoU1Z6a3pWMnhhUjFFd01VaFdiR3hTWWxob2NWcFdWbkpOTVdSWFZXNWFhMDFFYkRGYVJWSnpZVzFXZEU5SVpGVmlXRUl5V1ZaV1IxTldSblJQVjNCVFZtdHZlVll4VWs5V01sSkhZMFpvVDFaRlNuQlVWRUozWVd4YVdFMVdaR2xXTUhCSlZtMHhkMkV4U1hsbFJFcGFZbGhuTUZaV1pFZFRWa1owVkd4YVZGSllRWGxYVkVKclZqSldXRlZyYkdoTlJWcG9WV3BHWVdSR1pGZGhSbVJxVFd4S1JWVXhVbXRoYlZaMFQwaGtWVll6UWtkVWJYUnpaRVpLZFdKSGNHbFdWbXQ0VlhwQ1UxRnJNVlpOVlZKVlZqTkNTMXBXVlhoalZrNVpZa1UxYUdFemFFVlZWbWhyVkRGYVJrMVlSbFJYUjNoUFdWZDBjMDVXVWxoalJYQnNWMGRTZFZaR1ZsTldhekZHWWtSV1ZWWXpRa3RhVmxWNFkxWk9XV0pGTldwTlIzaEdWVlpTUjFReFZYZE5XRVpVVjBkNFQxbFhkSE5PVmxKWVkwVXhVazFGV1hwVk1WWlRWbTFSZDJKRVZsSldNMEpMV2xaVmVHSnNUbGxpUlRWaFRVZDNNVlpHYUU5VGJFcEdVbTAxVldKR1NrOVpWM1J6VWtaU1dHTkZjR3hXVlZwNFZURm9jMUZ0Um5KaVJGWnJUVzFTVDFWVVFrWmxSbEp5VkdzMVlVMUhkekZXUm1SM1UyeEZkMDFZUmxSV1ZUVlBXVmQwTkZKR1JsbGFSWEJUVW14V05GVXhhSE5SYlVaeVlrUldWVll5VWt0YVZsVjRZbXhPV1dKRk5XcE5SM2hHVlZaa2ExUkdTa2RXYWs1VVYwZDRlVmRxUW5OT1ZsSllZMFZ3VWsxRVJuaFZNVlpQVkcxR2NtVkZVbEpYUjFKTFZWUkthbVZHVWxsaVJUVnFVbGQ0UlZaR1pIZFRiVlpXVW01R1ZGZEhlRU5aVjNSelRsZFJlVnBGTlZKTlJWb3lWa2Q0VTFWdFJuSmtSbEpTVmpOQ1MxcFdWWGhpYkU1WllrVTFZVTFIZHpGV1JtaFBVMnhLUmxKdE5WUk5Sa3BYVkZaV2MwNVhSWGxhUlhCc1ZsUkdlRlV4Vms5VWJVWnlZa1ZTVlZZelFrNVZWRUpIWlZaUmVGVnJTazVXVkVaRlZrWmtkMU50VmxaTldFWlVWMGQ0VDFsWGREUlNSa1paVTJ4Q1YxSlZWalJXUm1oelZHMUdjbUpFVmxWV00wSkxXbFpWZUdOV1VrWlVhMHBxWVhwc1ZsVldVa2RVTVVWM1RWaEdWRmRIZUU5WlYzUnpUbFpTV0dORk1WSk5SVm8xVmtSR1UxRnJNVlpPVmxKVlZqTkNTMXBXVlhoalZrNVpZa1UxYUdFemFFVlZWbWhMVlVaYVJsSnROVlZpUmtwRFdWZDBjMUpHVWxoalJYQnNWbFZhZUZVeGFITlJiVVp5WWtSV2EwMXRVazFhVnpFd1RURk9WbFZzV214aE1uY3hWVlprZDFOdFZsWk5WelZVVjBkNFQxZHFRbk5PVmxKWlZHdHdVazB3TUhoV1JsWlBVV3N4Vms1VlVsVldNbEpMV2xaVmVHTldUbFpVYXpWb1lUSjRSVlpHWkhkVVZrVjNVbTVzVlUxV1NrTlhha0V4VmxaYVdHTkZjRkpOUkVaNFZURm9jMUZ0Um5KaVJGWlNWak5DUzFwV2FHdGliRTE2WTBoS2EwMUhlRVZYYm5CSFZHeEZkMDFZWkZSV1ZUVlBXVmQwYzA1V1JsaGpSWEJzVmxWYWVGVXhhSE5OTVc5M1pFUmFhRTB5VWt0VlZFcHFaVVpTV1dKRk5XcFNWM2hGVmtaa2QxTnRWbFpTYmtaVVYwZDRRMWxYZEhOT1YxRjVXa1Y0YkdKWVVYcFZNVlpQWW1zeFZrNVZVbFZYUlVwTFZWUkJlR05XVGxsaVJVcG9ZVEozTVZWV1pIZFRiVlpaV2tjMVZFMHpRbmxhUkVKelVrWndObEpyT1ZaTlJFWXpWVEZXVDFSdFJuSmlSRlpTVmpOQ1MxcFdWa2RqVms1WllraEthRlpVYURaV1JsSmhWREZLUjFaVVNsUldNbEpFV2tSS1IxTldSbkpXYld4T1lYcFNORmRYZUd0V01sSllWV3RvVUZkSGVGcFZiWFIzWXpGa2RFMVVVbWxTYlhRMlZsYzFRMkZWTVhGV2JYQlhWbGRTZGxwRVJtOVNNVVoxWWtkc1RrMUZjSHBYVkVreFZUQTFWbEpyYkZWaGEwcGhWakJhUzJReFpGbGlSWEJQVFZkNGVGbHFUbTlWUlRCM1RVUktWV0V4U25sVWJYUnpZbXhHZFZwSGFGUlNWWEJIVjFkd1MxUXdNVmhUYkdoWFlteGFjbFZ1Y0hOT1ZtUkdWMnQwYVZKdVFqQmFWV1EwVjJzd2VGTnVaRnBoYTJ0NFYxUkdWMU5IUmtsYVJteFRZVEJ2TVZkWGNFOVJNa3BJVkc1V1ZtRnNXa05WTUZwM1pERnNObE51VG1oV01GcFpXbFZvUTJFeFRraGtTRUpWWld0Rk1GUnRjM2hPYlVZMlYydHdhV0V3Y0RKWFZFSlhWVEpTYzJFemNGZGliRXBvVm01d1ZtUXhiSEZVYTNSYVRWWmFNRlp0TUhoaFZrbDRWMjVHWVZKWFVucGFSekZMWXpKV1IxSnRhRlJTVlhCeFZtMHdlR015Vm5SU2JHaFVZbXRLY0ZWcVNqTmtNWEJYVkd0d1QyRjZSbFpaTUZKcllXMVdkRTlJYUZWV2JFb3lXVlpXUjFOV1JuUlBWM0JUVm10dmVWWXhVazlXTWxKSFkwWm9UMVpGU25CVVZFSjNZV3hhV0UxV1pHbFdNSEJKVm0weGQyRXhTWGxsUkVwYVlsaG5NRlpXWkVkVFZrWjBWR3hrYVZZelp6SlhWbHByVXpKT1NGTnJhR2xTUlVwelZsWldTbVZXYkZkaFJUbHFVbTE0TUZscmFFOWhSbVJIVTFSR1ZGWXpRWGRhVjNNMVkxZEdObGRyY0dsaE1HOHhWMWR3VDFVeVNrZGhNM0JXWWxob2FGVlVRbkpOTVhCellVVTFUMkY2VmtaWFdIQmhVMnh2ZDFOcVRscFdWMmhFVld4a1NtVldVbkZTYld4WFRWWnZlRmRyVm1wT1YxWlhZVVZrVkdKWWFHaFpiR2h2WXpGa1ZWUnNUbXBTTUd3MVZHeGtUMVpzU1hsaFJFNVlVbFp3UkZwV1pFcGxiRVowWlVkd2FXSkZhM2hWVmxaclRrZFNjMkV6YkZOaGEwcHZWbTV3YzAxV1RsaGpSRUpXVWxSc2VGWkdhSGRWUjBaV1kwUk9XbFpYYUVSVmJHUktaVlpTY1ZKdGJGZE5WbTk0VjJ0V2FrNVhWbGRoUldSVVlsaG9hRmxzYUc5ak1XUlZWR3hPYWxJd2JEVlViR1JQVmxaS05tSklSbGhXYldoVVdUQmtTbVZWTlVoaVJrSm9ZVEp6ZVZkc1VrOVVhelZ5VGxWV1YxWkdjRXRYYWtKTFRURnNWbUZGVGxOV01HdzFWa2R3UjJGV1dYaFhha1poVWxkTk1WcFdXbTlTTVU1MFpVZEdhVmRIYUhwV01WSlBWVEpPU0ZOWWJFOVdNRFZXVlc1d2MyTldaRmRoUms1cVVqQnNOVlJyVmtkaFZrbDVaVVJHV0dKR1ZYaFVWbVJMVjBaT2RHVkhjR2hXVjNONlYxWmFVMlJyTUhkUFNIQlZWa1p3VUZWclpFNU5iRTVZV2tWT2EwMXJXa3BWVjNSWFlWVXhjazVJYUZwaVIxSllXa1prVTFORk9WbGlSbXhUWVROQ2VsWXlNSGhPUjBwSFlUTndWbUpyU25CVVYzQlhZV3hhUmxsNlZtaGlSM2hhVmxjMVEyRlZNWEZWYTBwWVZrVnJNVmw2U2xOWFJURlpWbXhXYVdKR2IzZFdNV040VmpKV1ZtSklSbXRUUlVwUldWZDBSazB4Y0hOYU0yaFFWakEwTWxsdWNFTlVNVXBJVDFoQ1VsWlhhRVJaYWtwUFVteFdkVmRzY0U1TlZtOTNWako0YWsxVk1VaFRXSEJVWWxVMVYxbHNXbUZrUm14eVdrWmthR0pXU2tsWmEyaGhZVmRLU1dGR1NscFdWMmhFVjFSR1JtVlhWa2hoUjNCT1RVUldkRlZXVm1wbFIwcElWV3RvYUZOR2NHaFZNRlY0WTBaU05sTnJXazloZWtaR1dUQlNhMkpXWkVaTlJFcFZZVEZLY1ZSdGRITmliRVoxV2tkb1ZGSlZjRWRYVjNCTFZEQXhXRk5zYUZkaWJGcHlWVzV3YzA1V1pFWlhhM1JwVW01Q01GcFZaRFJYYXpCNFUyNWtXbUZyYTNoWFZFWlhVMGRHU1ZwR2JGTldWRlkyVmpGYWIxUXlWbk5oUkU1U1lXdGFjVlJYZUdGamJGcHlZVVYwYUZJd1dscFdWelYzVTIxR2RWVnRPVlZOYmtKRFZHMHhWbVZyTVZsalJrSm9Za1ZXTkZaRVNuTlRiRVpZVkd0b2FGTkhVbFJWYm5CelkxWndSMWt6YUdsU01IQXhWbGMxWVdGdFNrbGhSbEpZWWtkU2FGbDZSbmRYUmxKeFVXMW9WMlZ0ZDNoV01GWmhVVEpKZVZSclpHeFNWa3B3VldwQ1lVNXNiRFpTVkZKU1ZqQndTVlF4WkhkWGJHUkhVMjVrV21GcmEzZFpWbFUwWkRBNVJWZHJOV3hoZWtGNVZURmpNVkV5U1hsVWExcFdZbXh3WVZSVVJtRk5SbVJ6V1hwR1RsSXdiRFpWTWpGUFZtMUtWMWR1VWxwaE1sSllXVmN4VTFOSFNrbFhiV3hwVTBkb1QxZFhjRXRVTWtaSVZXdG9hVk5HY0hCWlZsWnlUV3hTV0dOSVpFOU5helF5V1c1d1ExUXhXa2hQV0VKU1ZsZG9SRmxxU2s5U2JGWjFWMnh3VGsxV2IzZFdNbmhxVFZVeFNGTlljRlJpVlRWWFdXeGFZV1JHYkhKYVJtUm9ZbFpLU1ZscmFHRmhWMHBKWVVVMVdtRnJjRkJaVldSVFUwZEtTVmR0YkdGTlJYQTJWMVphYWsxWFNrZFZibFpYWW14S1lWbHNXbUZPVms1WVkwUkNhbEpVYkhoV2JGSnJZVzFXZEU5SVpGVmlia0l5V1ZaV1IxTldSblJQVjNCVFZtdHZlVll4VWs5V01sSkhZMFpvVDFaRlNuQlVWRUozWVd4YVdFMVdaR2xXTUhCSlZtMHhkMkV4U1hsbFJFcGFZbGhuTUZaR1pFcGxWbEowWVVkMFUwMXVaM2xYVnpGclVUSkdkRk5ZYkd4U1JWcHdWbTV3VjFWR2NFZFpNMmhvVm01Q1dsVXhaSE5WUlRGMFkzcEtWVlpXU1hkVU1XUmhWMVV4V1dOR1FtaGlSVlkwVmtSS2MxTnNSbGhVYTJob1UwZFNWRlZ1Y0hOalZuQkhXVE5vYVZJd2NERldWelZoWVcxS1NXRkdVbGhpUjFKb1dYcEdkMWRHVW5GUmJXaFhaVzEzZUZZd1ZtRlJNa2w1Vkd0a2JGSlhVbTlXYWs1dll6RkdWbHBJVG10V01VcEpWbTAxYzFsWFNsWlhia1pZWWtkb1QxbFdWVFJsVmtwVlYyczFVMU5GUlhwWGJYaHZWR3MxY2s1VlZsTldSbkJMVjJwQ1MwMHhiRlpoUlU1VFZqQnNOVlpIY0VkaFZsbDRWMnBHWVZKWFRURmFWbHB2VWpGT2RHVkhSbWxYUjJoNlZqRlNUMVV5VGtoVFdHeFBWakExVjFWcVNtOU5NV1JHVm0xR2FsSXdjRWxXYkZaSFlURk9SbU5IT1ZwV2JXaFVXbGQwYzJOWFVraGhSa0pvWVRCVmVWZHNVazVsUlRsVVdUTkNURlpJVGt4Uk1tczBZMVZzUmxSdE9XaFdNMmh5VTFWYVUwNVhUa2hXVkZwS1VqSjRNVnBGWkZkaWJIQlpVMWRrVEdGVWFFeFRhMlJUWVVkU1NGSnRTa3ROYXpVMVYyeGtSMDFHY0ZoVmJFSnBZVmRTYTFOVlVYZGFNREZWVmxoc1QyRnRjM3BVVlZKS1RUQTFObU13ZEVwaGJsSTJWREp3VWsxVk9YQlRWVVpxVWpKb00xVnJZelZoYlZKWVRWZDRhV0pzU2pKWk1uZzBWVEZ3V0ZkdVRtRldNRFIzV1Zaak5XUldhRWRSYlRscVVtNW9TRmxXWkRSaVJVWklUbGRvYVZZeFdqWlpNR1JIWVd4d1dWUlhiRkJOYTFVeVZGVlNkMDR5V2xsVVZGcFBVa1V3TWxOWFpFTmtNa1pKVVd0V2FVMXJOSGhaYkdSWFpGZFNTRTlZYkZsU2EzQnpWMjB4TkdKR2EzcFZia0pwVFdwV2FsWlZaRzlrTVdoR1YyNUNhVkl4VmtKWlZtTXhZVzFLU1ZadGRHRlhSVEZ3VkhwS1JrNXJNVVZqUkdSdFYwVXdNbFJyVWxKT2EyeHVVVzVrYUZORlNrWlpha3BQVFZkS1dGWnVWbXRTZW13MVYwVmFTMkpHY0hSbFIzaGFUVEZLZDFscVNURlpNVlpJWVVoa1dWSldjSGRaYTJSV1VWWndkVlp1VmxwTk1VcDNXV3BKTVdWcmJIRmtSMmhRWVd0Rk1scFVUWGhsYXpseFZWUkNVR0ZWYkVKWk1HUnZaREZLU0U5WGNHdFdla1p6V1cwMVUyUnRUbk5sUms1aFZqRndlbGRzWkU5TlIwWllUMWhXV1ZKclNuWlpNRm8wVWpKR1dHVkhlRUpTTURVeVdXMDFUMDFHYkZoT1ZFSnFaVlZyTTFkV1VuWmtNRGwxWkVSc2FtVnRPSGRVVjNCMllWVkdTVkZ0T1dwU1Zrb3lWMVJPVjJSR2NGaE9WRUpwVFRCd2FsWlhNVmRpVjBwSVZtMXdhMUl5ZURKWmJYZzBWVmRHU1ZGdFRsTmlWM2g2VjJ4R1EyRnRTa2hTYm5CcVRXeGFObE5YY0RCaFJUbHhVVlJhYkUxNlJqWlVNbkJTVFZVNWNGTlZSbXBTTW1nelZXdGpOV0Z0VWxoTlYzaHBZbXhLTWxreWVEUlZNWEJZVjI1T1lWWXdOSGRaVm1NMVpGWm9SMUZ0T1dwU2JtaElXVlprTkdKRlJraGlTRlpyVWpGYU5WZHRNVWRoYkhCWlZGZHNVRTFyVlRKVVZWSjNUakphV1ZSVVdrOVNSVlV5VTFka1EyUXlSa2xSYTFacFRXczBlRmxzWkZka1YxSklUMWhzV1ZKcmNITlhiVEUwWWtacmVsVnVRbWxOYWxacVZsVmtiMlF4YUVaWGJrSnBVakZXUWxwRmFFdGhSMFpaVlc1d1NtRnVVbTlVTW5CQ1RtMVZlazFVYTI1TFUyczNRMmR2ZGt0cFFrUmhSMnh6V2tOQ1ZXVllRbXhQYVVKd1ltNVNiRm95Vm5sSlEyOTJRMmxTYTFsWVVtaFhlV1JxWTIxV2FHUkhWbXRVTWpSdVdGTkJPVWxFUlRGTmFsazFUbnBWZDAxRVRUZERhVWszWTNwdk1FNVViMmxCU0VKdlkwVlNkbGt6Vm5SYVZ6VXdZak5LWTFWdFZtMWlSMVpxWkVkc2RtSnNlRkZoU0VKalVtMXNjMXBSUW5WWlZ6RnNZek5DYUZreVZucEphblJvVDJwQk5tVXpNWHBQYWxGNlQybEpRV05IYUhkU1J6bHFaRmN4YkdKdVVuWmpiSGhUV2xkYWMxcFhUakJoVnpsMVdFWkNiMk5HZUVkaFYzaHNRVWRzZFZreWVERmFSMVo2U1dwMGFFOXFRVFpsTXpGNlQycFJNRTlwU1VGalIyaDNVa2M1YW1SWE1XeGlibEoyWTJ4NFUxcFhXbk5hVjA0d1lWYzVkVmhHUW05alJuaEhZVmQ0YkVGSFdqRmliVTR3WVZjNWRXTjVTVGRaVkc5M1QyNTBPV042YnpCT1JHOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUpxWWpJMWVtUkhSblZrU0UxcFR6SkZOazFFY0RkbVdFMDJUa1JKTmtsblFuZGhTRUpGWWpKT01XSlhWblZrUnpsNVdFWktiRnB0ZUd4Wk0xSndZakkxWTFWSGFIZFlSVnB3WWtkVlFWa3llR2hqTTA1c1kzbEpOMWxVYjNkUGJuUTVZM3B2TUU1VWIybEJTRUp2WTBWU2Rsa3pWblJhVnpVd1lqTktZMVZ0Vm0xaVIxWnFaRWRzZG1Kc2VGRmhTRUpqVW0xc2MxcFJRbkJpYmxKc1kyMWFhRmt5Vm5wSmFuUm9UMnBCTm1Vek1YcFBhbEY0VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRWRoVjNoc1FVaFNlVmxYYkRCamVVazNXVlJ2ZDA5dWREbG1VVDA5SnlrcE93b0tMeW9nUTJocGJHUWdWSGx3WlRvZ2FXNTBaV2RsY2lBcUx3b2taR0YwWVZzblkzSmxZWFJsWkU5dUoxMGdQU0F4TlRJMk9UYzVNVEUxT3dvaU8zTTZORFU2SWdCd2FIQkViMk4xYldWdWRHOXlYRkpsWm14bFkzUnBiMjVjVUdod1hFWnBiR1VBYm1GdFpYTndZV05sY3lJN1lUb3dPbnQ5Y3pvME16b2lBSEJvY0VSdlkzVnRaVzUwYjNKY1VtVm1iR1ZqZEdsdmJseFFhSEJjUm1sc1pRQnBibU5zZFdSbGN5STdZVG93T250OWN6bzBORG9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJtZFc1amRHbHZibk1pTzJFNk1EcDdmWE02TkRRNklnQndhSEJFYjJOMWJXVnVkRzl5WEZKbFpteGxZM1JwYjI1Y1VHaHdYRVpwYkdVQVkyOXVjM1JoYm5SeklqdGhPakE2ZTMxek9qUXlPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBR05zWVhOelpYTWlPMkU2TURwN2ZYTTZORFU2SWdCd2FIQkViMk4xYldWdWRHOXlYRkpsWm14bFkzUnBiMjVjVUdod1hFWnBiR1VBYVc1MFpYSm1ZV05sY3lJN1lUb3dPbnQ5Y3pvME1Ub2lBSEJvY0VSdlkzVnRaVzUwYjNKY1VtVm1iR1ZqZEdsdmJseFFhSEJjUm1sc1pRQjBjbUZwZEhNaU8yRTZNRHA3ZlgwPScpKTsKCi8qIENoaWxkIFR5cGU6IGludGVnZXIgKi8KJGRhdGFbJ2NyZWF0ZWRPbiddID0gMTUyNzc1NTA1MDsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319'));

/* Child Type: integer */
$data['createdOn'] = 1527755062;
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}'));

/* Child Type: integer */
$data['createdOn'] = 1527755127;
