<?php 
/* Cachekey: cache/stash_default/documentation\api\php\062d1cdf06f2900e8908414ae262d61d/ */
/* Type: array */
/* Expiration: 2018-05-27T04:42:56+00:00 */



$loaded = true;
$expiration = 1527396176;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979192;
