<?php 
/* Cachekey: cache/stash_default/documentation\api\php\30b7784a095481006d849c33408661b8/ */
/* Type: array */
/* Expiration: 2018-06-05T07:38:27+00:00 */



$loaded = true;
$expiration = 1528184307;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755151;
