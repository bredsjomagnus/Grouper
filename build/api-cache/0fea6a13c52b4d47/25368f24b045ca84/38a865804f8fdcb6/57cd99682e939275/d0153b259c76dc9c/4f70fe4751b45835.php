<?php 
/* Cachekey: cache/stash_default/documentation\api\php\de136dc1a8d661ea3b370d7de5c3f08a/ */
/* Type: array */
/* Expiration: 2018-06-04T21:57:21+00:00 */



$loaded = true;
$expiration = 1528149441;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755158;
