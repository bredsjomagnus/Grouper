<?php 
/* Cachekey: cache/stash_default/documentation\api\php\d723a572a7dd12ad365b5cd9c023f138/ */
/* Type: array */
/* Expiration: 2018-06-05T01:14:24+00:00 */



$loaded = true;
$expiration = 1528161264;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755131;
