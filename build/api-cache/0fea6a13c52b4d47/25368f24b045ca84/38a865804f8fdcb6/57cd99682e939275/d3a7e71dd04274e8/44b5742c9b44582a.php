<?php 
/* Cachekey: cache/stash_default/documentation\api\php\fa4c2fb739aaa924925d4fe6dcc0a96c/ */
/* Type: array */
/* Expiration: 2018-05-27T07:46:01+00:00 */



$loaded = true;
$expiration = 1527407161;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979578;
