<?php 
/* Cachekey: cache/stash_default/documentation\api\php\2e19d26a44b7e2955fc152defbdcc79f/ */
/* Type: array */
/* Expiration: 2018-05-26T21:01:48+00:00 */



$loaded = true;
$expiration = 1527368508;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979579;
