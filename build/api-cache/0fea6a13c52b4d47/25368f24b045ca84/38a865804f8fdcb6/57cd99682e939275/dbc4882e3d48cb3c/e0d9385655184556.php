<?php 
/* Cachekey: cache/stash_default/documentation\api\php\e77e792d0e87bd67fad879295789000c/ */
/* Type: array */
/* Expiration: 2018-05-26T19:08:46+00:00 */



$loaded = true;
$expiration = 1527361726;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"fe4f372c73cc7b66e0805e583c0d0012";s:39:" phpDocumentor\Reflection\Php\File name";s:20:"45d37b038e1e2848.php";s:39:" phpDocumentor\Reflection\Php\File path";s:121:"build/api-cache/0fea6a13c52b4d47/25368f24b045ca84/38a865804f8fdcb6/57cd99682e939275/3ccc053e1e9b3b50/45d37b038e1e2848.php";s:41:" phpDocumentor\Reflection\Php\File source";s:45208:"<?php 
/* Cachekey: cache/stash_default/documentation\api\php\23805454e905f945b6020cada6a28d6c/ */
/* Type: array */
/* Expiration: 2018-05-26T15:58:23+00:00 */



$loaded = true;
$expiration = 1527350303;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode('TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImQ0ZWRjNGY1YzY3NTU2YzQ3YzlkZWY0ZmM1ZmM5YzE4IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6ImUyNDVlNGEyMjdlM2MxMDYucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTIxOiJidWlsZC9hcGktY2FjaGUvMGZlYTZhMTNjNTJiNGQ0Ny8yNTM2OGYyNGIwNDVjYTg0LzM4YTg2NTgwNGY4ZmRjYjYvNTdjZDk5NjgyZTkzOTI3NS8xOTJhMzZiMWE5YzYwYTcwL2UyNDVlNGEyMjdlM2MxMDYucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozMjczNjoiPD9waHAgCi8qIENhY2hla2V5OiBjYWNoZS9zdGFzaF9kZWZhdWx0L2RvY3VtZW50YXRpb25cYXBpXHBocFw1YzAwY2ExZTFlMjU5NDYzMDE0MDI5Njg3MjUwNGY3Yi8gKi8KLyogVHlwZTogYXJyYXkgKi8KLyogRXhwaXJhdGlvbjogMjAxOC0wNS0yN1QwNjo0MjozMSswMDowMCAqLwoKCgokbG9hZGVkID0gdHJ1ZTsKJGV4cGlyYXRpb24gPSAxNTI3NDAzMzUxOwoKJGRhdGEgPSBhcnJheSgpOwoKLyogQ2hpbGQgVHlwZTogb2JqZWN0ICovCiRkYXRhWydyZXR1cm4nXSA9IHVuc2VyaWFsaXplKGJhc2U2NF9kZWNvZGUoJ1R6b3pNem9pY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxJam94TWpwN2N6bzBNem9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJrYjJOQ2JHOWpheUk3VGp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBR2hoYzJnaU8zTTZNekk2SWpJeE5tTXdZMkV4WWpKbE5qbG1PVGs0TTJZelpUSXdORFUwTlRsalpHUmlJanR6T2pNNU9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHNWhiV1VpTzNNNk1qQTZJalZpT1RabVl6Um1OREU1TVRSbE5XUXVjR2h3SWp0ek9qTTVPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBSEJoZEdnaU8zTTZNVEl4T2lKaWRXbHNaQzloY0drdFkyRmphR1V2TUdabFlUWmhNVE5qTlRKaU5HUTBOeTh5TlRNMk9HWXlOR0l3TkRWallUZzBMek00WVRnMk5UZ3dOR1k0Wm1SallqWXZOVGRqWkRrNU5qZ3laVGt6T1RJM05TOWtNRGt6WW1VM05qZ3hNVFZtWkdReUx6VmlPVFptWXpSbU5ERTVNVFJsTldRdWNHaHdJanR6T2pReE9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFITnZkWEpqWlNJN2N6b3lNek00TURvaVBEOXdhSEFnQ2k4cUlFTmhZMmhsYTJWNU9pQmpZV05vWlM5emRHRnphRjlrWldaaGRXeDBMMlJ2WTNWdFpXNTBZWFJwYjI1Y1lYQnBYSEJvY0Z4a05UazRPRGxtT0dWbU5qTTJORE5tTTJabU56WXdaVFptT0dWa1pHTXdNQzhnS2k4S0x5b2dWSGx3WlRvZ1lYSnlZWGtnS2k4S0x5b2dSWGh3YVhKaGRHbHZiam9nTWpBeE9DMHdOUzB5TmxReU16b3lOVG93Tnlzd01Eb3dNQ0FxTHdvS0Nnb2tiRzloWkdWa0lEMGdkSEoxWlRzS0pHVjRjR2x5WVhScGIyNGdQU0F4TlRJM016YzNNVEEzT3dvS0pHUmhkR0VnUFNCaGNuSmhlU2dwT3dvS0x5b2dRMmhwYkdRZ1ZIbHdaVG9nYjJKcVpXTjBJQ292Q2lSa1lYUmhXeWR5WlhSMWNtNG5YU0E5SUhWdWMyVnlhV0ZzYVhwbEtHSmhjMlUyTkY5a1pXTnZaR1VvSjFSNmIzcE5lbTlwWTBkb2QxSkhPV3BrVnpGc1ltNVNkbU5zZUZOYVYxcHpXbGRPTUdGWE9YVllSa0p2WTBaNFIyRlhlR3hKYW05NFRXcHdOMk42YnpCTmVtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUpyWWpKT1EySkhPV3BoZVVrM1ZHcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJSMmhvWXpKbmFVOHpUVFpOZWtrMlNXcFpNMXBFVW1wUFZGSnRXbGRXYkZwVVl6Tk9NazVyVFVSSk1VNUVTVE5OUjFrelRrUlpNMXBVYkdsSmFuUjZUMnBOTlU5cFNVRmpSMmgzVWtjNWFtUlhNV3hpYmxKMlkyeDRVMXBYV25OYVYwNHdZVmM1ZFZoR1FtOWpSbmhIWVZkNGJFRkhOV2hpVjFWcFR6Tk5OazFxUVRaSmJWcHBUWHBTYVZwdFZUTlBSR2h0VG1wak5GcHRSWFZqUjJoM1NXcDBlazlxVFRWUGFVbEJZMGRvZDFKSE9XcGtWekZzWW01U2RtTnNlRk5hVjFweldsZE9NR0ZYT1hWWVJrSnZZMFo0UjJGWGVHeEJTRUpvWkVkbmFVOHpUVFpOVkVsNFQybEthV1JYYkhOYVF6bG9ZMGRyZEZreVJtcGhSMVYyVFVkYWJGbFVXbWhOVkU1cVRsUkthVTVIVVRCT2VUaDVUbFJOTWs5SFdYbE9SMGwzVGtSV2FsbFVaekJNZWswMFdWUm5NazVVWjNkT1IxazBXbTFTYWxscVdYWk9WR1JxV2tSck5VNXFaM2xhVkd0NlQxUkpNMDVUT1d4TlZGRTBXVmRLYlUxcVdtbGFWMDE1V1cxTk0wd3lXbWxOZWxKcFdtMVZNMDlFYUcxT2FtTTBXbTFGZFdOSGFIZEphblI2VDJwUmVFOXBTVUZqUjJoM1VrYzVhbVJYTVd4aWJsSjJZMng0VTFwWFduTmFWMDR3WVZjNWRWaEdRbTlqUm5oSFlWZDRiRUZJVG5aa1dFcHFXbE5KTjJONmIzaE9hazB5VGtSdmFWQkVPWGRoU0VGblEyazRjVWxGVG1oWk1taHNZVEpXTlU5cFFtcFpWMDV2V2xNNWVtUkhSbnBoUmpscldsZGFhR1JYZURCTU1sSjJXVE5XZEZwWE5UQlpXRkp3WWpJMVkxbFlRbkJZU0VKdlkwWjNORTVFVW1oYVJGcHJUbTFLYWxsNlJYaFpWMDVxVDFkWk1GcFhTVE5hUkdocFdXcFdhbGxxVVhkT1V6aG5TMms0UzB4NWIyZFdTR3gzV2xSdloxbFlTbmxaV0d0blMyazRTMHg1YjJkU1dHaDNZVmhLYUdSSGJIWmlhbTluVFdwQmVFOURNSGRPVXpCNVRteFJlVTFxYnpGTlZHOTZUMU56ZDAxRWIzZE5RMEZ4VEhkdlMwTm5iMnRpUnpsb1drZFdhMGxFTUdka1NFb3hXbFJ6UzBwSFZqUmpSMng1V1ZoU2NHSXlOR2RRVTBGNFRsUkpNMDE2WXpGTlJHczFUM2R2UzBwSFVtaGtSMFZuVUZOQ2FHTnVTbWhsVTJkd1QzZHZTMHg1YjJkUk1taHdZa2RSWjFaSWJIZGFWRzluWWpKS2NWcFhUakJKUTI5MlEybFNhMWxZVW1oWGVXUjVXbGhTTVdOdE5HNVlVMEU1U1VoV2RXTXlWbmxoVjBaellWaHdiRXRIU21oak1sVXlUa1k1YTFwWFRuWmFSMVZ2U2pGU05tSXpjRTVsYlRsd1dUQmtiMlF4U2toUFYzQnJWbnBHYzFsdE5WTmtiVTV6WlVaT1lWWXhjSHBYYkdSUFRVZEdXRTlZVmxsU2EwcDJXVEJhTkZJeVJsaGxSM2hLWVcwNU5GUlhjSGRPTWs0MllucENUbVZ0T1hCUlZXaERZakpPUmxWdVdscE5NVm93VjJ4ak1VMUhTWHBUYlU1V1lsWmFkRmxyWkZkaGJWSklZa2hhYVdKSWFGSlpWV2hEV1RGS2RHSklUbUZWVlVweVdXcEtUMUV5U2toUFYzQm9aVlZyTTFaSGNEQmxhemx4VkZSV1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBVakpHV0dWSGVFSlNNbWh2V1hwS2JtRlZPSHBVVkZwT1pXdHJNbE5YY0ZkaVZtdzJVMjEwV2xZeGJEVlhiRkpMWWxac05sTlVTazVXUjJRMVYxaHdUbVF4YkhGVFdIQlBUV3N4TmxSV1VscE5SVEZ4WWtkc1NtRnVValpVTW5CT1RsVTVjRk5WUm1wU01tZ3pWV3RqTldGdFVsaE5WM2hwWW14S01sa3llRFJWTVhCWVYyNU9ZVll3TkhkWlZtTTFaRlpvUjFGdE9XcFNibWhJV1Zaa05HSkZSa2hPVjJocFZqRldjRlI2VGs1T2F6bFZZakpzVWsxcWJIcFphazVLWkZkT1NHRklaRXBoYmxJMlZESndUazVWT1hCVFZVWnFVakpvTTFWcll6VmhiVkpZVFZkNGFXSnNTakpaTW5nMFZURndXRmR1VG1GV01EUjNXVlpqTldSV2FFZFJiVGxxVW01b1NGbFdaRFJpUlVaSlVXMW9hMUl5WkhCVWVrNU9UbXMxVlZwNldrcGliSEJ6V1cweFUyUnRUbkJQVnpGc1lsVmFNVmxXWXpGa2JWSkpWVzVhVFUxc2NHOVpWRXBYWlZWM2VsUnViRnBsVkd4SVYxWmtNR0pIVG5CUFZrWnFZbFJyZVZsV1pGTmlSMDV3VDFSQ2FtSkViRlpXVjJzMVVrZEplV1ZJV21waFZGWXpXVlZvUW1GVk9IcFVWRnBQVWtWVk1sTlhaRU5rTWtaSlVXdFdhVTFyTkhoWmJHUlhaRmRTU0U5WWJGbFNhM0J6VjIweE5HSkdhM3BWYmtKcFRXcFdhbFpWWkc5a01XaEdWMjVDYVZJeFZrSlpla2sxVFZkT2RGUnRlRXBoYmxJMlZESndUazB3T1ZWaGVscEtZVzVqZGxrd1pHOWtNRTV1WTBoV1dsWjZSbk5aZWs1RFlVWnJlVlpYWkZOaVZWcDVWMnhvUzFreFZrbFRibHByWWxkNGNsZHNhRXRaTWxKSlUyMWFWMUpyYXpOUk1tUjNZVzFLU0ZKdWNHcGxWVXBGV1dwS05HUnRUbkJSYlhoc1UwWktjMWx0TVZObGEyeEhaVVZrV2xZelVuTlpNbmcwVlZkT2RFOVVTbWhXTVVweldUSjRORkpIU1hsbFNGcHFXak5CTTFFeWJFSmFNR3hFVVZoYVRHRlhPVXhUVlU1Q1dqQnNSRkZZUmtwU1ZVcDZXVlpqTVdOcmJFaGhSRUpyVTBWRk1sUklhelZOUjA1d1RsUk9hRll6VW5kWk1HUlhZVEpHV0ZKWVZtbE5NSEIxVkVST2EyTkhSWGxoTTFwV1lsWmFNVmxVU2pSaVIwNXpUMWhPYUZkRk5IZFhiR2hQWTBWT2NGRlhaRXBSTUVadVV6SnJORk13YkVSUlYyUktVMFZLTlZscVRsTmlSbXQ2VlcxNFlWRXdTalphUldSSFRVZEdXRlJYWkV0VFJUVnZWMjB4VjFKSFNYbGxTRnBxWVhwV2IxbHNaRmRsYTJ4RlRVZGtXbGRGY0RWWFZtaHlZakJPY0ZGWFpFcFJNRVp1VTFWT1Fsb3diM3BVYmtKc1ZqQmFkbE51YkROYU1HOTVaR3RXZWxkRmNEQmxSWGhIVG01b1RWSlhOVTFSTUVaMVdYcEtSMlZZYUUxU1Z6Vk5VVEJHZFZsc1pFZE5iVVpVV1ROT1NsRXlVWGRhUm1oTFRWZEtkRlJxUmt0bFdHUk1VMVZPUWxvd2JFUlJWMlJLVVRCR2RWcFdaRmxTYlRSNVlraE9TMlZZWkc1VGFrbDRaRzFPY0ZrelRrcFJNbEoxWkhwa05HUklZek5sYTFwMVpWZE9lbE5WVG10aWJVNTBZVEkxVFZFd1JuVlpNR1JYWkVac2RGWlhOVTFSVnpsdVUxVk9RbG93ZEZWak1IUkVZVlZHYmxOVlRrTmtNazUwVDFSQ1lWWXdOSGRYYkdSU1dqSk5lbFZ0YUd0U01uaHhVMVZPVTJGSFNraGxSVkpwVFc1b01sa3ljekZoUjBwWVZtNXdTbEpFUW01WFZtaExaVlpzV1dFeU9VUmhWVVp1VTFWT1Fsb3diRVJSVjJSTFRVVmFlbGRzYUZwYU1rVTBWVE5vYW1KVVRrWmpNV2g1VWxoT1dWVkZWbnBWTWs1NlUxVk9hMUZ0U2toaVIzQmhWVEJLTUZkV2FHRmpSMDE1WVRJMVRWRXdSblZWVm1RMFkwZFdkRkp1YkdoV2VsSjFWRVZPUW1Kc1JsaGxSRUpyVm5wa1JXTnRiR3BqTUd4RVdrVkthVll4V1hkWlZtaFBUVVZ3TldReVpFdE5SVm8xV1d4b1YwMUZjRFZrTUhSS1VUQkdibE5WVGtKYU1HeEVVVmMxVWxZelVYaFhWbU40WVVkT2RHSklWa3RsV0dSdVUycENSMlZ0UlhsV2JteEtVMGQ0YzJWR2J6VmpSMHBJWVRJMVRWRXdSblZWVnpGSFkyNW9UVkp1YkV0bFdHUnVVMnBDUzJGSFRuVldha0pMWlZoa2JsTnFRa3RoUjFKSVVtNUthVlJXVGpSWldHeERUbFp3YWxZeVdtaFdNMmgzVTI1c00xTXdiRVJSVjJSS1VUQkdibE5WVGtKaWJFWjBWbTFzWVZZelRtNVpiR1JIVFcxR1dWUnVRa3RsV0dSdVUycENTMkpIUm5CWk0wNUtVVEpTUkZkc2FITmhSMVp3V1ROT1NsRXlVa1JaYWtreFlUSkdWRkZ1VWxwWFJuQjNXWHBLY21KcmVFUlJWelZTWWxSc05WZHJZelJpYTNoQ1lqSmtTbEV3Um01VFZVNUNXakJzUkZwRlRtcGlWR3d4V2xkc2FtTXdiRVJhUlU1cldURk9iVmRyWkVkT1ZYQTFaREprUzAxRmIzaFpNakZyWkcxS2RXSkhhRXRsV0dSdVUycENUMkZIU2xoYWExSXdZbFZ3YzJWRmJ6VmpSWEExWkRKa1MwOUZPVWxYVm1OM1dqSldXRmRGV25WTmJYaDZXVlpPYW1Nd2JFUmFhMUp2VFd0Wk1WTlZhSE5pU0doaFQxaENhVkl5ZEhWVVJVWjJXakJzUkZGWFpFcFJNRVp1VTFWT2JWSkhaM2xXYms1b1ZqTk9ibGxzWkVkTmJVWlpWRzVDUzJWWVpHNVRhbWhRVTBkR1dHUklXbWxTTUZsM1YxWk9hbU13YkVSYWExSnZUVzEzZVZsV2FGSmlhM2hFVVZjMVUxSXhXakZaVm1oMldqSktXRkpxU21oWFJUVjNVMjVzTTFvd2IzZFZiWGhwWWxkM01sTlZhSE5pU0doaFQxaENhVkl5ZEhWVVJVWjJXakJzUkZGWFpFcFJNRVp1VTFWT2ExSldjRmxYYlhoaFVqSjRlVmRzWXpGalJYQTFaREprUzAxR2FFWmlhazVMWWtkS1NWVnVRa3BUUjNoelpVWnZOV05IU2toaE1qVk5VVEJHZFZWc1pEUmlSMFY2Vlc1c2FGWXpUbTVaYkdSSFRXMUdXVlJ1UWt0bFdHUnVVMnBDVjJNeGNGaGtSRUpxWWxkNGVWTlZNVkJpYlVaWlYyNUNhMUV5VG5wVFZVNXJVbTFLU0ZadVNtdFRSWEIzV1Zoc1EyTXlSbGhOVjNoTFpWaGtibE5xUWxkak1YQllaRVJDYW1KWGVIbFRWV040WkcxT2NGa3pUa1JoVlVadVUxVk9RbG93YkVSUlYyUkxUVVp3YjFscmFGWmFNa1UwVlROb2FtSlVUa1pqTVdoNVVsaE9XVlZGVm5wVk1rNTZVMVZPYTFJeVJsaGxSM1JvV1RGa2JWbFdUbXBqTUd4RVdrVmthbUpWV2pGWmVtaFVaVWRXY0ZGdE5UTk9NMmg2VTI1c00xb3diM2RhUjJocFVqSjRjRmRXYUV0aE1XeFVXVE5PU2xFeVVrbFhiR1JQWWtWc1NFMVhhR3RpVjNnMldWWk9hbU13YkVSYVJXZ3pUakZ3ZVZOVlkzaGhSMUowWWtod2FGVXlUbnBSTW14Q1dqQnNSRkZYWkVwUk1FWnVVMnBDYTJWWFJsUlpNMDVLVVRKU1NWa3lNWEprUjBWNlYwVmFkVTF1VWpKWmJUQjRZVWRXY0ZrelRrcFJNbEpKWkhwa05HTXdjRFZrTW1STFRVZGFSV1JyWTNwU1NGcE9WakphYUZVeVRucFRWVTVyVTFac1dHUklRa3RsV0dSdVUycENiMkZIVG5SVmJXaHBVVEpPZWxFeWJFSmFNR3hFVVZka1NsRXdSbTVUYWtKdllVZFNkVmRGVW5kbFYwNTZVMVZPYTFOWFNYcFRibHBzWWxkNGNGbFhUbFJhYlVaVVdUTk9TbEV5V2taak1HUTBZMnhzZEZKdE9WcFhSV3h1V2xaa1dWSnROSGxpU0U1b1ZUSk9lbE5WVG0xU1dFNUpWRzVPV2xaNlFtNWFWbVJaVW0wMGVXSklUbWhWTWs1NlUxVk9hMVJHYkZoVGJXaG9aVmRPZWxOVlRtdFVSbXhZWVVSS1lWZEZjSE5aYlRGclkwVndOV1F3ZEVwUk1FWnVVMVZPUWxvd2JFUlJWelZVVFd0YWRscEhNVmRsVm5CWVRsYzFhRlo2UmpaWlZrNURZbTFPZEdFeU5VMVJNRVoxVlhwS1IyUkhVbGhYYms0elRtdHdlRk5WYUhOaVNHaGhUMWhDYVZJeWRIVlVSVTVDWW14TmVWSnViRnBXZWxaMFdWWmtNMW95VGtoV2JsSmFZbFphTmxsV1RtcGpNR3hFV2tWNFdsZEZjRzlaYlRGaFkwZEtSRmt6VGtwUk1sSk5WMVpvUzJFeVJsaE9WMmhwVVRKT2VsRXliRUphTUd4RVVWZGtTbEV3Um01VGFrSXdZVWRPZEU5WVRtaFdlbFp2VTFWamVHRkhVblJpU0hCb1ZUSk9lbE5WVG10VVJteFpZbXRXZWxkR1FrWmpNVTVxWXpCc1JGcEZlR0ZXTW1nMVdWWmtTMkZIVG5CWk0wNUtVVEpTVFZkc2FFOU5SbXhZVGxkNFMyVllaRXhUVlU1Q1dqQnNSRkZYWkVwUk1FWjFWWHBLVjAxR2NGaE9SelZOVVRCR2RWVjZhRlJsUjA1MFRUQldlbGRJU2taak1VNXFZekJzUkZwRmVEUlVSVm8xV1cxT1ZHVkhWbnBWTTJocFYwWkNSbU14VGtOamJHeFlZVVJLWVZkRmNITlpiVEZyWTBWd05XUXlaRXROU0ZwR1l6Rm9TMlJJYUUxU2FsbzBWRVZXTUZsc1pGZGtWbkJZWkd0YWRVMXNWblZVUlU1Q1lteE5lV0pJYkZwWFJ6bHVXVlJvVkdWSFRuUk5NRlo2VjBoS1JtTXhhRkZTV0U1VVdUTk9SR0ZWUm01VFZVNUNXakJzUkZGWFpFdE5TRkl5VjFjeFIyTXlVa1JaTTA1S1VUSlNUVmxxU2t0aFIwcEpWVmRrYVZZd1dYbFpWbWhQWTBWd05XUXlaRXROU0ZJeVdsWm9WbG94YjNsU2JrNW9WakJ3YjFreU1WTmhSWEExWkRKa1MwMUlVakphVm1oV1dqSkdTRkp1U21oVk1rNTZVMVZPYTFSSFNYcGlSRVpLVWpOU2IxbFZhR0ZpUjA1MFZtNVdZVTF0ZEhWVVJVWjJXakJzUkZGWFpFcFJNRVp1VTFWT2ExUkhTWHBpUkVaS1VqTlNjMWw2VGxOaFIwcDBWbGMxVFZFd1JuVlZla2sxVGxkU1ZGRnVTalJVUlZvMVdXMU9WR1ZIVm5wVk0yaExaVmhrYmxOcVFqQmtiVlpaVmxka2FFOUdUalJhV0U1VVpVZEtSRkZ1U2xwV01tZDVWMnhvUzJKSFNuUmFTRUpMWlZoa2JsTnFRakJrYlZaWlZsZGthVkl4V1RGWmEyUkhZMnR3TldReVpFdE5TRkl5V2xab1Zsb3lTbGhTYlRWaFZucFZkMWRXVG1wak1FNXdVVmRrU2xFd1JtNVRWVTVDV2pCdmQyUklXbXhYUmxadVdXeGtSMlJXY0VoU2JrNW9WbnBXYjFOdWJETmFNRzkzWkVoYWJGZEdWbTVaYkdSSFRXMUdWRmt6VGtwUk1sSk5XV3BPYzAxVmJFaE5WM2hwWWxaYWVXVkdielZpUlhBMVpESmtTMDFJVWpKYVZtaFdXakpLV0ZadWJGcE5hMW94VTI1c00xTXdiRVJSVjJSS1VUQkdibE5WVGtKaWJFMTVUMVJXYTFVd1NqQlphazVLWW10NFJGRlhOVlJOYW1zeFdrWk9RMlF4YkZsVWFrSmhWak5rYmxwV1pGbFNiVFI1WWtoT1MyVllaRzVUYWtJd1pHMVdXVlpYWkdwU01Wb3dWMWN4Vm1KcmVFUlJWelZVVFdwck1WcEdUa1ZTYlRSNVZtMHhhMUl3V25wWlZrNXFZekJzUkZwRmVHbE5NbmQ0VTFWb1UwMVhUblJrUkVaYVYwYzVkVlJGUm5aYU1HeEVVVmRrU2xFd1JtNVRWVTVyVkVkSmVtSkVSa3BUUmtveVdsZHNRMlJHYkZsWGJrSkxaVmhrYmxOcVFqQmtiVlpaVmxka2ExTkdXalZaVkU1WFlVZFdjRmt6VGtwUk1sSk5XV3BPYzAxVmJFbGlSM2cwVjJwc2QxbHJUbXBqTUd4RVdrVjRNMDR4Y0RaWGJHUTBZa1Z3TldReVpFdE5TRkkxVjJ4amQySnJlRUppTW1SS1VUQkdibE5WVGtKYU1HeEVXa1Y0YTFaNlFtNVpWRXBIWWpKU2RGWnViR0ZXZWxaMVdWWm9UMk5GY0RWa01tUkxUVWhSZUdWR2J6VmpiVWw1VGxoU1dsZEhPWFZVUlU1Q1lteFNTRkp0Y0doWFJuQnpXVEkxVW1KcmVFUlJWelZWVWpCYWNWbFdhR0ZpUjA1MVZWYzFUVkZYT1c1VFZVNUNXakJzUkZGWFpFcFJNbEpPVjFab1lXRkhTblZWYldoTFpWaGtibE5xUWpSaFIxSjBVbTVXYTFJd1ZtNVpiR1JIVFcxR1dWUnVRa3RsV0dSdVUycENOR0ZIVW5SV2JsWmhVakZhTlZOVmFFTmlSMHBZVTIxNGFrMXRkSFZVUlU1Q1lteFNTRkpxU21GV2VsWnlWMnhvU2xveGIzcFRiWGhvVjBVMWQxTnViRE5UTUd4RVVWZGtTbEV3Um01VFZVNUNZbXhTU0ZKcVNtRldlbFp5VjJ4b1Nsb3lTbGhTYlRWaFZucFZkMWRXVG1wak1HeEVXa1V4V2xkR2NHOVpiVFZUWVVWc1NWRnRlR2xXTUhCeldYcEtjbUpyZUVSUlZ6VlZVakJaZVZkV1l6Rk5SbXhVVVc1U2FVMHdiSFZVUlU1Q1lteFNTRkpxU2xwV2VsVjNWMVpPUTJKdVl6TmxTRTVMWlZoa2JsTnFRalJqUjBwWVQxaFdhRlV5VG5wVFZVNXJVVzVqTWxwclZucFdNMDV1VmtWa2MyUkhTWGxPUnpWTlVWYzVibE5WVGtKYU1HeEVVVmRrU2xFeVVrNVhiR2h6WXpGc1dHTXlOVTFSTUVaMVZrVmtjMlJHY0ZSWk0wNUtVVEpTVDFkV1l6RmhNV3hZWlVoQ2FXSlZWblZVUlU1Q1lteFNXRkp1VGxwV00xSjNXa1ZPYW1Nd2JFUmFSVFZhVjBad2QxTnViRE5UTUd4RVVWZGtTbEV3Um01VFZVNUNZbXhTV0ZadVZtRldNMXBIWW1wS1ZtSnJlRVJSVnpWVlZqRmFNVmRzWkRKU2JUUjVWbGhTYWxJd1dYZFphekZVWlVacmVWSnVWa3RsV0dSdVUycEJlbEpZVGxsVlJWWjZWMFZzZFZSRlRrSmliRkpZVDFoc1MyVllaRzVUYWtGNFpHMU9kVlJ0YUdsU00xcEdZekZqZDJKcmVFSmlNbVJLVVRCR2JsTlZUa0phTUd4RVdrVTVXbFo2Vm5OVFZXaHpZa2hvWVU5WVFtbFNNblIxVkVWT1FtSnNVblJTYm14TFpWaGtibE5xUVRGaFIxSjBVbTVHYVdWVlNuQlhiR2h6WVVkV2VsVXphRXRsV0dSdVUycEJOV050VWxoa01tUnBUVEZLTWxkWVRsQlBSMDAwVkhwb1NsTkZOVzlaTTA1VVpVZE5ORlV6YUV0bFdHUnVVMnBHUTJGSFRuUmxSMmhvWlZWS01GbHFUa3BpYTNoQ1lqSmtTbEV3Um01VFZVNUNXakJzUkZwR1JscFhSVEYxVkVWT1FtSnNWa2hTYm5CclVqRmFlbE5WYUVOaVIwcFlVMjE0UzJWWVpHNVRha1pEWVVkTmVsVnRlR2xSTUVreFYyMU9XRnB0UmxobFNFSkxaVmhrYmxOcVJrTmhSMUpJWld0V2VsWXdOVzlaYld4cVl6QnNSRnBHUm1GV2VrWndWMnhPYW1Nd1RuQlJWMlJLVVRCR2JsTlZUa0phTUc5NFVXMTRhVll3Y0hOVVJtaFRUVmRPZFZadVZscE5NVloxVkVWT1FtSnNWa2hXYWxaaFRXdGFNRmRYTVZkbFZXeE9WREkxYUZrd09YVlhiVTVVV20xR1ZGa3pUa3BSTWxKU1dUSTFWMlZ0VmxoU1YyUnBWakJaZVZsV2FFOWpSWEExWkRKa1MwMVZOVzlYYlRWTFlVZEtjRmt6VGtwUk1sSlZWMVprWVdOSFRuQlpNMDVFWVZWR2JsTlZUa0phTUd4RVVWZGtTMDFWTlc5Wk0wNVVaVWRLV1ZWRlZucFZNRXA1VjFaa2IwMXNjRmxUYlhocFlsZFNkMU51YkROYU1HOTRWRzFvYW1NeFRqUlpiR2hSVWxoT1ZGRnVaR0ZXZWtad1YyeE9hbU13YkVSYVJsSmFWMFY0Um1NeFRtcGpNR3hFV2taU1dsZEZlRVpqTVU1cVl6Qk9jRkZYWkVwUk1FWnVVMVZPUWxvd2IzaFVia0pzVmpCYWRtVkZlRWRrUjAwMFZUTm9TbEl6VWpKYVZtaFdXakpGZVZKdE9XdGlWbG8xVjJ4ak1XSnRSbFJaTTA1S1VUSlNWVmxxU2pSTlYwWTFVVzV3V2xkRmVFWmpNVTVxWXpCc1JGcHJXblZpVmxwMFdrVmtSMk15UmxSWk0wNUtVVEphUjJKdE1WZGlWMUpJVW01T2FGVjZSWGRhUm1oTFRWZEtkRlJxUmt0bFdHUnVVMnBvV0ZwV2NGaFhha0phVmpOb2QxUkdhRTloUjA1NlZUTm9TMlZZWkV4VFZVNUNXakJzUkZGWFpFcFJNRVoxVm10a1IyVllZekphYTFaNlZucFNkVlJGVGtKaWJGcElWbTFvYVZFeVRucFRWVTVyVmxkSmVtSXlaR2xXTUZsNVdWWk9hbU13YkVSYVJsWnJWMFZ3ZVZwR1pFZE9hM0ExWkRCMFNsRXdSbTVUVlU1Q1dqQnNSRkZYTlZkVFJsbzFXa1pqTVdGdFVsaE5XSEJyVlRCS05sZFdhRTFTV0U1VVdUTk9TbEV5VWxaYVJtaExUVmRLZEZScVJrdGxXR1J1VTJwR1UwMVhUblZXYmxaYVRURmFNRmw2VGxaYU1rMTVVbTVzTkZSRlZuVlVSVTVDWW14a1dGZEZXblZOYlhoNlUyNXNNMW93YjNoaVIzZzBWMnBzZDFsclRYaGxiR3haVkVWV2VsVXlUbnBUVlU1clYyMUplVTVYY0ZwVk1Fa3hWMjFPV0ZwdFJsaGxTRUpMWlZoa1RGTlZUa0phTUd4RVVWZGtTbEV3Um5WV01XTTFaVzFTV0U1SFpHeFdNV2hIWW1wS2MyTXlSbFJaTTA1S1VUSlNhRmRzYUhOTlIxSllUbGhDUzJWWVpHNVRha1o1VWtoYVNFMVliRE5PTTJkM1UxVm9jMkpJYUdGUFdFSnBVakowZFZSRlRrSmliR1JZVW01V05GUkZXbmxUVldoVFRWZE9kVlp1VmxwTk1WWjFWRVZPUW1Kc1pGaFNibFkwVkVWYWVWTlZXbE5rYlU1SlUyMW9hR1ZYVG5wUk1teENXakJzUkZGWFpFcFJNRVp1VTJwQ01HRkhUblJWYmtKcFlsVmFlbE51YkROYU1HODBWakpXV2xkRmNHOVpNRTVxWXpCc1JGcEZVbUZXTTJodlYydGpOV1JWY0RWa01tUkxUVVZ3YzFreU5VdGhSMFkxVVc1U1dsZEdjSGRUYm13elV6QnNSRkZYWkVwUk1FWnVVMVZPUW1Kc1NUUlVla3BvWlZWS01GZFdhR0ZqUjAxNVlUSTFUVkV3Um5WVmFtaFFUMGRLUkZrelRrcFJNbEpQVjJ4b1MyRnNiRmhPUnpWTlVUQkdkVlpHWkZkbFZtdDVVbTVXU2xKWVdrWmpNV2hMWkVob1RWSnFXalJVUlZvMlpVVjRSbUpyZUVSUlZ6VlVUMFpPTkZrd1pESlNXRTVaVTI1U05GUkZXVEpsUlhoR1ltdDRSRkZYTlZSU01uaDZWMnhPUTJSR2JGbFhia0pxVFcxMGRWUkZSblphTUd4RVVWZGtTbEV3Um01VFZVNXJVVzFLU1ZaRlZucFdlbVJHWXpGamVHVnVhRTFTVnpWTlVUQkdkVlpVU1RWT1YxSklVbTVzTkZSRlZuVlVSVTVDWW14VmVXSnJWblZOYlhoNlUxVmpOVTFIVWxSWk0wNUtVVEpTU2xscVNqUmpSMUowVDFkMFNsSXpXa1pqTVdoTFpFaG9UVkpxV2pSVVJWbzJaVVY0Um1KcmVFUlJWelZXVDBaT05GZFVTa2RqYTJ4R1RWZG9ZVTFzV2pGYVJXUkdZbXQ0UW1JeVpFcFJNRVp1VTFWT1Fsb3diRVJhUmxJMFZFVmFjVmRXWkhwYU1rNUlWbTVTV21KV1ZuVlVSVTVDWW14YVdHVkVSbXBOYm1odldUSXhSMlZXYkZsVlJWWjZWVEJLVFZsclpGZGpSMHB3VVc1U1dsZEdjSGRaZWtweVltdDRSRkZYTlZOV2VsVjNWMnhvUzJSV2JGbFVhbFpwVFdwV2IxbHJUa05OUjFKWlUycEdhV0pWTkhoVGJtd3pXakJ2ZUdKSGVEUlhhbXgzV1d4T2FtTXdiRVJhUmtKcVlteEtiMU5WTVZoYWJHeFpVMjFvYWxFeVRucFJNbXhDV2pCc1JGRlhaRXBSTUVadVUycEJOV1ZYVWtoU1YyUlZWbnBzTlZOdWJETmFNRzkzVlcxb05GTnFhRzVaTUdSWFpFWnNkRlp1Y0doVk1rNTZVMVZPYTFGdWFHRk1NRlo2VlRCS2NGbHFUbk5oUjAwMFZUTm9TMlZZWkc1VGFrSlhaVzFGZVdFeVpGcFdNMmQzWlVWNFIyUlZjRFZrTW1STFRVWmFObGxVU25KYU1rWlpVVzVPYUZZelRuVlVSVTVDWW14S1dWUnVTbWhWTUVwT1YxWm9ZV0ZIU25WVmJXaExaVmhrVEZOVlRrSmFNR3hFVVZka1NsRXdSblZWYkdoUFkyMUdWRkZ0TlROT00yaDZVMjVzTTFvd2IzaGpSM2hzVjBaS2QxbHRiRU5VUm14WVlVUktZVmRGY0hOWmJURnJZMGROZVdFeU5VMVJNRVoxVld0ak5XUlhVbGhqTW1SclUwWmFOVnBHWXpGaGJWSlVXVE5PU2xFeVVsSlhWbWhEWVVkV1dGSlhOVTFSVnpsdVUxVk9RbG93YkVSUlYyUktVVEpTVWxkc2FFdGpSMUY1WWtoV2FFMXVhSE5UYm13eldqQnZlRkZ0ZUdwaWF6RnVXV3hrUjAxdFJsbFVia0pMWlZoa2JsTnFSa05pUjA1MVZGZGtiRll4YUVkaWFrcHpZekpHVkZrelRrcFJNbEpTVjJ4b1MyVnRSbGhTYmxaS1VqTm9iMWRVU25OTmJIQlpVMnBDUzJWWVpHNVRha1pEWWtkT2RWUlhaR3BTTVZvd1YxY3hWMlZ0UmxSWk0wNUVZVlZHYmxOVlRrSmFNR3hFVVZka1MwMVZTbk5aTWpWUFkwWnNXRTVIWkdoUFJrNDBXVEl3ZWxKWVRsbGphMVo2VjBaQ1JtTXhUbXBqTUd4RVdrWkdZVmRGY0RaVFZXUnRVa2hhU0dWclVqSlJNazU2VTFWT2ExTldiRmhOUjJSclVucHNNMWt5TVVkamEzQTFaREprUzAxSVdrWmpNV2g1VWxoT1dHUXlaR3hYUmxvd1drWm9TMDFHYkZSUmJsSmFWMFp3ZDFsNlNuSmlhM2hDWWpKa1NsRXdSbTVUVlU1Q1dqQnNSRnBGZUdwaVZWcDZXVlpvYzJKSFVrUlJibEphVjBad2QxbDZTbkppYTNoRVVWYzFWRTlHVGpSWk1qQjZVbGhPV1dOclZucFZNRkpIWW1wS1IyVldiRmxSVnpWTlVUQkdkVlY2YUZSbFIwNTBUVEJXZWxkSVNrWmpNVTVxWXpCc1JGcEZWbUZXZWxaM1dsZHNRMk5zYkZoVGFrWTBVMnByZUZOdWJETmFNRzkzVW1wV2FtTXhUalJaV0d4RFpXeHNXVlJGVm5wVk1rNTZVVEpzUWxvd2JFUlJWMlJLVVRCR2JsTnFSbUZOVjA1MFdrUkdhV0ZWU2pOWGJHTjRZVlp3VkZrelRrcFJNbEpWVjFaa05HRkhTbGxXYm14YVZUQktkVmt5TVhObGJVWlVXVE5PU2xFeVVsWlhiR014WkZoak1tRXlaRXhTYkVwdldrUkpNVTVWZEZSWk0wNUtVVEpTVFdSNlpEWlNTRUUwVkhwb2FHVlZTbmxYVm1oTFlVVndOV1F5WkV0TlNHaHZWMVJLYzAxc2NGbFRha0pMWlZoa2JsTnFSbUZqUjA1MFlrZDBhRll3V2pGVGJtd3pVekJzUkZGWFpFcFJNRVp1VTFWT1FtSnNaSFJpU0ZacFltMVNiMWxyWkZOalIxSklWbGMxVFZGWE9XNVRWVTVDV2pCMFZXTXdkRzFWVnpsd1ZIcE9UazVyTlVWV1ZGcEtXakJLTTFsVmFFTlNWMGw1VkdwR2FWWXhXakZhUldNMVpWWm9SMU50ZUdGaVdHaHpWMVJPVTJOSFNYbE9WMDVXVWpKb00xZEZWbUZqUjBwSVZsVkdhV0pWV2pCWGJHaFBaREZzV0ZSdGVHcGxWV3N6VjFaU2RtVkZPWFZrU0hCUVlXdHNORlF5YkV0Wk1VcDBVbTVLWVZkRmNHcFdWV2hMWkcxU2RHSkhkR0ZYUlhCcVdrVm9TMXBzV2tkVFYyeFFUVVJuTWxSWWNFSk9hMngxVVcwNWFsSldTakpYVkU1WFpFWndXRTVVUW1sTk1IQnFWbGN4VjJKWFNraFdiWEJyVWpKNE1sbHRlRFJTTWs1WlZHMTRhV0ZWYXpKVVYzQjNUakpPTm1JemNFOWxiVGx3VVZWb1EySXlUa1pWYmxwYVRURmFNRmRzWXpGTlIwbDZVMjFPVm1KV1duUlphMlJYWVcxU1NHSklXbWxpU0doSVdURm9UMkpIU201UmJURnFWMFUxYzFsdGJFcE9NazQyWWpOc1RsWkhPWEJYUlZaaFlVZEZlVlp1YkZsU2EwbzFXV3BPWVdOR2NFaFdibXhaVTBaS05WZEVSbE5WTUd4eFpFaHdVR0ZyTUhsVU1teEtVVmRPU0dGSVpGTlNlbXh4V2taamVHSkhTblZWYmxwcVlraG9WRmRzWkdGak1YQllWR3BDYUZaNmJERlhSVlpoWlVkTmVWWnVWa0pTZWxadldXeGtWbUZWT0hwVVZGcFBWa2M1Y0ZwRmFFdGFiRnBIVTFkc1VFMTZSVFZaTTNCMlRVVXhObUl5YkVKVFJVcDJXVEJXVTJSc2EzcFdibEpoVm5wVmQxbHFUa3RaTVZaMFZtMHhhVkl4V25GYVJXUnpaRzFLYzJWR1JtaFRSVXBxVlcweGMyTXhjRkpSYmtKcFlsVTFlbHBHWkZOaVIwNDFVMVJrV2xaSE9UTlVNalV3VDFkT05tSjZRazlTUnpsd1VWVm9RMkl5VGtaVmJscGFUVEZhTUZkc1l6Rk5SMGw2VTIxT1ZtSldXblJaYTJSWFlXMVNTR0pJV21saVNHaFNXVlZvUTFreFNuUmlTRTVoVlZWS2RGcEdZekZoYlZKSVlraGFhV0pyTVhCVWVrcEdUbXN4UldORVpHMVhSVEF5Vkd0U1VrNXJiRzVSYm1Sb1UwVktSbGxxU2s5TlYwcFlWbTVXYTFKNmJEVlhSVnBMWWtad2RHVkhlRnBOTVVwM1dXcEpNVmt4VmtoaFNHUlpVbFp3ZDFsclpGWlJWbXQ1VDFoV2FrMHhTbTlaYlRWVFpXdHNjV1JIYUZCaGEwVXlXbFJOZUdWck9YRlZXR3hRWVZWc1Fsa3daRzlrTVVwSVQxZHdhMVo2Um5OWmJUVlRaRzFPYzJWR1RtRldNWEI2VjJ4a1QwMUhSbGhQV0ZaWlVtdEtkbGt3V2pSU01rWllaVWQ0UWxJd05YcFhWbWhQWld4d1dWUlhiRkJOYTFVeVZGWlNkMDR5VGpaaU0yeFBaVzA1Y0ZkRlZtRmhSMFY1Vm01c1dWSnJTalZaYWs1aFkwWndTRlp1YkZsVFJrbzFWMFJHVTFVeGFFWlVibHBwVW5wc05WTlhjREJWUlRseFZGUkdVR0ZWY0ROWlZXaERVbGRKZVZScVJtbFdNVm94V2tWak5XVldhRWRUYlhoaFlsaG9jMWRVVGxOalIwbDVUbGRPVmxJeWFETlhSVlpQWXpGc1dWUnVjRmxsVldzeVZGWlNSazV0VlhwVVZGcFBVa1ZyTWxOWFpFTmtNa1pKVVd0V2FVMXJOSGhaYkdSWFpGZFNTRTlZYkZsU2EzQnpWMjB4TkdKR2EzcFZia0pwVFdwV2FsWlZaRzlrTVdoR1ZHNU9XbGRGTlRaWFNHUkRZbGRPV1ZSdGVHbGhWV3N6Vmtod2RtVnJNVVZpTW14cVVqSm9NMVZyWXpWaGJWSllUVmQ0YVdKc1NqSlpNbmcwVlRGd1dGZHVUbUZXTURSM1dWWmpOV1JXYUVaWGJtaHFUV3hhTVZOWGNIWmxWVGwxWkVod1VHRnJNSHBVTW14S1VWZE9TR0ZJWkZOU2VteHhXa1pqZUdKSFNuVlZibHBxWWtob1ZGZHNaR0ZqTVhCWVZHcENhRlo2YkRGWFJWWmhaVWROZVZadVZrSlNNWEEwV1hwS1YyUlZiSEZrU0hCUVlXdHJlbFF5YkV0Wk1VcDBVbTVLWVZkRmNHcFdWV2hMWkcxU2RHSkhkR0ZYUlhCcVdrVm9TMXBzV2tkVGJVNVNUV3BzZWxscVRrcGhWVGg2VkZSYVRtVnNhekpUVjJSRFpESkdTVkZyVm1sTmF6UjRXV3hrVjJSWFVraFBXR3haVW10d2MxZHRNVFJpUm10NlZXNUNhVTFxVm1wVmJUVkhaV3h3V0U1RlJtbGlWVm93VjJ4T1NrNHlUalppZWtaUVlWVndSVmxxU2pSa2JVNXdVMVJrYlZkRk1ESlVhMUpXVG10c2JsRnVaR2hUUlVwR1dXcEtUMDFYU2xoV2JsWnJVbnBzTlZkRldrdGlSbkIwWlVkNFdrMHhTbmRaYWtreFdURldTR0ZJWkZsU1ZUVjZWMVpvVDJWc2FETlJiWFJwVFdzMVJGbHJZelZoYlVZMVUxUmtWV0Z1VWpaVU1uQlNUVlU1Y0ZOVlJtcFNNbWd6Vld0ak5XRnRVbGhOVjNocFlteEtNbGt5ZURSVk1YQllWMjVPWVZZd05IZFpWbU0xWkZab1IxRnRPV3BTYm1oRldXdGtSMlZ0VFhoUFJVWmFWakJ3TmxwRmFFdGhSbXQ2VlZkc1VFMXJhekpVVlZJd1pXczVjVlZZYkZCaFZXeENXVEJrYjJReFNraFBWM0JyVm5wR2MxbHROVk5rYlU1elpVWk9ZVll4Y0hwWGJHUlBUVWRHV0U5WVZsbFNhMHAyV1RCYU5GSkhTa2hTYm5CcVRWUm9RbGR0TVhOa1ZteFlaREpzVUUxcmF6SlVWVkl3WldzNWNWVlljRkJoVld4Q1dUQmtiMlF4U2toUFYzQnJWbnBHYzFsdE5WTmtiVTV6WlVaT1lWWXhjSHBYYkdSUFRVZEdXRTlZVmxsU2EwcDJXVEJhTkZKSFNraFNibkJxVFZSb1Fsa3daRWRsVm5CWVRsUkNTbUZ1VWxGVU1uQk9aREE1Y0ZOdVpHaFRSVXBHV1dwS1QwMVhTbGhXYmxaclVucHNOVmRGV2t0aVJuQjBaVWQ0V2sweFNuZFpha2t4V1RGS2RWSnVjR0ZXZWxKd1ZESndTazV0VlhwVVZGcE9aVzFOTWxOWFpFTmtNa1pKVVd0V2FVMXJOSGhaYkdSWFpGZFNTRTlZYkZsU2EzQnpWMjB4TkdKR2EzcFZia0pwVFdwV2FsVnROVWRsYkhCWVRrVkdZV0pyV2paWGJHTXdZVlU0ZWxSVVdrNWhhMVV5VTFkNE5GSXhiRmhrUjNocVlraG9VbGt5TURWTmJVWllWVzE0YW1KSWFFVlpha28wWkcxT2NGTlVaR3BsYlRrMlZHMXdkbUZWUmtsUmJUbHFVbFpLTWxkVVRsZGtSbkJZVGxSQ2FVMHdjR3BXVnpGWFlsZEtTRlp0Y0d0U01uZ3lXVzE0TkZJeVRsbFViWGhwV2pCS01WZFdZM2hpUld4eFpFaHdVR0ZzVlRKVFYzUlBaRzFLU0U5WWJFcGhibEUxV1ROd2RrMUZOVFppTW14Q1UwVktkbGt3VmxOa2JHdDZWbTVTWVZaNlZYZFphazVMV1RGV2RGWnRNV2xTTVZweFdrVmtjMlJ0U25ObFJrWm9VMFZLYWxWVVNqUmhSMDE2VkcxYVFsSXllREJaTUdRMFlrZEtXRlp1Vm10VFJURndWSHBLUms1ck1VVmpSR1J0VjBVd01sUnJVbHBPYTJ4dVVXNWthRk5GU2taWmFrcFBUVmRLV0ZadVZtdFNlbXcxVjBWYVMySkdjSFJsUjNoYVRURktkMWxxU1RGWk1WWklZVWhrV1ZKVk5YcFhWbWhQWld4b00xRnRjR2xOYWxZMldrVmtSMlJYVWtsVVYyeFFUV3RWTWxSVlVuZE9NbHBaVkZSYVQxSkhUVEpUVjJSRFpESkdTVkZyVm1sTmF6UjRXV3hrVjJSWFVraFBXR3haVW10d2MxZHRNVFJpUm10NlZXNUNhVTFxVm1wV1ZXUnZaREZvUmxSdVRscFhSVFUyVjBoa1EyUXlUblJQV0dSaFYwVnZkMWxXWkZkbGEyeHhaRWRvVUdGcmF6SmFWRTVPVG1zMVJWVlVXa3BpU0doSVYxWmtNR0pIVG5ObFJrWnFZbFJyZVZsV1pGTmlSMDV6WlVSQ2FtSkViRlpXVjNnMFVrZEplV1ZJV21waGJUZ3lVMnRvVDJGR2NIUldhMUpwVFc1b01sa3ljekZoUjBwWVZtNXdTbUZ1VWxGVU1uQk9UVEE1Y0ZOdVpHaFRSVXBHV1dwS1QwMVhTbGhXYmxaclVucHNOVmRGV2t0aVJuQjBaVWQ0V2sweFNuZFpha2t4V1RGV1NHRklaRmxTYTBvMVdXcE9RMkpIVG5WVmFsWktZVzA0ZWxReU5UQmxhemx4VlZSQ1VHRlZiRUpaTUdSdlpERktTRTlYY0d0V2VrWnpXVzAxVTJSdFRuTmxSazVoVmpGd2VsZHNaRTlOUjBaWVQxaFdXVkpyU25aWk1GbzBWVmRPZEU5WVpHRlhSVzkzV2xaR1EySlhUbGxVYlhocFlWVnJNMVpJY0habGF6RkZZakpzYWxJeWFETlZhMk0xWVcxU1dFMVhlR2xpYkVveVdUSjRORlV4Y0ZoWGJrNWhWakEwZDFsV1l6VmtWbWhHVjI1b2FrMXNXakZUVjNCMlpWVTVkV1JJY0ZCaGF6QjZWREpzU2xGWFRraGhTR1JUVW5wc2NWcEdZM2hpUjBwMVZXNWFhbUpJYUZSWGJHUmhZekZ3V0ZScVFtaFdlbXd4VjBWV1lXVkhUWGxXYmxaQ1VqRndORmw2U2xka1ZXeHhaRWh3VUdGc1JYZFVNbXhMV1RGS2RGSnVTbUZYUlhCcVZsVm9TMlJ0VW5SaVIzUmhWMFZ3YWxwRmFFdGFiRnBIVTIxT1VrMXFiSHBaYWs1S1RtczVjRlZ1Y0ZwV01YQnpWVlJKTldNeVNYcFRhemxhVm5wR2Mxa3piRXBPTWs0MllqTndUMkZ0T1hCUlZXaERZakpPUmxWdVdscE5NVm93VjJ4ak1VMUhTWHBUYlU1V1lsWmFkRmxyWkZkaGJWSklZa2hhYVdKSWFFaFpNV2hQWWtkS2JsRnVWbHBXZWtaelUxZHdNR1ZyT1hGU1ZFSlFZVlZ3TmxkV1pHRmlSa1Y1VDFoT2FVMHdjRkJYVm1ONFlrZE9OVk5VWkcxWFJUQXlWR3RTYWs1cmJHNVJibVJvVTBWS1JsbHFTazlOVjBwWVZtNVdhMUo2YkRWWFJWcExZa1p3ZEdWSGVGcE5NVXAzV1dwSk1Wa3hWa2hoU0dSWlVtdEtOVmxxVGtOaVIwNTFWV3BXUWxJeFNqSlhWRUpMWXpKSmVWUnVTa3BoYmxKUlZESndUbVZyT1hCVGJtUm9VMFZLUmxscVNrOU5WMHBZVm01V2ExSjZiRFZYUlZwTFlrWndkR1ZIZUZwTk1VcDNXV3BKTVZreFNraFBWM0JTWWxob01sZFVTbnBoVlRseFdYcGFiRTB3TURKVWExSktUbXRzYmxGdVpHaFRSVXBHV1dwS1QwMVhTbGhXYmxaclVucHNOVmRGV2t0aVJuQjBaVWQ0V2sweFNuZFpha2t4V1RGS1NFOVhjRkppV0dneVYxUktlbEZYVFhwV2JsSnBWakJhTlZwV1RrcE9NazQyWWpOa1VHRlZiSEJVZWs1T1RtczFSVmRVV2twYU1Fb3pXVlZvUTFKWFNYbFVha1pwVmpGYU1WcEZZelZsVm1oSFUyMTRZV0pZYUhOWFZFNVRZMGRKZVU1WFRsTlNlbXh4VlZjeE5HUnNhM2xqTUVaaFVqRmFObGRVVGt0alIwNUpWVzVDYVUxcVVuQlVla0UwVG1zMVJWWlVXa3BpYTBwMldUQldVMlJzYTNwV2JsSmhWbnBWZDFscVRrdFpNVlowVm0weGFWSXhXbkZhUldSelpHMUtjMlZGVm1sTmF6VkVXV3RqTldGdFJYaGxSVlpoVjBVMWNWa3lNWE5rTWxKSVlraGFhV0ZWYXpKVVYzQjNUakpPTm1KNlJsQldSemx3VVZWb1EySXlUa1pWYmxwYVRURmFNRmRzWXpGTlIwbDZVMjFPVm1KV1duUlphMlJYWVcxU1NHSklXbWxpU0doR1dXcEtUMUV5U2toUFYzQm9UVmhvUmxkc2FFOWhiVTUwWWtoa2ExSXllREpaYldSRFlWZEplVlZxVmxkU01Wb3dXVEJrTkdGSFVraFdWMnhRVFRBd01sUlZVblpoVld4eFpFaHdVR0ZzVmpSVU1teEtVVmRPU0dGSVpGTlNlbXh4V2taamVHSkhTblZWYmxwcVlraG9WRmRzWkdGak1YQllWR3BDYUZaNmJERlhSVlpUWkd4cmQxTnVUbWxOYXpWNVYwVldVMkpIVFhsVWJteG9WMFZKZDFsV1l6VmtWVVpKVlcxb1lVMHdNWEJVZWtwR1Rtc3hSV05FWkcxWFJFWTJWREp3VGs1Vk9YQlRWVVpxVWpKb00xVnJZelZoYlZKWVRWZDRhV0pzU2pKWk1uZzBWVEZ3V0ZkdVRtRldNRFIzV1Zaak5XUldhRVpWYmxwYVRVVndlbGxxU2s5amEwWkpWVzFvWVUwd01YQlVla3BHVG1zeFZXTkVaR2hXUnprelZIcEJORTVyTlVWVVZGcEtZbXRLZGxrd1ZsTmtiR3Q2Vm01U1lWWjZWWGRaYWs1TFdURldkRlp0TVdsU01WcHhXa1ZrYzJSdFNuTmxSVlpwVFdzMVJGbHJZelZoYlVWNFpVWldXbFl5VWpaWFJWWTBZMGRLZEdNeWJGQmhhekF5V2xST1RrNXJOVFppTW14Q1VUSTVRbGx0TVVka1JuQlVVMVJrYW1WdE9IZFVNbXhMWXpKR1dFNVlTa3BoYmxJMlZESndVazVWT1hCVFZVWnFVakpvTTFWcll6VmhiVkpZVFZkNGFXSnNTakpaTW5nMFZURndXRmR1VG1GV01EUjNXVlpqTldSV2FFWlZibHBhVFVWd2VsbHFTazlqYkdoSFZXMW9ZVTB3TldwV1JXUnpaRmRHTTFGdVRtaFdlbFo1VTFkd01HVnJPWEZWVkVKUVlWVndkbHBGYUZOa01EbHdUMGhhYTFORmJERmFSRXB6WTIxR1dWRnRlR0ZTTW5odlZFY3dOV1ZXY0RWUFZFNW9Wak5TZDFSRVJrdGlSMHAwWkVoT1lWZEZjRzFaYTJSelpXMVNTRlp1Y0doVk1Hc3pXVE53ZG1WRk5VVmlNbXhDVVRJNVFsZHJaRmRsYkd0NlUyNUNhbE5HU25kWmFra3dZVlU0ZDA1RVpHMVhSRVkyVkRKd1VtVlZPWEJUVlVacVVqSm9NMVZyWXpWaGJWSllUVmQ0YVdKc1NqSlpNbmcwVlRGd1dGZHVUbUZXTURSM1dWWmpOV1JXYUVaVmJscGFUVVZ3ZWxscVNrOWphMFpJVkc1YWFXSnNTbk5hVldoU1lWVTRkMDlFV2s1bGJXTXlVMWMxUTJJeVRrWlZibHBhVFRGYU1GZHNZekZOUjBsNlUyMU9WbUpXV25SWmEyUlhZVzFTU0dKSVdtbGlTR2hXV2xab1EySkhUWGhsUlZKcFRXcFZkMWRzYUc5TlJXeHhZak5zVUdKdVVqWlVNbkJTVGxVNWNGTlZSbXBTTW1nelZXdGpOV0Z0VWxoTlYzaHBZbXhLTWxreWVEUlZNWEJZVjI1T1lWWXdOSGRaVm1NMVpGWm9SMVZxVm1wU01WbzJWMFZXVDJSdFNuVlZiWGhzVTBaR1FsbHRNVWRrUm5CWlZHNWtXbFl3TlhOVFYzQXdaV3M1Y1ZOWVpGQmhWWEJJVjFaa01HSkhUbk5sUmtacVlsUnJlVmxXWkZOaVIwNXpaVVJDYW1KRWJGWldWMnhLVGpKT05tSjZSazloYlRsd1VWVm9RMkl5VGtaVmJscGFUVEZhTUZkc1l6Rk5SMGw2VTIxT1ZtSldXblJaYTJSWFlXMVNTR0pJV21saVNHaFdXbFpvUTJKSFRYaGxSVkpwVFdwVmQxZHNhRzlOUlVaSVRsZG9hVll4V2paWk1HUkhZV3h3VmxKdVRtaFdNRm8yVjJ4b1RtRlZPSGxTVkZwT1VraEJNMXBzWjNobGF6bHhWVmh3VUdGVmJFSlpNR1J2WkRGS1NFOVhjR3RXZWtaeldXMDFVMlJ0VG5ObFJrNWhWakZ3ZWxkc1pFOU5SMFpZVDFoV1dWSldTakpYVkVKTFl6SkplVlJ1U2tKU00yZ3lWMVJLUjAxSFJsaFBXRlpLWVc1U1VWUXljRTVsYXpsd1UyNWthRk5GU2taWmFrcFBUVmRLV0ZadVZtdFNlbXcxVjBWYVMySkdjSFJsUjNoYVRURktkMWxxU1RGWk1WSklUMWR3V2xkR1NuZFpha2t3WVZVNWNWTlVXbXhOTURBeVZHdFNWazVyYkc1UmJtUm9VMFZLUmxscVNrOU5WMHBZVm01V2ExSjZiRFZYUlZwTFlrWndkR1ZIZUZwTk1VcDNXV3BKTVZreFVraFBWM0JhVjBaS2QxbHFTVEJSVjBwSVlraFdZVlpVVlhoWmJHUkxZa2RPY0ZOVVpHaFdSemg2VkhwT1RrNXJOVVZaZWxwS1dqQktNMWxWYUVOU1YwbDVWR3BHYVZZeFdqRmFSV00xWlZab1IxTnRlR0ZpV0doelYxUk9VMk5IU1hsT1YwNVZVbnBzY1ZkV2FGTmpSMGw1VGtWR1drMXFiSHBhUm1ONFpGWlNkVlp1VWxwaVZsbzFVMWR3TUdORk9YRlJWR1J0VjBVd01sUnNVa0pPYTJ4dVVXNWthRk5GU2taWmFrcFBUVmRLV0ZadVZtdFNlbXcxVjBWYVMySkdjSFJsUjNoYVRURktkMWxxU1RGWk1VcElUMWR3VW1KWWFESlhWRXA2VVZkR1dWUnNWbUZXZWtZeldXdGtSMDFHY0ZkVWFrSmFWMFZ2ZDFOWGNEQmhWVGx4VVZSa2FtVnRPSGRVTUZKMllWVkdTVkZ0T1dwU1Zrb3lWMVJPVjJSR2NGaE9WRUpwVFRCd2FsWlhNVmRpVjBwSVZtMXdhMUl5ZURKWmJYZzBVbGRKZVZSclRtbFNlbXh4V1Zoa1EyTkhUWGhWYlhocFYwVktlbGRXYUZOaVJrcFlUbGQwU21GdVVuQlVNbkJDVGpKYVdWUlVXazlTUmtVeVUxZGtRMlF5UmtsUmExWnBUV3MwZUZsc1pGZGtWMUpJVDFoc1dWSnJjSE5YYlRFMFlrWnJlbFZ1UW1sTmFsWnFWbFZrYjJReGFFZFJibXhwVFRCS2Mxa3lOVk5PVlVaSlZXcFdhbEl4V2paVFYzQXdZVVU1Y1ZGVVdteE5la1kyVkRKd1VrMXJPWEJUVlVacVVqSm9NMVZyWXpWaGJWSllUVmQ0YVdKc1NqSlpNbmcwVlRGd1dGZHVUbUZXTURSM1dWWmpOV1JXYUVkUmJUbHFVbTVvVWxreU1EVmtNWEJaVTJwQ2JGVlZTbkpYYkdSaFlVZFNXR1ZFUWtwaGJsSTJWREp3Ym1WRk9YQlRiV2hxWW10d2IxcFdUbTlsYlVaWllrZG9hRkV6Wkc1WlZHaFVaVWRPZEUwd1ZucFhTRXBHWXpGT00xb3lUWGxTYm13MFZFVldlbE5WWTNoaFIxSjBZVE5PU2xOR1NYaFpNalZYWkZacmVsWllUa3BUUjNoelpVWnZOV05IU2tSa01tUnBWbnBzTlZSRlRrTmlibU16WlVoU00wNHpjRWRpYm13eldqRnZlbE51UWsxUk1Fb3pWMnhqZUdGV2NGUmhNbXhRVFRBd01sUnJVbFpPYTJ4dVVXNWthRk5GU2taWmFrcFBUVmRLV0ZadVZtdFNlbXcxVjBWYVMySkdjSFJsUjNoYVRURktkMWxxU1RGWk1WWklZVWhrV1ZKclNqVlphazVEWWtkT2RWVnFWa0pUUlRSM1YxWm9VMk5HYkRWVFZHUmFZVzA1TkZSNlRrNU9helZGWVhwYVNsb3dTak5aVldoRFVsZEplVlJxUm1sV01Wb3hXa1ZqTldWV2FFZFRiWGhoWWxob2MxZFVUbE5qUjBsNVRsZE9WbEl5YUROWFJWcERaVmRKZWxGdGVHcGliRWt4VVZWb1lXTkhUWGxpUjJ4b1ZqTm9kMXBGYUhKaFZUaDNUMFJhVG1WdGN6SlRWelZEWWpKT1JsVnVXbHBOTVZvd1YyeGpNVTFIU1hwVGJVNVdZbFphZEZsclpGZGhiVkpJWWtoYWFXSklhRkpaVldoRFdURmFkR0pJY0doV01IQjNXV3RrYzAxSFZsUlRWRnBPVmtoQk0xa3pjSFpOVlRGVllqSnNRbE5GU25aWk1GWlRaR3hyZWxadVVtRldlbFYzV1dwT1Mxa3hWblJXYlRGcFVqRmFjVnBGWkhOa2JVcHpaVVpHYUZORlNtcFdiVEZ6WlcxR1dGTnVRbWxTTW5kM1dsWkdRMDF0UmxsVWJrSmFZbGQ0ZWxsV2FGTk9WV3h4WkVod1VHRnRjekpUVnpWRFpWZEplbFZ0ZUZwTk1VcHpWMnRPU2s0eVdsbFVWRnBQVWtkTk1sTlhaRU5rTWtaSlVXdFdhVTFyTkhoWmJHUlhaRmRTU0U5WWJGbFNhM0J6VjIweE5HSkdhM3BWYmtKcFRXcFdhbFpWWkc5a01XaEhVVzVzYVUwd1NuTlpNalZUVGxWR1NHVklXbHBOYTFsM1dWWmpOV1JWYkhGa1JrSlFZV3N4TmxReWJFdGtNa1pKVVd0V2FVMXJOSGhaYkdSWFpGZFNTRTlZYkZsU2EzQnpWMjB4TkdKR2EzcFZia0pwVFdwV2FsWkZZelZoYkd4WlZXNUNhVTFxVW5CVU1uQktUbTFWZWxSVVdrOVNSbFV5VTFka1EyUXlSa2xSYTFacFRXczBlRmxzWkZka1YxSklUMWhzV1ZKcmNITlhiVEUwWWtacmVsVnVRbWxOYWxacVZrVmpOV0ZzYkZsVmJrSnBUV3BTUWxsclpITmtWbkJXVGxSR2FWWXdjSE5aTW14S1RqSkdWV0l6YUU1U1NGSTJWREp3VWswd09YQlRWVVpxVWpKb00xVnJZelZoYlZKWVRWZDRhV0pzU2pKWk1uZzBWVEZ3V0ZkdVRtRldNRFIzV1Zaak5XUldhRVpsU0ZwYVRXdFpkMWxXWXpWa1ZVWklWRzVhYVZOR1dqQlpiWE14VFZkS1dGTnRlR3BoVldzeldWWlNkbVF3T0hwTlZHeHFaVzA0ZDFSWWNIWmhWbWhHVjIxb2FFMXNXalZYUlZwRFpWZEplbGR1UW1GU01WbzFWMFZvVTJWV1ozaFZiRTVaVWxVMU1sbHJZelZsVlRseFlqSjBXbFl6YUhwVlZFazFZekpKZWxOck9WcFdla1p6V1ROc1NrNHhValppTTNCUFpXMDVjRmt3Wkc5a01VcElUMWR3YTFaNlJuTlpiVFZUWkcxT2MyVkdUbUZXTVhCNlYyeGtUMDFIUmxoUFdGWlpVbXRLZGxrd1dqUlZWMDUwVDFoa1lWZEZiM2RhVms1S1RtczFObU5FWkdwbGJUaDNWR3RTZG1GVlJrbFJiVGxxVWxaS01sZFVUbGRrUm5CWVRsUkNhVTB3Y0dwV1Z6RlhZbGRLU0ZadGNHdFNNbmd5V1cxNE5GVlhSa2xSYlU1V1UwVndNbGt3WkZkbFYxSkpZVEJHWVdKcldqWlhiR013WVZVNGQwOUVXazVsYTBVeVUxYzFRMkl5VGtaVmJscGFUVEZhTUZkc1l6Rk5SMGw2VTIxT1ZtSldXblJaYTJSWFlXMVNTR0pJV21saVNHaElXVEZvVDJKSFNuQlRWRnBPWVc1Qk0xa3pjSFpsYXpVMllqSnNRbE5GU25aWk1GWlRaR3hyZWxadVVtRldlbFYzV1dwT1Mxa3hWblJXYlRGcFVqRmFjVnBGWkhOa2JVcHpaVVZrYWxkRk5YTlpiV1JEWWxkT1dWUnRlR2xoVldzeldUTndkazFGTVRaaU1teFpVbFp3YjFsVVNsZGxWbWhIVVc1c2FVMHhjSGRYYTJSWFpWWm9TVlZ1YkZsTlZrcFVWMFZXVDJSdFNraFBXR3hRWVcwNWNsZFdaRFJqTVVWNVQxaE9hVTB3Y0ZCWFZtTjRZa2RPTlZOVVpHcGxiVGsyVkcxd2RtRlZSa2xSYlRscVVsWktNbGRVVGxka1JuQllUbFJDYVUwd2NHcFdWekZYWWxkS1NGWnRjR3RTTW5neVdXMTRORkl5VGxsVWJYaHBXakJLTVZkV1kzaGlSV3h4WkVod1VHRnJWalpVTW14TFlVZEtTR1ZGVW1sTmJtZ3lXVEp6TVdGSFNsaFdibkJLWVc1Uk5Wa3pjSFpOUlRVMllqSnNRbE5GU25aWk1GWlRaR3hyZWxadVVtRldlbFYzV1dwT1Mxa3hWblJXYlRGcFVqRmFjVnBGWkhOa2JVcHpaVVpHYUZORlNtcFdWV2hMWkcxT1NGWnViR3RUUjNSQ1YydGpOV0ZzUm5SbFNGcGFUVzVPY0ZSNlFUQk9NazQyWW5wQ1QxSkhPWEJSVldoRFlqSk9SbFZ1V2xwTk1Wb3dWMnhqTVUxSFNYcFRiVTVXWWxaYWRGbHJaRmRoYlZKSVlraGFhV0pJYUZKWlZXaERXVEZXU1ZOdVdtcFNNVm8xV2tWb2NsRlhVa2xpU0dSaFYwVXhjRlI2U2taT2F6RkZZMFJrYlZkRk1ESlVhMUphVG10c2JsRnVaR2hUUlVwR1dXcEtUMDFYU2xoV2JsWnJVbnBzTlZkRldrdGlSbkIwWlVkNFdrMHhTbmRaYWtreFdURldTR0ZJWkZsU2EwbzFXV3BPUTJKSFRuVlZhbFpDVWpGS2MxZHRNVWROVjBwSlZWZHNVRTB3TURKVVYzQmFUbFV4Y1dJeWJGcFhSWEExVjFab2NtSXhSbGhsUjNocllWVktlV1ZGZUVkbFYwcHFWVE5vYkdNeFRqUlplbWhVWlVWNFJGRnJTbWxTTW5oeFYyeE9RMlJHYkZsWGJrSnFUVzEwZWxOVlZrZGpNa1paWTBkb2FtSlhlREZVUlU1RFVXMUtTVlZxUm1sak1Ea3hWRVZPUTFGdFNsaFdha0pvVjBVMGQxUkZUa05SYlU1MFRWUkdhMUV6Wkc1VlZtUXdUVlpzV0UxWGFHcGlWM2d4VkVWT1ExRnRUWGxrUjNocVlWVkpNVmR0VGxoYWJVWllaVWhDVFZFd1NrUlhWbVF5VWxoT1dWTllUa3BTVlhCdldUSTFWMDFGZUVSUmEwNWFWMFpLYjFsVVNqWlNXRTVZWXpKa2JGWXhhRWRpYWtwell6SkdWR1F5WkZKaVZscHdWMnhrZWxveVNsaFNha3BvVjBVMWQxUkZUa05STVhCWVlqTk9TbEpWY0hOYVZtUkhUbXQ0UkZGclRtbE5hbFp5V1ZaT1EyUkdiRmxYYmtKcVRXMTBlbE5WVmt0a2JVNTBWVzVhVFZFd1NrUlpNakExWkZkV2NHUXlaRkppYkdoR1ltcEtVMkZIVmxSa01tUlNZbXhhTlZkcVNUVmtWMVpZVWxoT1NsSlZOVzlaYkdSdFVraFNkRk50ZURSVGFteDNWRVZPUlZKSFozbFNibEpLVTBkNGMyVkdielZqUjBwSVlUTk9TbFJWT1VsWFZtaHlXakpXV0ZkRlduVk5iWGg2V1ZaT00xb3pZekJhUjNocFVqSjRlVk5WWTNoaFIxSjBZa2h3YUZVelpHNWtlbEpyWTBkRmVVOVlUbHBYUmtwdlZFVk9SVkpIWjNsaVJFcG9WMFpHZWxOVlZsTmlSMHAwWWtSYVNsSjZSbTlhUnpGelpXMUdWR1F5WkZOU01Wb3hXVlpvZGxveVZsaFhSVnAxVFcxNGVsbFdUak5hTVVwSVZtcEtZVll4U25kWlZFcFhaRmRHVkdReVpGTlpNVTV0V1RJeFYyTXlVa2hoTW1Sc1ZqRm9SMkpxU25Oak1rWlVaREprVTFZemFITlpWRTVUWlZkR1dHTXlaR2xXTUZsNVdWWm9UMk5GZUVSUmExcHBVakZhZVZwRmFFdGpSMFkxVWtWU2QwMXRkM2xaVm1oU1l6QnNSbFp1VG1GV00xRjNXVEl4YzJOcmJFaGxTRUpwVmpGV2VsTlZWbGRqTVhCWVpFUkNhbUpYZUhsVFZXTjRaRzFPY0dReVpGTmlWVnA2V2taT1EyTnVhRTFTYm14cFdURk9ORnBZVGxSbFIwMDBWVE5vVFZFd1NraFpWbVEwWVRKR2FsWXlXbWhWTTJSdVZXMDFTMkZIU25WVlJWWjZWMGM1YmxkcWFGQlBSMHBFWkRKa1UwMXJXbnBaVm1STFlVZE9kRlZ0YUUxUk1FcEpWMnhrVDJKRmJFaE5WMmhyWWxkNE5sbFdUak5hTVVrMFZIcEthR1ZWU2pCWFZtaGhZMGROZVdFelRrcFNWMUkxV1ZaT00xb3hTWHBUYmtKTlZqTlJlR1ZHYnpWamJVbDVUbGhTV2xkSE9YcFRWVlp0VWtoYVNHUXpUa3BTVjFwRlpHdGplbEpJV2s1V01scG9WVE5rYmxVd1pFZGpiVVpVWkRKa1ZGSXdXalZYYTJSSFl6QjRSRkZyYkZwWFJtOTRaSHBhYW1Nd2JFWmhTRnBxWWxSck1sbFdaRXRqU0doTFQxaENUVkV3VWtaak1HUTBZMnhzZEZKdE9WcFhSV3h1V2xaa1dWSnROSGxpU0U1b1ZUTmtibVZGZUVObGJVcElVbTVTU2xOSGVITmxSbTgxWTBkS1NHRXpUa3BTV0ZKdlYxY3hSMk5yZUVSUmEzaGFWakpuZVZkc2FFdGlSMHAwV2toQ1RWRXdTazFYVm1SdlRXeHdXVk50ZUdsaVYxSjNXV3hvVDJORmJFaGFTR3hvVlROa2JsVjZTa2RrUjFKWVYyNU9NMDVyY0hoVFZXaHpZa2hvWVU5WVFtbFNNblI2VTFWV01HRkhUblJTYmxaaFlsZDRlbE5WYUVOaVIwcFlVMjE0YWsxdGRIcFRWVll3WVVkT2RGSnVWbUZpVjNoNlZFVk9RMVJHYkZsVGJYUm9WbnBXYjFsclRqTmFNVTE1VW01c2FVMXVhSGRaYlRGR1dqSktXRkpxU21oWFJUVjNWRVZPUTFSR2JGbGlhMVo2VjBaQ1JtTXhUak5hTVUxNVZtMDVhbUpYZUhCWFZtaEtZekJzUm1SSGVHcE5NVXB2V1cweFZtTXdiRVprUjNoclVqRmFNVlJGVGtOVVNHaE5VbTVzYVZreFRqUmFXRTVVWlVWNFJGRnJlRFJVUlZvMVdXMU9WR1ZIVm5wVk0yaHBWMFpDUm1NeFRrTmpiR3hZWVVSS1lWZEZjSE5aYlRGclkwVjRSRkZyZURSVVJWbzFXVzFPVkdWSFZucFZNMmhOVm5wR2MxbHRNVmRqYm1oaFQxZDRUVkV3U2sxWlZtaExZVWRXY0ZGdVNqUlVSVm8xV1cxT1ZHVkhWbnBWTTJocVQwWk9ORlJGVGtOVVIwbDVVMjFvYVZOR1JucFRWVll3Wkd4c2RGSnVUbXRSTUVvd1YxWm9ZV05IVFhsaE0wNUtVbGhTTWxwV2FGWmFNVzk1VW01T2FGWXdjRzlaTWpGVFlVVjRSRkZyZUdsTk1uZDRVMVZrYjJGSFJYbGhNMDVLVWxoU01scFdhRlphTWtWNVVtMDVhMkpXV2pWWGJHTXhZbTFHVkdReVpGUk5hbXN4V2taT1EyTnNjRmxVYWtKYVZucFdjMVJGVGtOVVIwbDZZa1JHU2xJeldrWmpNV2hMWkVob1RWSnFXalJVUlZaNlUxVldNR1J0VmxsV1YyUm9UMFpPTkZwWVRsUmxSMHBFVVc1S1dsWXlaM2xYYkdoTFlrZEtkRnBJUWsxUk1FcE5XV3BPYzAxVmJFaGxSM2hzVmpOb2IxbFliRE5hTVUxNVQxUldhMVV3U2pCWFZtUnJZa2RLZFZWdGFFMVJNRXBOV1dwT2MwMVZiRWhOVjJocFlsWktiMWxyWkhOa1ZteFVaREprVkUxcWF6RmFSazVEWkVac1dWZHVRazFSTUVwTldXcE9jMDFWYkVoTlYzaHBZbFphZVdWR2J6VmlSWGhFVVd0NGFVMHlkM2hUVldONFlrZE9kRlJ0YUdsaFdHUnVWWHBKTlU1WFVsUlJibEpwVFRCc2VsTlZWakJrYlZaWlZsZGthbEl3V2paYVJXUlhZekJzU1dKSGVEUlhhbXgzV1d0T00xb3hUWGxQVkZaclZUQktNMWRzWTNoaFZuQlVaREprVkUxcWF6RmFSazVGVW0wMGVWWnRNV3RTTUZwNldWWk9NMW94VFhsUFZGWnJWVEJKZDFwR2FFdGpiVkpZVW1wYVRWRXdTazFaYWs1elRWVnNTVlZ1V214aFZVb3dWMVpvWVdORmVFUlJhM2hwVFRKM2VGTlZhRk5OVjA1MFpFUkdXbGRIT1hwVFZWWXdaRzFXV1ZaWFpHeFdNV2hIWW1wS2MyTXdlRVJSYTNnelRqRndObGRzWkRSaVJYaEVVV3Q0YW1KV1dqQlVSVTVEVkVkU1dFMUhaR2hOYTFwMldrY3hWMlZXY0ZoT1Z6Vm9WMFUxZDFSRlRrTlVSMUpxVmpKYWFFMXFiREZaYkdSSFRtdDRSRkZyTVZwV01EVjNXa2N4VjJWWFVrUmtNbVJWVWpCYWNWbFdhR0ZpUjA1MVZWaE9TbEpZYUc5YVJ6RkhaRmRTU0ZKWVRrcFNXR2h2V2tjeFIyUlhVa2hTVjJScFZqQlplVmxXYUU5alJYaEVVV3N4V2xkR2NITlpiVEZUWWtkT2NGRnVaR0ZXZWtad1YyeG9UMk5GZUVSUmF6RmFWMFp3YzFsdE1WTmlSMDV3VVcwMWFtSldXbmRaZWtweVl6QnNSbVZIYUd0aVZsb3hWMnRrVjJWVmJFaE5WMmhoVFd4YU1WcEZaRVpqTUd4R1pVZG9hMkpWV2pGYVJXUkdXakpPU0ZadVVscGlWbG8yV1ZaT00xb3hVa2hTYWtwYVZucFZkMWRXVGtOa1IwbDZVMWhPU2xKWWFHOWFSekZIWkZkU1NGSlhaR0ZQUlRnMFdXdE9NMW94VWtoaVNGSnBUV3BXZDFSRlRrTlJibU15V210V2VsWXpUbTVXUldSelpFZEplVTVJVGtwU1dHaHpXbFprTkdGSFJqVmtNbVJWVWpKNE1GZHNUak5hTVZKWVVtNVdZVkl3V25wWlZtTXhZVVY0UkZGck5WcFdNMmh2V1ZSS2MwMUZlRVJSYXpWYVYwWndkMVJGVGtOVWJIQllUbGQ0YUU5R1pHMVhiRTR6V2pGU1dGWnVWbUZXTTFwSFltcEtWbVJIVGtoU2FrSnBWRlpPTkZkVVNrZGtWWGhFVVdzMU5GUkZXalpsUlhoSFpWVjRSRkZyTldsTk1HeDZVMVZWZUdSdFRuVlViV2hwVWpOYVJtTXhZM2RqTUd4R1RsZG9hV0pXVm01YVZtUlpVbTAwZVdKSVRtaFZNMlJ1VmtjeFIyVlZlRVJSYXpsYVYwWndiMWxYTURSYU1XeDBWbXBXV2xkSVNrWmpNVTR6V2pGUmVXUkVSbWxSTUVveVdrVmpOV0ZZWXpObFNIQXpUak5rYmxsNlNrZGxXR2hOVW01d05GUkZWbnBUVlZwRFlVZE9kR1ZIYUdobFZVb3dXV3BPU21Nd2JFZFJiV2hxWlZoa2JsWlZaRWRsYlZKSVZtNU9TbE5GU25OWmJHUkxZa1Y0UkZGc1JscFhSVFIzVjJ4a00xb3lWbGhYUlZwMVRXMTRlbGxXVGpOYU1WWklVbXBDYVZSV1RqUlhWRXBIWkZWNFJGRnNSbUZXZWtad1YyeE9NMW94VmtoV2JsSmFZbFpXTUZwRmFGZGxWMUpZVGxkd2ExVXpaRzVXVldSWFRsWnZlVkp1VWxwaVZsbzFVMVV4VUdKdFJtcFVNalZoV1RGT2JWbFdUak5hTVZaSlUycEdhazB5ZUc5VFZXTjRZVWRTZEdKSWNHaFZNMlJ1VmxSS1IySlhUblJTYmxaTlVUQktWVmRXWkdGalIwNXdaREprVmsxcldqVmxSWGhIWkVkTk5GVXphRXBTTTFKdldWVm9ZV0pIVG5SV2JsWmhUVzEwZWxOVldrOWhSMDU2VlROb2FWZEdRa1pqTVU1RFpERndXRTFYYkdGVk0yUnVWbFJLUjJWWWFFMVNXRTVLVW1zMWIxa3pUbFJsUlhoRVVXeFNhRmRIZUc5WlZURlVaVWRLV1ZWRlZucFZNRXA1V1dwT2MwMVZiRWhrUjJob1UwWndjMWt5TVZka1ZtOTVZVE5PU2xKck5USlphMmhYWTJ0c1NWUnRhR3BqTVU0MFZFVk9SVkp0TlhSV2JURnJVakJhZWxsV1RqTmFNMmhoVGxkNFlXSnNTbTlaYTJSeVpFZFNTVlp1Ykd0V2VsWnhXa1pPTTFvemFHRk9WM2hoWW14S2IxbHJaSEprUjAxNVVtNXNORlJGVm5wVFZWcFRZVWRPZWxReU5UUlVSVm94VkVWT1ExWldjRmhTYms1TlVUQktWbGxxVG5aYU1rcFlVbXBLYUZVelpHNVdhMmhYWlZkRmVsWnRhR3hoV0dSdVZtdG9WMlZYVWxoT1YzQnJWbnBHTmxwR1RrTmxiR3haVkVWV2VsVXpaRzVXYTJoWFpWZFNXRTVYY0d0Vk0yUnVWbXRvVjJWWFVsaE9WM0JyVm5wR05scEdUa05sYkd4WlZFVldlbFV6Wkc1V01XUlpVbTAwZVdKSVRrMVJNRXBoVjIxT1dGcHRSbGhrTTFKcVRXdGFOV1ZGZUVaak1HeEhZa2hhYVdKVk5XOVRWV2h6WWtob1lVOVlRbWxTTW5SNlUxVmFjMlJ0VFhwV2JsWktVMGQ0YzJWR2J6VmpSMHBJWVROT1NsSnVRbk5hVm1oVFRWZEtkR0V6VGtwU2JrcEZaR3RqZUdWWVl6TmxSRUpLVTBkNGMyVkdielZqUjBwSVlUTk9TbEp0ZUc5WmJrNVVaVWRHTlZGcVFtdFhSVzk0V1cweFQwMVZlRVJSYkhCYVZucGtSbU14WkhwYU1WcElUMWhrYW1KVldubFVSVTVEVkVac1dWTnRkR2hXZWxadldXdE9NMW96YUdGT1YyaHFZbFZhTTFSRlRrTlNSbkJZWlVkb1lWSjZiREZVUlU1RFVURndXVk51YkZwV00wNXVXV3hrUjAxdFJsUmtNbVJUVDBVNGVWbFliRU5rUm14WlYyNUNhazF0ZEhwVFZWWnRVa2hhU0dRelRrcFNWRVp6V1RJeFQyRkhTbkJrTW1SVlZqRmFOVmRVU2tka1ZXeEdaR3RXZWxkRmNEQmxSWGhIVG01b1RWSnVjRFJVUlZaNlUxVldNbEpZVGxsUmJrbzBWRVZhTlZsdFRsUmxSMVo2VlROb1RWRXdTa3BaVm1RMFlrVnNTRTFYYUd0aVYzZzJXVlpPTTFveFJsaGxSRUkwVkVWYU1XVkZlRWRrUjAwMFZUTm9UVkV3U2xWWmFrNXpUVVpzV1ZSRlZucFZNMlJ1VmxSS2RWSlhOSGxpU0U1S1VucHJkMXBHVGpOYU1VNUlUMWhPYUZkR2NESlhhMDVEWTI1b1RWSnViR2xaTVU0MFdsaE9WR1ZIVFRSVk0yaE5VVEJLVldWRmVFZGhiR3hZWXpKa1ZWWXdXblZYYkdNeFRVWnNWR1F5WkZaUFJrNDBWMVJLUjJOcmJFbFJiWGhwVmpCd2MxUkZUa05XYlVwSlZtNXdhVkl3V2pWWFZtaExZVWROTkZVemFFcFNXRko2VjJ4a2MyUlZiRWhOVjJocllsZDRObGxXVGpOYU1VcFlUbFJDWVZkRmNERlhWbWhQVGxkSmVVNVhhR2xSTUVsM1drWm9TMDFYU25SVWFrWk5VVEJLWVZkdFRsaGFiVVpZVFVoT1NsSlViRFZhUldSR1dqTm9ZVTlYYUdwaVZWb3pWRVZPUTFWSFRuVlZiV2hLVWxSR01sa3liRE5hTVVwSVUwVldkV1ZWU2pOWGJHTjRZVlp3V1ZSdVFrMVJNRXBEWlVadmRsSllUbFJSYld4cFRUSjRiMWw2YUZSbFJYaEVVV3RhYWsxdVVuZFRWV1JIWXpKU1RsVXphR2xoV0dSdVZXeG9UMk50UmxSUmJrSnFVak5vZDFsWWJETmFNVXBaVkc1S2FGVXdTazVYVm1oaFlVZEtkVlZ0YUUxUk1FcEhXWHBLTUdORmJFaGFhMUl5VWpOa2VsTlZXbmRpUjFaWlZXNUNhV0ZWU2sxWFZtUnZUV3h3V1ZOdGVHbGlWMUozV1hwS2NtTXdiRVpWYmxwcFlteGFlVk5WYUZOTlYwNTFWbTVXV2sweFZucFRWVnBEWVVkT1NGSnFWbHBWTTJSdVZsVmtWMlZYUmxsYVNFSnBZbGhTZWxkc1RqTmFNVlpJVm01c2FtVlZTakJYVm1oaFkwZE5lV0V6VGtwU2EwcHpXVEkxVGxveVZsaFhSVnAxVFcxNGVsbFdUak5hTVZaSVZtNXNhazF0ZUc5WmJXeERZekZzV0ZSdVFtdGlWbG8xV2tWT00xb3hWa2hXYm14cVpWVktNMWRzWTNoaFZuQlpWRzVDVFZFd1NsSlhiR2hMWlcxR1dGSnVWa3BTTTFwR1l6Rm9TMlJJYUUxU2FsbzBWRVZhTm1WRmVFWmpNR3hIVVcxNGFtSnJNVzVYYW1oUVQwZEtUbFI2YUUxUk1FcEtWMVpqZDFveVVraFBXR1JxWWxWYWVWUkZUa05VU0doTlVtcGFORlJGV25wVFZXaHpUVmRLV1ZadWJHdFNNRlp1V1d4a1IwMXRSbGxVYmtKTlVUQktUVmt5TVVkak1rWlpZa2Q0YTFFd1NqQlhWbWhoWTBkTmVXRXpUa3BTV0ZwR1l6Rm9TMlJJYUUxU2FsbzBWRVZXYm1WR2J6VmhSMDUwVW01a1RWRXdTazFsUlhoSFpWZEthbFV6YUd4ak1VNDBWRVZPUTFKV2NGaE9XRUpzWVZWS2VWZFdaRXROV0doTFQxUkdUVkV3U2tOYVZtaE5VbGhPV0dNeVpHcE5hMW8xWlVWNFJtTXdiRWRYYWtacVlsZFJlRmx0YkVOa01YQllUVmRzWVZVelpHNVdWRXBIWXpGc1dFMVVSbXBpVlZadVYycE9TMk5IVFhsaE0wNUtVbXhLYzFsdE1ETlNTRVpVVVZjNVYxSXdXWHBaYlRWeVkwVjRSRkZyZUROT00zQkZZMFJvVUU5SFJqVlJia3BhVjBWd2IxUkZUa05VVm14WVZHNUNhMkpXV2pWYVJVNHpXakZhZEdKSWJHaFdNVXAzVjFaak1HTXdiRWRqU0VKcFlsUlZlbGRXWkRSaE1rWlpWVzE0VEZVd2F6TlpNM0IyVFVVMVZXSXliRUpUUlVwMldUQldVMlJzYTNwV2JsSmhWbnBWZDFscVRrdFpNVlowVm0weGFWSXhXbkZhUldSelpHMUtjMlZHUm1oVFJVcHFWbFZvUzJSdFRraFdibXhyVTBkMFFsbDZUbE5oUjFKSVlrZHdTbUZ1VW5CVU1uQkdUakpPTm1KNlFsQldSemx3VVZWb1EySXlUa1pWYmxwYVRURmFNRmRzWXpGTlIwbDZVMjFPVm1KV1duUlphMlJYWVcxU1NHSklXbWxpU0doU1dWVm9RMWt4VmtsVGJscHFVakZhTlZwRmFISlJWMUowWWtod2FGWXdjSGRaYTJSelRVZFdWRk5VWkZWbGJUazJWREZTZG1GWFRraGhTR1JUVW5wc2NWcEdZM2hpUjBwMVZXNWFhbUpJYUZSWGJHUmhZekZ3V0ZScVFtaFdlbXd4VjBWYVEySXlUa2RsUm1Sb1YwVTFkMWRYTVhOak1rWlpWV3BXU21GdE9UUlVNalV3WldzNWNWWllhRkJoVld4Q1dUQmtiMlF4U2toUFYzQnJWbnBHYzFsdE5WTmtiVTV6WlVaT1lWWXhjSHBYYkdSUFRVZEdXRTlZVmxsU2EwcDJXVEJhTkZZeVJsbFVia0phWWxkNGVsbFdhRk5PVlVaSlYyNUNhazF0ZUhCWlZtUTBZMGRTU1dFeWJGQk5NREF5VkRGU2RtRlhUa2xUYmxwclVqRmFjVnBGWkZkaE1HeHhaRVJzYW1WdE9IZFVibkIyWVZWR1NWRnRPV3BTVmtveVYxUk9WMlJHY0ZoT1ZFSnBUVEJ3YWxaWE1WZGlWMHBJVm0xd2ExSXllREpaYlhnMFZWZEdTVkZ0VGxaVFJYQXlXVEJrVjJWWFVrbGhNRVpwVW5wc2NWZFdhRk5qUjBsNVRrZHNVRTFFWnpKVVdIQk9UbXRzZFZGdE9XcFNWa295VjFST1YyUkdjRmhPVkVKcFRUQndhbFpYTVZkaVYwcElWbTF3YTFJeWVESlpiWGcwVkZkSmVWUnRhR3RTTW5neVdXMXNTazVyTVhGalJHUnFaVzA0ZDFSc1VuWmhWVVpKVVcwNWFsSldTakpYVkU1WFpFWndXRTVVUW1sTk1IQnFWbGN4VjJKWFNraFdiWEJyVWpKNE1sbHRlRFJVVjBsNVZHMW9hMUl5ZURKWmJXUkRZekpHV0U1WGVGVmliRm93VjFjeFYyVlZiSEZrU0VKUVlXdFZlRlI2VGs1T2F6VkZXWHBhU2xvd1NqTlpWV2hEVWxkSmVWUnFSbWxXTVZveFdrVmpOV1ZXYUVkVGJYaGhZbGhvYzFkVVRsTmpSMGw1VGxkT1ZWSjZiSEZYVm1oVFkwZEplVTVGUmxwTmFteDZXa1pqZUdSV1VuVldibEphWWxaYU5WTlhjREJqUlRseFVWUmtiVmRFUlRWWk0zQjJUVVUxUldJeWJFSlRSVXAyV1RCV1UyUnNhM3BXYmxKaFZucFZkMWxxVGt0Wk1WWjBWbTB4YVZJeFduRmFSV1J6WkcxS2MyVkdSbWhUUlVwcVZWUktOR0ZIVFhwVWJWcENVbnBHYzFwRlpHOWtiSEJKVkZkc1VFMXJWVEpVVlZKM1RqSmFXVlJVV2s5U1IwMHlVMWRrUTJReVJrbFJhMVpwVFdzMGVGbHNaRmRrVjFKSVQxaHNXVkpyY0hOWGJURTBZa1pyZWxWdVFtbE5hbFpxVmxWa2IyUXhhRVpVYms1YVYwVTFObGRJWkVOTlYwMTVWbTEwVjFORmNHOVpWbWhUWld0c2NXUkhhRkJoYTBVeVdsUk5lR1ZyT1hGVlZFWlFZVlZzUWxrd1pHOWtNVXBJVDFkd2ExWjZSbk5aYlRWVFpHMU9jMlZHVG1GV01YQjZWMnhrVDAxSFJsaFBXRlpaVW10S2Rsa3dXalJTUjBwSVVtNXdhazFVYUVKWmEyTTFZV3hzV1ZWdVFtbE5hbEp3VkhwQk5FNXJNVFpVVkZwS1ltdEtkbGt3VmxOa2JHdDZWbTVTWVZaNlZYZFphazVMV1RGV2RGWnRNV2xTTVZweFdrVmtjMlJ0U25ObFJURnBUV3MxYjFwRlpITmtiVXB3VTFSYVRtRnVRVE5aTTNCMlRVVTFWV0l5YkVKVFJVcDJXVEJXVTJSc2EzcFdibEpoVm5wVmQxbHFUa3RaTVZaMFZtMHhhVkl4V25GYVJXUnpaRzFLYzJWRk1XbE5helZ2V2tWa2MyUnRTbTVSYms1b1ZucFdjMVpITlZka1JteDBWbTVzU21GdVVuZFVNbkJXVGpKT05tSjZRazlsYlRsd1VWVm9RMkl5VGtaVmJscGFUVEZhTUZkc1l6Rk5SMGw2VTIxT1ZtSldXblJaYTJSWFlXMVNTR0pJV21saVNHaE9XV3BLVDJGSFVraGlTRnBwV2pCS2NWbHFTalJOVjBwWVRsVTVhMVo2Um5CWGJHaEtZVlU0ZVdGNldrNVNTRkUxV214bmVHVnJPWEZWVkVaUVlWVnNRbGt3Wkc5a01VcElUMWR3YTFaNlJuTlpiVFZUWkcxT2MyVkdUbUZXTVhCNlYyeGtUMDFIUmxoUFdGWlpVbXRLZGxrd1dqUlNNa1pZWlVkNFFsSXllREZhUldSWFpWWndkRkp0Y0dGWFJURndWSHBLUms1ck1VVmpSR1J0VjBVd01sUnJVa1pPYTJ4dVVXNWthRk5GU2taWmFrcFBUVmRLV0ZadVZtdFNlbXcxVjBWYVMySkdjSFJsUjNoYVRURktkMWxxU1RGWk1WWklZVWhrV1ZKV2NIZFphMlJXVVZkU1NWTnRhR2hYUmtvMlUxZHdNR0ZGT1hGUlZGcHNUWHBGTlVwNWEzQlBkMjlMVEhsdloxRXlhSEJpUjFGblZraHNkMXBVYjJkaFZ6VXdXbGRrYkdOcFFYRk1kMjlyV2tkR01GbFdjMjVaTTBwc1dWaFNiRnBGT1hWS01UQm5VRk5CZUU1VVNUSlBWR04zVFdwak0wOTNiMmxQTTAwMlRrUlZOa2xuUW5kaFNFSkZZakpPTVdKWFZuVmtSemw1V0VaS2JGcHRlR3haTTFKd1lqSTFZMVZIYUhkWVJWcHdZa2RWUVdKdFJuUmFXRTUzV1ZkT2JHTjVTVGRaVkc5M1QyNTBPV042YnpCTmVtOXBRVWhDYjJORlVuWlpNMVowV2xjMU1HSXpTbU5WYlZadFlrZFdhbVJIYkhaaWJIaFJZVWhDWTFKdGJITmFVVUp3WW0xT2MyUlhVbXhqZVVrM1dWUnZkMDl1ZERsamVtOHdUa1J2YVVGSVFtOWpSVkoyV1ROV2RGcFhOVEJpTTBwalZXMVdiV0pIVm1wa1IyeDJZbXg0VVdGSVFtTlNiV3h6V2xGQ2JXUlhOV3BrUjJ4MlltNU5hVTh5UlRaTlJIQTNabGhOTms1RVVUWkpaMEozWVVoQ1JXSXlUakZpVjFaMVpFYzVlVmhHU214YWJYaHNXVE5TY0dJeU5XTlZSMmgzV0VWYWNHSkhWVUZaTWpsMVl6TlNhR0p1VW5wSmFuUm9UMnBCTm1Vek1YcFBhbEY1VDJsSlFXTkhhSGRTUnpscVpGY3hiR0p1VW5aamJIaFRXbGRhYzFwWFRqQmhWemwxV0VaQ2IyTkdlRWRoVjNoc1FVZE9jMWxZVG5wYVdFMXBUekpGTmsxRWNEZG1XRTAyVGtSVk5rbG5RbmRoU0VKRllqSk9NV0pYVm5Wa1J6bDVXRVpLYkZwdGVHeFpNMUp3WWpJMVkxVkhhSGRZUlZwd1lrZFZRV0ZYTlRCYVdFcHRXVmRPYkdONVNUZFpWRzkzVDI1ME9XTjZiekJOVkc5cFFVaENiMk5GVW5aWk0xWjBXbGMxTUdJelNtTlZiVlp0WWtkV2FtUkhiSFppYkhoUllVaENZMUp0YkhOYVVVSXdZMjFHY0dSSVRXbFBNa1UyVFVSd04yWllNRDBuS1NrN0Nnb3ZLaUJEYUdsc1pDQlVlWEJsT2lCcGJuUmxaMlZ5SUNvdkNpUmtZWFJoV3lkamNtVmhkR1ZrVDI0blhTQTlJREUxTWpZNU56VXdNRFE3Q2lJN2N6bzBOVG9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJ1WVcxbGMzQmhZMlZ6SWp0aE9qQTZlMzF6T2pRek9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFHbHVZMngxWkdWeklqdGhPakE2ZTMxek9qUTBPaUlBY0dod1JHOWpkVzFsYm5SdmNseFNaV1pzWldOMGFXOXVYRkJvY0Z4R2FXeGxBR1oxYm1OMGFXOXVjeUk3WVRvd09udDljem8wTkRvaUFIQm9jRVJ2WTNWdFpXNTBiM0pjVW1WbWJHVmpkR2x2Ymx4UWFIQmNSbWxzWlFCamIyNXpkR0Z1ZEhNaU8yRTZNRHA3ZlhNNk5ESTZJZ0J3YUhCRWIyTjFiV1Z1ZEc5eVhGSmxabXhsWTNScGIyNWNVR2h3WEVacGJHVUFZMnhoYzNObGN5STdZVG93T250OWN6bzBOVG9pQUhCb2NFUnZZM1Z0Wlc1MGIzSmNVbVZtYkdWamRHbHZibHhRYUhCY1JtbHNaUUJwYm5SbGNtWmhZMlZ6SWp0aE9qQTZlMzF6T2pReE9pSUFjR2h3Ukc5amRXMWxiblJ2Y2x4U1pXWnNaV04wYVc5dVhGQm9jRnhHYVd4bEFIUnlZV2wwY3lJN1lUb3dPbnQ5ZlE9PScpKTsKCi8qIENoaWxkIFR5cGU6IGludGVnZXIgKi8KJGRhdGFbJ2NyZWF0ZWRPbiddID0gMTUyNjk3OTExNDsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319'));

/* Child Type: integer */
$data['createdOn'] = 1526979192;
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}'));

/* Child Type: integer */
$data['createdOn'] = 1526979580;
