<?php 
/* Cachekey: cache/stash_default/documentation\api\php\c60dd0b5fdb6f7327bde5c48e74fe44c/ */
/* Type: array */
/* Expiration: 2018-05-26T17:44:58+00:00 */



$loaded = true;
$expiration = 1527356698;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979580;
