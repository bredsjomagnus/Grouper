<?php 
/* Cachekey: cache/stash_default/documentation\api\php\ccddd16f7c4f436aa4c5a58b54101e3b/ */
/* Type: array */
/* Expiration: 2018-05-26T17:45:17+00:00 */



$loaded = true;
$expiration = 1527356717;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979193;
