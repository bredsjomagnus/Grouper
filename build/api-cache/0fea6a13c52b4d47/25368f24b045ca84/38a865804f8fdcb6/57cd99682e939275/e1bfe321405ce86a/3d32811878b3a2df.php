<?php 
/* Cachekey: cache/stash_default/documentation\api\php\768390fa0bbdd9069f20f8b2a192fe3f/ */
/* Type: array */
/* Expiration: 2018-05-27T01:43:41+00:00 */



$loaded = true;
$expiration = 1527385421;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979583;
