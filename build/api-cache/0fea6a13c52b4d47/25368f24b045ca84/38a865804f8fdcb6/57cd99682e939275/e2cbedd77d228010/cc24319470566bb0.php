<?php 
/* Cachekey: cache/stash_default/documentation\api\php\e5d1f9ed6f336a77a288702e796bd48e/ */
/* Type: array */
/* Expiration: 2018-06-04T20:40:18+00:00 */



$loaded = true;
$expiration = 1528144818;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755138;
