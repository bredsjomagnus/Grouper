<?php 
/* Cachekey: cache/stash_default/documentation\api\php\9165622c5e378fc8544901d4e83633bf/ */
/* Type: array */
/* Expiration: 2018-06-04T16:58:39+00:00 */



$loaded = true;
$expiration = 1528131519;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755153;
