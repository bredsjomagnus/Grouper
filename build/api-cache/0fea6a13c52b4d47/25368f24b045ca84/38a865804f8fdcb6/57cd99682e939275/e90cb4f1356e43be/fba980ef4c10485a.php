<?php 
/* Cachekey: cache/stash_default/documentation\api\php\056b4e5a7ada2cf02a99587d313ef07a/ */
/* Type: array */
/* Expiration: 2018-06-05T04:02:34+00:00 */



$loaded = true;
$expiration = 1528171354;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755153;
