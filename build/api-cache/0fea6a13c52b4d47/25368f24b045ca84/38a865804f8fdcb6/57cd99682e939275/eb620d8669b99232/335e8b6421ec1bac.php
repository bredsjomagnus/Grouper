<?php 
/* Cachekey: cache/stash_default/documentation\api\php\d9dea6a6899fc7622f0931fbad36a26a/ */
/* Type: array */
/* Expiration: 2018-05-26T23:24:40+00:00 */



$loaded = true;
$expiration = 1527377080;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979195;
