<?php 
/* Cachekey: cache/stash_default/documentation\api\php\01a1d002fd2c5be78ae06bf745302f9f/ */
/* Type: array */
/* Expiration: 2018-05-26T15:39:41+00:00 */



$loaded = true;
$expiration = 1527349181;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1526979584;
