<?php 
/* Cachekey: cache/stash_default/documentation\api\php\20cc114d53a299a853f8646b289bcc99/ */
/* Type: array */
/* Expiration: 2018-06-04T19:10:04+00:00 */



$loaded = true;
$expiration = 1528139404;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755147;
