<?php 
/* Cachekey: cache/stash_default/documentation\api\php\2f7619b128c6f783ce07c557e4acc356/ */
/* Type: array */
/* Expiration: 2018-06-04T16:10:15+00:00 */



$loaded = true;
$expiration = 1528128615;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755126;
