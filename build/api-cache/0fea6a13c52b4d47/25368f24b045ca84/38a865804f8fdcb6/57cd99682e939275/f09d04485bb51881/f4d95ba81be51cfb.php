<?php 
/* Cachekey: cache/stash_default/documentation\api\php\6949f0cc81c394d2c3049287d4664aa7/ */
/* Type: array */
/* Expiration: 2018-06-04T21:17:04+00:00 */



$loaded = true;
$expiration = 1528147024;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755146;
