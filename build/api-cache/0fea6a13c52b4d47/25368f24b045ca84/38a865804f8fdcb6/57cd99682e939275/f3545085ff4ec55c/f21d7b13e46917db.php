<?php 
/* Cachekey: cache/stash_default/documentation\api\php\431e058aca836506e583ce9f12d9c17b/ */
/* Type: array */
/* Expiration: 2018-06-04T20:09:49+00:00 */



$loaded = true;
$expiration = 1528142989;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755152;
