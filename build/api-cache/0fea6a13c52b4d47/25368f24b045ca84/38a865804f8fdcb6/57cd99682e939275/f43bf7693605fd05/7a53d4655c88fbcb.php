<?php 
/* Cachekey: cache/stash_default/documentation\api\php\d0428cd2cf418c5944481ab732cc93f1/ */
/* Type: array */
/* Expiration: 2018-06-05T06:06:30+00:00 */



$loaded = true;
$expiration = 1528178790;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755152;
