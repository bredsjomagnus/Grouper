<?php 
/* Cachekey: cache/stash_default/documentation\api\php\2dc3da2c7dbb81b4f91f84817b1428d3/ */
/* Type: array */
/* Expiration: 2018-06-04T21:34:11+00:00 */



$loaded = true;
$expiration = 1528148051;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755152;
