<?php 
/* Cachekey: cache/stash_default/documentation\api\php\1e3cba5a373abe17789ffb2d5bfb4918/ */
/* Type: array */
/* Expiration: 2018-06-05T06:36:35+00:00 */



$loaded = true;
$expiration = 1528180595;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1527755136;
